// source: io/raw/project.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global = (function() {
  if (this) { return this; }
  if (typeof window !== 'undefined') { return window; }
  if (typeof global !== 'undefined') { return global; }
  if (typeof self !== 'undefined') { return self; }
  return Function('return this')();
}.call(null));

var google_protobuf_timestamp_pb = require('google-protobuf/google/protobuf/timestamp_pb.js');
goog.object.extend(proto, google_protobuf_timestamp_pb);
var io_common_distribution_pb = require('../../io/common/distribution_pb.js');
goog.object.extend(proto, io_common_distribution_pb);
var io_common_localization_pb = require('../../io/common/localization_pb.js');
goog.object.extend(proto, io_common_localization_pb);
var io_common_project_pb = require('../../io/common/project_pb.js');
goog.object.extend(proto, io_common_project_pb);
var io_common_billing_pb = require('../../io/common/billing_pb.js');
goog.object.extend(proto, io_common_billing_pb);
goog.exportSymbol('proto.raw.PassProject', null, global);
goog.exportSymbol('proto.raw.PassProjectCopyRequest', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.raw.PassProject = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.raw.PassProject.repeatedFields_, null);
};
goog.inherits(proto.raw.PassProject, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.raw.PassProject.displayName = 'proto.raw.PassProject';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.raw.PassProjectCopyRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.raw.PassProjectCopyRequest.repeatedFields_, null);
};
goog.inherits(proto.raw.PassProjectCopyRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.raw.PassProjectCopyRequest.displayName = 'proto.raw.PassProjectCopyRequest';
}

/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.raw.PassProject.repeatedFields_ = [4];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.raw.PassProject.prototype.toObject = function(opt_includeInstance) {
  return proto.raw.PassProject.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.raw.PassProject} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.raw.PassProject.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, ""),
    name: jspb.Message.getFieldWithDefault(msg, 2, ""),
    localizedname: (f = msg.getLocalizedname()) && io_common_localization_pb.LocalizedString.toObject(includeInstance, f),
    statusList: (f = jspb.Message.getRepeatedField(msg, 4)) == null ? undefined : f,
    quota: (f = msg.getQuota()) && io_common_billing_pb.Quota.toObject(includeInstance, f),
    passtypeidentifier: jspb.Message.getFieldWithDefault(msg, 6, ""),
    distributionsettings: (f = msg.getDistributionsettings()) && io_common_distribution_pb.DistributionSettings.toObject(includeInstance, f),
    created: (f = msg.getCreated()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
    updated: (f = msg.getUpdated()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.raw.PassProject}
 */
proto.raw.PassProject.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.raw.PassProject;
  return proto.raw.PassProject.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.raw.PassProject} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.raw.PassProject}
 */
proto.raw.PassProject.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 3:
      var value = new io_common_localization_pb.LocalizedString;
      reader.readMessage(value,io_common_localization_pb.LocalizedString.deserializeBinaryFromReader);
      msg.setLocalizedname(value);
      break;
    case 4:
      var values = /** @type {!Array<!proto.io.ProjectStatus>} */ (reader.isDelimited() ? reader.readPackedEnum() : [reader.readEnum()]);
      for (var i = 0; i < values.length; i++) {
        msg.addStatus(values[i]);
      }
      break;
    case 5:
      var value = new io_common_billing_pb.Quota;
      reader.readMessage(value,io_common_billing_pb.Quota.deserializeBinaryFromReader);
      msg.setQuota(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setPasstypeidentifier(value);
      break;
    case 7:
      var value = new io_common_distribution_pb.DistributionSettings;
      reader.readMessage(value,io_common_distribution_pb.DistributionSettings.deserializeBinaryFromReader);
      msg.setDistributionsettings(value);
      break;
    case 8:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setCreated(value);
      break;
    case 9:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setUpdated(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.raw.PassProject.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.raw.PassProject.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.raw.PassProject} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.raw.PassProject.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getLocalizedname();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      io_common_localization_pb.LocalizedString.serializeBinaryToWriter
    );
  }
  f = message.getStatusList();
  if (f.length > 0) {
    writer.writePackedEnum(
      4,
      f
    );
  }
  f = message.getQuota();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      io_common_billing_pb.Quota.serializeBinaryToWriter
    );
  }
  f = message.getPasstypeidentifier();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getDistributionsettings();
  if (f != null) {
    writer.writeMessage(
      7,
      f,
      io_common_distribution_pb.DistributionSettings.serializeBinaryToWriter
    );
  }
  f = message.getCreated();
  if (f != null) {
    writer.writeMessage(
      8,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getUpdated();
  if (f != null) {
    writer.writeMessage(
      9,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.raw.PassProject.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.raw.PassProject} returns this
 */
proto.raw.PassProject.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string name = 2;
 * @return {string}
 */
proto.raw.PassProject.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.raw.PassProject} returns this
 */
proto.raw.PassProject.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional io.LocalizedString localizedName = 3;
 * @return {?proto.io.LocalizedString}
 */
proto.raw.PassProject.prototype.getLocalizedname = function() {
  return /** @type{?proto.io.LocalizedString} */ (
    jspb.Message.getWrapperField(this, io_common_localization_pb.LocalizedString, 3));
};


/**
 * @param {?proto.io.LocalizedString|undefined} value
 * @return {!proto.raw.PassProject} returns this
*/
proto.raw.PassProject.prototype.setLocalizedname = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.raw.PassProject} returns this
 */
proto.raw.PassProject.prototype.clearLocalizedname = function() {
  return this.setLocalizedname(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.raw.PassProject.prototype.hasLocalizedname = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * repeated io.ProjectStatus status = 4;
 * @return {!Array<!proto.io.ProjectStatus>}
 */
proto.raw.PassProject.prototype.getStatusList = function() {
  return /** @type {!Array<!proto.io.ProjectStatus>} */ (jspb.Message.getRepeatedField(this, 4));
};


/**
 * @param {!Array<!proto.io.ProjectStatus>} value
 * @return {!proto.raw.PassProject} returns this
 */
proto.raw.PassProject.prototype.setStatusList = function(value) {
  return jspb.Message.setField(this, 4, value || []);
};


/**
 * @param {!proto.io.ProjectStatus} value
 * @param {number=} opt_index
 * @return {!proto.raw.PassProject} returns this
 */
proto.raw.PassProject.prototype.addStatus = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 4, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.raw.PassProject} returns this
 */
proto.raw.PassProject.prototype.clearStatusList = function() {
  return this.setStatusList([]);
};


/**
 * optional io.Quota quota = 5;
 * @return {?proto.io.Quota}
 */
proto.raw.PassProject.prototype.getQuota = function() {
  return /** @type{?proto.io.Quota} */ (
    jspb.Message.getWrapperField(this, io_common_billing_pb.Quota, 5));
};


/**
 * @param {?proto.io.Quota|undefined} value
 * @return {!proto.raw.PassProject} returns this
*/
proto.raw.PassProject.prototype.setQuota = function(value) {
  return jspb.Message.setWrapperField(this, 5, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.raw.PassProject} returns this
 */
proto.raw.PassProject.prototype.clearQuota = function() {
  return this.setQuota(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.raw.PassProject.prototype.hasQuota = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional string passTypeIdentifier = 6;
 * @return {string}
 */
proto.raw.PassProject.prototype.getPasstypeidentifier = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.raw.PassProject} returns this
 */
proto.raw.PassProject.prototype.setPasstypeidentifier = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional io.DistributionSettings distributionSettings = 7;
 * @return {?proto.io.DistributionSettings}
 */
proto.raw.PassProject.prototype.getDistributionsettings = function() {
  return /** @type{?proto.io.DistributionSettings} */ (
    jspb.Message.getWrapperField(this, io_common_distribution_pb.DistributionSettings, 7));
};


/**
 * @param {?proto.io.DistributionSettings|undefined} value
 * @return {!proto.raw.PassProject} returns this
*/
proto.raw.PassProject.prototype.setDistributionsettings = function(value) {
  return jspb.Message.setWrapperField(this, 7, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.raw.PassProject} returns this
 */
proto.raw.PassProject.prototype.clearDistributionsettings = function() {
  return this.setDistributionsettings(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.raw.PassProject.prototype.hasDistributionsettings = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * optional google.protobuf.Timestamp created = 8;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.raw.PassProject.prototype.getCreated = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 8));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.raw.PassProject} returns this
*/
proto.raw.PassProject.prototype.setCreated = function(value) {
  return jspb.Message.setWrapperField(this, 8, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.raw.PassProject} returns this
 */
proto.raw.PassProject.prototype.clearCreated = function() {
  return this.setCreated(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.raw.PassProject.prototype.hasCreated = function() {
  return jspb.Message.getField(this, 8) != null;
};


/**
 * optional google.protobuf.Timestamp updated = 9;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.raw.PassProject.prototype.getUpdated = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 9));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.raw.PassProject} returns this
*/
proto.raw.PassProject.prototype.setUpdated = function(value) {
  return jspb.Message.setWrapperField(this, 9, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.raw.PassProject} returns this
 */
proto.raw.PassProject.prototype.clearUpdated = function() {
  return this.setUpdated(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.raw.PassProject.prototype.hasUpdated = function() {
  return jspb.Message.getField(this, 9) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.raw.PassProjectCopyRequest.repeatedFields_ = [3];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.raw.PassProjectCopyRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.raw.PassProjectCopyRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.raw.PassProjectCopyRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.raw.PassProjectCopyRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, ""),
    name: jspb.Message.getFieldWithDefault(msg, 2, ""),
    statusList: (f = jspb.Message.getRepeatedField(msg, 3)) == null ? undefined : f,
    passtypeidentifier: jspb.Message.getFieldWithDefault(msg, 4, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.raw.PassProjectCopyRequest}
 */
proto.raw.PassProjectCopyRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.raw.PassProjectCopyRequest;
  return proto.raw.PassProjectCopyRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.raw.PassProjectCopyRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.raw.PassProjectCopyRequest}
 */
proto.raw.PassProjectCopyRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 3:
      var values = /** @type {!Array<!proto.io.ProjectStatus>} */ (reader.isDelimited() ? reader.readPackedEnum() : [reader.readEnum()]);
      for (var i = 0; i < values.length; i++) {
        msg.addStatus(values[i]);
      }
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setPasstypeidentifier(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.raw.PassProjectCopyRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.raw.PassProjectCopyRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.raw.PassProjectCopyRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.raw.PassProjectCopyRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getStatusList();
  if (f.length > 0) {
    writer.writePackedEnum(
      3,
      f
    );
  }
  f = message.getPasstypeidentifier();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.raw.PassProjectCopyRequest.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.raw.PassProjectCopyRequest} returns this
 */
proto.raw.PassProjectCopyRequest.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string name = 2;
 * @return {string}
 */
proto.raw.PassProjectCopyRequest.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.raw.PassProjectCopyRequest} returns this
 */
proto.raw.PassProjectCopyRequest.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * repeated io.ProjectStatus status = 3;
 * @return {!Array<!proto.io.ProjectStatus>}
 */
proto.raw.PassProjectCopyRequest.prototype.getStatusList = function() {
  return /** @type {!Array<!proto.io.ProjectStatus>} */ (jspb.Message.getRepeatedField(this, 3));
};


/**
 * @param {!Array<!proto.io.ProjectStatus>} value
 * @return {!proto.raw.PassProjectCopyRequest} returns this
 */
proto.raw.PassProjectCopyRequest.prototype.setStatusList = function(value) {
  return jspb.Message.setField(this, 3, value || []);
};


/**
 * @param {!proto.io.ProjectStatus} value
 * @param {number=} opt_index
 * @return {!proto.raw.PassProjectCopyRequest} returns this
 */
proto.raw.PassProjectCopyRequest.prototype.addStatus = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 3, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.raw.PassProjectCopyRequest} returns this
 */
proto.raw.PassProjectCopyRequest.prototype.clearStatusList = function() {
  return this.setStatusList([]);
};


/**
 * optional string passTypeIdentifier = 4;
 * @return {string}
 */
proto.raw.PassProjectCopyRequest.prototype.getPasstypeidentifier = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.raw.PassProjectCopyRequest} returns this
 */
proto.raw.PassProjectCopyRequest.prototype.setPasstypeidentifier = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


goog.object.extend(exports, proto.raw);
