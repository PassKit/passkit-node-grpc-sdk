// source: io/raw/pass.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global = (function() {
  if (this) { return this; }
  if (typeof window !== 'undefined') { return window; }
  if (typeof global !== 'undefined') { return global; }
  if (typeof self !== 'undefined') { return self; }
  return Function('return this')();
}.call(null));

var google_protobuf_timestamp_pb = require('google-protobuf/google/protobuf/timestamp_pb.js');
goog.object.extend(proto, google_protobuf_timestamp_pb);
var io_common_metrics_pb = require('../../io/common/metrics_pb.js');
goog.object.extend(proto, io_common_metrics_pb);
var io_common_filter_pb = require('../../io/common/filter_pb.js');
goog.object.extend(proto, io_common_filter_pb);
var io_common_pass_pb = require('../../io/common/pass_pb.js');
goog.object.extend(proto, io_common_pass_pb);
var io_common_personal_pb = require('../../io/common/personal_pb.js');
goog.object.extend(proto, io_common_personal_pb);
goog.exportSymbol('proto.raw.ListPassesByPassProjectRequest', null, global);
goog.exportSymbol('proto.raw.ListPassesByPassTemplateRequest', null, global);
goog.exportSymbol('proto.raw.Pass', null, global);
goog.exportSymbol('proto.raw.PassRecordByExternalIdRequest', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.raw.Pass = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.raw.Pass, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.raw.Pass.displayName = 'proto.raw.Pass';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.raw.PassRecordByExternalIdRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.raw.PassRecordByExternalIdRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.raw.PassRecordByExternalIdRequest.displayName = 'proto.raw.PassRecordByExternalIdRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.raw.ListPassesByPassProjectRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.raw.ListPassesByPassProjectRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.raw.ListPassesByPassProjectRequest.displayName = 'proto.raw.ListPassesByPassProjectRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.raw.ListPassesByPassTemplateRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.raw.ListPassesByPassTemplateRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.raw.ListPassesByPassTemplateRequest.displayName = 'proto.raw.ListPassesByPassTemplateRequest';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.raw.Pass.prototype.toObject = function(opt_includeInstance) {
  return proto.raw.Pass.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.raw.Pass} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.raw.Pass.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, ""),
    externalid: jspb.Message.getFieldWithDefault(msg, 2, ""),
    passprojectid: jspb.Message.getFieldWithDefault(msg, 3, ""),
    passtemplateid: jspb.Message.getFieldWithDefault(msg, 4, ""),
    personaldetails: (f = msg.getPersonaldetails()) && io_common_personal_pb.Person.toObject(includeInstance, f),
    dynamicdataMap: (f = msg.getDynamicdataMap()) ? f.toObject(includeInstance, undefined) : [],
    optout: jspb.Message.getBooleanFieldWithDefault(msg, 8, false),
    isvoided: jspb.Message.getBooleanFieldWithDefault(msg, 9, false),
    invalidatedate: (f = msg.getInvalidatedate()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
    expirydate: (f = msg.getExpirydate()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
    passoptions: (f = msg.getPassoptions()) && io_common_pass_pb.PassOptions.toObject(includeInstance, f),
    passoverrides: (f = msg.getPassoverrides()) && io_common_pass_pb.PassOverrides.toObject(includeInstance, f),
    passmetadata: (f = msg.getPassmetadata()) && io_common_metrics_pb.Metadata.toObject(includeInstance, f),
    created: (f = msg.getCreated()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
    updated: (f = msg.getUpdated()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.raw.Pass}
 */
proto.raw.Pass.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.raw.Pass;
  return proto.raw.Pass.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.raw.Pass} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.raw.Pass}
 */
proto.raw.Pass.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setExternalid(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setPassprojectid(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setPasstemplateid(value);
      break;
    case 5:
      var value = new io_common_personal_pb.Person;
      reader.readMessage(value,io_common_personal_pb.Person.deserializeBinaryFromReader);
      msg.setPersonaldetails(value);
      break;
    case 6:
      var value = msg.getDynamicdataMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readString, null, "", "");
         });
      break;
    case 8:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setOptout(value);
      break;
    case 9:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsvoided(value);
      break;
    case 10:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setInvalidatedate(value);
      break;
    case 11:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setExpirydate(value);
      break;
    case 12:
      var value = new io_common_pass_pb.PassOptions;
      reader.readMessage(value,io_common_pass_pb.PassOptions.deserializeBinaryFromReader);
      msg.setPassoptions(value);
      break;
    case 13:
      var value = new io_common_pass_pb.PassOverrides;
      reader.readMessage(value,io_common_pass_pb.PassOverrides.deserializeBinaryFromReader);
      msg.setPassoverrides(value);
      break;
    case 14:
      var value = new io_common_metrics_pb.Metadata;
      reader.readMessage(value,io_common_metrics_pb.Metadata.deserializeBinaryFromReader);
      msg.setPassmetadata(value);
      break;
    case 15:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setCreated(value);
      break;
    case 16:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setUpdated(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.raw.Pass.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.raw.Pass.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.raw.Pass} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.raw.Pass.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getExternalid();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getPassprojectid();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getPasstemplateid();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getPersonaldetails();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      io_common_personal_pb.Person.serializeBinaryToWriter
    );
  }
  f = message.getDynamicdataMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(6, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeString);
  }
  f = message.getOptout();
  if (f) {
    writer.writeBool(
      8,
      f
    );
  }
  f = message.getIsvoided();
  if (f) {
    writer.writeBool(
      9,
      f
    );
  }
  f = message.getInvalidatedate();
  if (f != null) {
    writer.writeMessage(
      10,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getExpirydate();
  if (f != null) {
    writer.writeMessage(
      11,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getPassoptions();
  if (f != null) {
    writer.writeMessage(
      12,
      f,
      io_common_pass_pb.PassOptions.serializeBinaryToWriter
    );
  }
  f = message.getPassoverrides();
  if (f != null) {
    writer.writeMessage(
      13,
      f,
      io_common_pass_pb.PassOverrides.serializeBinaryToWriter
    );
  }
  f = message.getPassmetadata();
  if (f != null) {
    writer.writeMessage(
      14,
      f,
      io_common_metrics_pb.Metadata.serializeBinaryToWriter
    );
  }
  f = message.getCreated();
  if (f != null) {
    writer.writeMessage(
      15,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getUpdated();
  if (f != null) {
    writer.writeMessage(
      16,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.raw.Pass.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.raw.Pass} returns this
 */
proto.raw.Pass.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string externalId = 2;
 * @return {string}
 */
proto.raw.Pass.prototype.getExternalid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.raw.Pass} returns this
 */
proto.raw.Pass.prototype.setExternalid = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string passProjectId = 3;
 * @return {string}
 */
proto.raw.Pass.prototype.getPassprojectid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.raw.Pass} returns this
 */
proto.raw.Pass.prototype.setPassprojectid = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string passTemplateId = 4;
 * @return {string}
 */
proto.raw.Pass.prototype.getPasstemplateid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.raw.Pass} returns this
 */
proto.raw.Pass.prototype.setPasstemplateid = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional io.Person personalDetails = 5;
 * @return {?proto.io.Person}
 */
proto.raw.Pass.prototype.getPersonaldetails = function() {
  return /** @type{?proto.io.Person} */ (
    jspb.Message.getWrapperField(this, io_common_personal_pb.Person, 5));
};


/**
 * @param {?proto.io.Person|undefined} value
 * @return {!proto.raw.Pass} returns this
*/
proto.raw.Pass.prototype.setPersonaldetails = function(value) {
  return jspb.Message.setWrapperField(this, 5, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.raw.Pass} returns this
 */
proto.raw.Pass.prototype.clearPersonaldetails = function() {
  return this.setPersonaldetails(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.raw.Pass.prototype.hasPersonaldetails = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * map<string, string> dynamicData = 6;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<string,string>}
 */
proto.raw.Pass.prototype.getDynamicdataMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<string,string>} */ (
      jspb.Message.getMapField(this, 6, opt_noLazyCreate,
      null));
};


/**
 * Clears values from the map. The map will be non-null.
 * @return {!proto.raw.Pass} returns this
 */
proto.raw.Pass.prototype.clearDynamicdataMap = function() {
  this.getDynamicdataMap().clear();
  return this;};


/**
 * optional bool optOut = 8;
 * @return {boolean}
 */
proto.raw.Pass.prototype.getOptout = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 8, false));
};


/**
 * @param {boolean} value
 * @return {!proto.raw.Pass} returns this
 */
proto.raw.Pass.prototype.setOptout = function(value) {
  return jspb.Message.setProto3BooleanField(this, 8, value);
};


/**
 * optional bool isVoided = 9;
 * @return {boolean}
 */
proto.raw.Pass.prototype.getIsvoided = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 9, false));
};


/**
 * @param {boolean} value
 * @return {!proto.raw.Pass} returns this
 */
proto.raw.Pass.prototype.setIsvoided = function(value) {
  return jspb.Message.setProto3BooleanField(this, 9, value);
};


/**
 * optional google.protobuf.Timestamp invalidateDate = 10;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.raw.Pass.prototype.getInvalidatedate = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 10));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.raw.Pass} returns this
*/
proto.raw.Pass.prototype.setInvalidatedate = function(value) {
  return jspb.Message.setWrapperField(this, 10, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.raw.Pass} returns this
 */
proto.raw.Pass.prototype.clearInvalidatedate = function() {
  return this.setInvalidatedate(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.raw.Pass.prototype.hasInvalidatedate = function() {
  return jspb.Message.getField(this, 10) != null;
};


/**
 * optional google.protobuf.Timestamp expiryDate = 11;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.raw.Pass.prototype.getExpirydate = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 11));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.raw.Pass} returns this
*/
proto.raw.Pass.prototype.setExpirydate = function(value) {
  return jspb.Message.setWrapperField(this, 11, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.raw.Pass} returns this
 */
proto.raw.Pass.prototype.clearExpirydate = function() {
  return this.setExpirydate(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.raw.Pass.prototype.hasExpirydate = function() {
  return jspb.Message.getField(this, 11) != null;
};


/**
 * optional io.PassOptions passOptions = 12;
 * @return {?proto.io.PassOptions}
 */
proto.raw.Pass.prototype.getPassoptions = function() {
  return /** @type{?proto.io.PassOptions} */ (
    jspb.Message.getWrapperField(this, io_common_pass_pb.PassOptions, 12));
};


/**
 * @param {?proto.io.PassOptions|undefined} value
 * @return {!proto.raw.Pass} returns this
*/
proto.raw.Pass.prototype.setPassoptions = function(value) {
  return jspb.Message.setWrapperField(this, 12, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.raw.Pass} returns this
 */
proto.raw.Pass.prototype.clearPassoptions = function() {
  return this.setPassoptions(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.raw.Pass.prototype.hasPassoptions = function() {
  return jspb.Message.getField(this, 12) != null;
};


/**
 * optional io.PassOverrides passOverrides = 13;
 * @return {?proto.io.PassOverrides}
 */
proto.raw.Pass.prototype.getPassoverrides = function() {
  return /** @type{?proto.io.PassOverrides} */ (
    jspb.Message.getWrapperField(this, io_common_pass_pb.PassOverrides, 13));
};


/**
 * @param {?proto.io.PassOverrides|undefined} value
 * @return {!proto.raw.Pass} returns this
*/
proto.raw.Pass.prototype.setPassoverrides = function(value) {
  return jspb.Message.setWrapperField(this, 13, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.raw.Pass} returns this
 */
proto.raw.Pass.prototype.clearPassoverrides = function() {
  return this.setPassoverrides(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.raw.Pass.prototype.hasPassoverrides = function() {
  return jspb.Message.getField(this, 13) != null;
};


/**
 * optional io.Metadata passMetaData = 14;
 * @return {?proto.io.Metadata}
 */
proto.raw.Pass.prototype.getPassmetadata = function() {
  return /** @type{?proto.io.Metadata} */ (
    jspb.Message.getWrapperField(this, io_common_metrics_pb.Metadata, 14));
};


/**
 * @param {?proto.io.Metadata|undefined} value
 * @return {!proto.raw.Pass} returns this
*/
proto.raw.Pass.prototype.setPassmetadata = function(value) {
  return jspb.Message.setWrapperField(this, 14, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.raw.Pass} returns this
 */
proto.raw.Pass.prototype.clearPassmetadata = function() {
  return this.setPassmetadata(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.raw.Pass.prototype.hasPassmetadata = function() {
  return jspb.Message.getField(this, 14) != null;
};


/**
 * optional google.protobuf.Timestamp created = 15;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.raw.Pass.prototype.getCreated = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 15));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.raw.Pass} returns this
*/
proto.raw.Pass.prototype.setCreated = function(value) {
  return jspb.Message.setWrapperField(this, 15, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.raw.Pass} returns this
 */
proto.raw.Pass.prototype.clearCreated = function() {
  return this.setCreated(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.raw.Pass.prototype.hasCreated = function() {
  return jspb.Message.getField(this, 15) != null;
};


/**
 * optional google.protobuf.Timestamp updated = 16;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.raw.Pass.prototype.getUpdated = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 16));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.raw.Pass} returns this
*/
proto.raw.Pass.prototype.setUpdated = function(value) {
  return jspb.Message.setWrapperField(this, 16, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.raw.Pass} returns this
 */
proto.raw.Pass.prototype.clearUpdated = function() {
  return this.setUpdated(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.raw.Pass.prototype.hasUpdated = function() {
  return jspb.Message.getField(this, 16) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.raw.PassRecordByExternalIdRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.raw.PassRecordByExternalIdRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.raw.PassRecordByExternalIdRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.raw.PassRecordByExternalIdRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    passprojectid: jspb.Message.getFieldWithDefault(msg, 1, ""),
    externalid: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.raw.PassRecordByExternalIdRequest}
 */
proto.raw.PassRecordByExternalIdRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.raw.PassRecordByExternalIdRequest;
  return proto.raw.PassRecordByExternalIdRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.raw.PassRecordByExternalIdRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.raw.PassRecordByExternalIdRequest}
 */
proto.raw.PassRecordByExternalIdRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setPassprojectid(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setExternalid(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.raw.PassRecordByExternalIdRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.raw.PassRecordByExternalIdRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.raw.PassRecordByExternalIdRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.raw.PassRecordByExternalIdRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPassprojectid();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getExternalid();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional string passProjectId = 1;
 * @return {string}
 */
proto.raw.PassRecordByExternalIdRequest.prototype.getPassprojectid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.raw.PassRecordByExternalIdRequest} returns this
 */
proto.raw.PassRecordByExternalIdRequest.prototype.setPassprojectid = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string externalId = 2;
 * @return {string}
 */
proto.raw.PassRecordByExternalIdRequest.prototype.getExternalid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.raw.PassRecordByExternalIdRequest} returns this
 */
proto.raw.PassRecordByExternalIdRequest.prototype.setExternalid = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.raw.ListPassesByPassProjectRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.raw.ListPassesByPassProjectRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.raw.ListPassesByPassProjectRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.raw.ListPassesByPassProjectRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    passprojectid: jspb.Message.getFieldWithDefault(msg, 1, ""),
    filters: (f = msg.getFilters()) && io_common_filter_pb.Filters.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.raw.ListPassesByPassProjectRequest}
 */
proto.raw.ListPassesByPassProjectRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.raw.ListPassesByPassProjectRequest;
  return proto.raw.ListPassesByPassProjectRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.raw.ListPassesByPassProjectRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.raw.ListPassesByPassProjectRequest}
 */
proto.raw.ListPassesByPassProjectRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setPassprojectid(value);
      break;
    case 2:
      var value = new io_common_filter_pb.Filters;
      reader.readMessage(value,io_common_filter_pb.Filters.deserializeBinaryFromReader);
      msg.setFilters(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.raw.ListPassesByPassProjectRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.raw.ListPassesByPassProjectRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.raw.ListPassesByPassProjectRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.raw.ListPassesByPassProjectRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPassprojectid();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getFilters();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      io_common_filter_pb.Filters.serializeBinaryToWriter
    );
  }
};


/**
 * optional string passProjectId = 1;
 * @return {string}
 */
proto.raw.ListPassesByPassProjectRequest.prototype.getPassprojectid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.raw.ListPassesByPassProjectRequest} returns this
 */
proto.raw.ListPassesByPassProjectRequest.prototype.setPassprojectid = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional io.Filters filters = 2;
 * @return {?proto.io.Filters}
 */
proto.raw.ListPassesByPassProjectRequest.prototype.getFilters = function() {
  return /** @type{?proto.io.Filters} */ (
    jspb.Message.getWrapperField(this, io_common_filter_pb.Filters, 2));
};


/**
 * @param {?proto.io.Filters|undefined} value
 * @return {!proto.raw.ListPassesByPassProjectRequest} returns this
*/
proto.raw.ListPassesByPassProjectRequest.prototype.setFilters = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.raw.ListPassesByPassProjectRequest} returns this
 */
proto.raw.ListPassesByPassProjectRequest.prototype.clearFilters = function() {
  return this.setFilters(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.raw.ListPassesByPassProjectRequest.prototype.hasFilters = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.raw.ListPassesByPassTemplateRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.raw.ListPassesByPassTemplateRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.raw.ListPassesByPassTemplateRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.raw.ListPassesByPassTemplateRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    passprojectid: jspb.Message.getFieldWithDefault(msg, 1, ""),
    filters: (f = msg.getFilters()) && io_common_filter_pb.Filters.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.raw.ListPassesByPassTemplateRequest}
 */
proto.raw.ListPassesByPassTemplateRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.raw.ListPassesByPassTemplateRequest;
  return proto.raw.ListPassesByPassTemplateRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.raw.ListPassesByPassTemplateRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.raw.ListPassesByPassTemplateRequest}
 */
proto.raw.ListPassesByPassTemplateRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setPassprojectid(value);
      break;
    case 2:
      var value = new io_common_filter_pb.Filters;
      reader.readMessage(value,io_common_filter_pb.Filters.deserializeBinaryFromReader);
      msg.setFilters(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.raw.ListPassesByPassTemplateRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.raw.ListPassesByPassTemplateRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.raw.ListPassesByPassTemplateRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.raw.ListPassesByPassTemplateRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPassprojectid();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getFilters();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      io_common_filter_pb.Filters.serializeBinaryToWriter
    );
  }
};


/**
 * optional string passProjectId = 1;
 * @return {string}
 */
proto.raw.ListPassesByPassTemplateRequest.prototype.getPassprojectid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.raw.ListPassesByPassTemplateRequest} returns this
 */
proto.raw.ListPassesByPassTemplateRequest.prototype.setPassprojectid = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional io.Filters filters = 2;
 * @return {?proto.io.Filters}
 */
proto.raw.ListPassesByPassTemplateRequest.prototype.getFilters = function() {
  return /** @type{?proto.io.Filters} */ (
    jspb.Message.getWrapperField(this, io_common_filter_pb.Filters, 2));
};


/**
 * @param {?proto.io.Filters|undefined} value
 * @return {!proto.raw.ListPassesByPassTemplateRequest} returns this
*/
proto.raw.ListPassesByPassTemplateRequest.prototype.setFilters = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.raw.ListPassesByPassTemplateRequest} returns this
 */
proto.raw.ListPassesByPassTemplateRequest.prototype.clearFilters = function() {
  return this.setFilters(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.raw.ListPassesByPassTemplateRequest.prototype.hasFilters = function() {
  return jspb.Message.getField(this, 2) != null;
};


goog.object.extend(exports, proto.raw);
