// source: io/flights/passenger.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global = (function() {
  if (this) { return this; }
  if (typeof window !== 'undefined') { return window; }
  if (typeof global !== 'undefined') { return global; }
  if (typeof self !== 'undefined') { return self; }
  return Function('return this')();
}.call(null));

var io_flights_barcode_pb = require('../../io/flights/barcode_pb.js');
goog.object.extend(proto, io_flights_barcode_pb);
var io_common_common_objects_pb = require('../../io/common/common_objects_pb.js');
goog.object.extend(proto, io_common_common_objects_pb);
var io_common_personal_pb = require('../../io/common/personal_pb.js');
goog.object.extend(proto, io_common_personal_pb);
goog.exportSymbol('proto.flights.FrequentFlyerInfo', null, global);
goog.exportSymbol('proto.flights.IdentityDetails', null, global);
goog.exportSymbol('proto.flights.IdentityDocument', null, global);
goog.exportSymbol('proto.flights.Infant', null, global);
goog.exportSymbol('proto.flights.Passenger', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.flights.Passenger = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.flights.Passenger, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.flights.Passenger.displayName = 'proto.flights.Passenger';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.flights.FrequentFlyerInfo = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.flights.FrequentFlyerInfo, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.flights.FrequentFlyerInfo.displayName = 'proto.flights.FrequentFlyerInfo';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.flights.IdentityDetails = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.flights.IdentityDetails, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.flights.IdentityDetails.displayName = 'proto.flights.IdentityDetails';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.flights.Infant = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.flights.Infant, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.flights.Infant.displayName = 'proto.flights.Infant';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.flights.Passenger.prototype.toObject = function(opt_includeInstance) {
  return proto.flights.Passenger.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.flights.Passenger} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.flights.Passenger.toObject = function(includeInstance, msg) {
  var f, obj = {
    passengerdetails: (f = msg.getPassengerdetails()) && io_common_personal_pb.Person.toObject(includeInstance, f),
    frequentflyerinfo: (f = msg.getFrequentflyerinfo()) && proto.flights.FrequentFlyerInfo.toObject(includeInstance, f),
    identitydetails: (f = msg.getIdentitydetails()) && proto.flights.IdentityDetails.toObject(includeInstance, f),
    withinfant: jspb.Message.getBooleanFieldWithDefault(msg, 4, false),
    infantdetails: (f = msg.getInfantdetails()) && proto.flights.Infant.toObject(includeInstance, f),
    knowntravelernumber: jspb.Message.getFieldWithDefault(msg, 7, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.flights.Passenger}
 */
proto.flights.Passenger.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.flights.Passenger;
  return proto.flights.Passenger.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.flights.Passenger} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.flights.Passenger}
 */
proto.flights.Passenger.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new io_common_personal_pb.Person;
      reader.readMessage(value,io_common_personal_pb.Person.deserializeBinaryFromReader);
      msg.setPassengerdetails(value);
      break;
    case 2:
      var value = new proto.flights.FrequentFlyerInfo;
      reader.readMessage(value,proto.flights.FrequentFlyerInfo.deserializeBinaryFromReader);
      msg.setFrequentflyerinfo(value);
      break;
    case 3:
      var value = new proto.flights.IdentityDetails;
      reader.readMessage(value,proto.flights.IdentityDetails.deserializeBinaryFromReader);
      msg.setIdentitydetails(value);
      break;
    case 4:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setWithinfant(value);
      break;
    case 5:
      var value = new proto.flights.Infant;
      reader.readMessage(value,proto.flights.Infant.deserializeBinaryFromReader);
      msg.setInfantdetails(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setKnowntravelernumber(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.flights.Passenger.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.flights.Passenger.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.flights.Passenger} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.flights.Passenger.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPassengerdetails();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      io_common_personal_pb.Person.serializeBinaryToWriter
    );
  }
  f = message.getFrequentflyerinfo();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.flights.FrequentFlyerInfo.serializeBinaryToWriter
    );
  }
  f = message.getIdentitydetails();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.flights.IdentityDetails.serializeBinaryToWriter
    );
  }
  f = message.getWithinfant();
  if (f) {
    writer.writeBool(
      4,
      f
    );
  }
  f = message.getInfantdetails();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      proto.flights.Infant.serializeBinaryToWriter
    );
  }
  f = message.getKnowntravelernumber();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
};


/**
 * optional io.Person passengerDetails = 1;
 * @return {?proto.io.Person}
 */
proto.flights.Passenger.prototype.getPassengerdetails = function() {
  return /** @type{?proto.io.Person} */ (
    jspb.Message.getWrapperField(this, io_common_personal_pb.Person, 1));
};


/**
 * @param {?proto.io.Person|undefined} value
 * @return {!proto.flights.Passenger} returns this
*/
proto.flights.Passenger.prototype.setPassengerdetails = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.flights.Passenger} returns this
 */
proto.flights.Passenger.prototype.clearPassengerdetails = function() {
  return this.setPassengerdetails(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.flights.Passenger.prototype.hasPassengerdetails = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional FrequentFlyerInfo frequentFlyerInfo = 2;
 * @return {?proto.flights.FrequentFlyerInfo}
 */
proto.flights.Passenger.prototype.getFrequentflyerinfo = function() {
  return /** @type{?proto.flights.FrequentFlyerInfo} */ (
    jspb.Message.getWrapperField(this, proto.flights.FrequentFlyerInfo, 2));
};


/**
 * @param {?proto.flights.FrequentFlyerInfo|undefined} value
 * @return {!proto.flights.Passenger} returns this
*/
proto.flights.Passenger.prototype.setFrequentflyerinfo = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.flights.Passenger} returns this
 */
proto.flights.Passenger.prototype.clearFrequentflyerinfo = function() {
  return this.setFrequentflyerinfo(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.flights.Passenger.prototype.hasFrequentflyerinfo = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional IdentityDetails identityDetails = 3;
 * @return {?proto.flights.IdentityDetails}
 */
proto.flights.Passenger.prototype.getIdentitydetails = function() {
  return /** @type{?proto.flights.IdentityDetails} */ (
    jspb.Message.getWrapperField(this, proto.flights.IdentityDetails, 3));
};


/**
 * @param {?proto.flights.IdentityDetails|undefined} value
 * @return {!proto.flights.Passenger} returns this
*/
proto.flights.Passenger.prototype.setIdentitydetails = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.flights.Passenger} returns this
 */
proto.flights.Passenger.prototype.clearIdentitydetails = function() {
  return this.setIdentitydetails(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.flights.Passenger.prototype.hasIdentitydetails = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional bool withInfant = 4;
 * @return {boolean}
 */
proto.flights.Passenger.prototype.getWithinfant = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 4, false));
};


/**
 * @param {boolean} value
 * @return {!proto.flights.Passenger} returns this
 */
proto.flights.Passenger.prototype.setWithinfant = function(value) {
  return jspb.Message.setProto3BooleanField(this, 4, value);
};


/**
 * optional Infant infantDetails = 5;
 * @return {?proto.flights.Infant}
 */
proto.flights.Passenger.prototype.getInfantdetails = function() {
  return /** @type{?proto.flights.Infant} */ (
    jspb.Message.getWrapperField(this, proto.flights.Infant, 5));
};


/**
 * @param {?proto.flights.Infant|undefined} value
 * @return {!proto.flights.Passenger} returns this
*/
proto.flights.Passenger.prototype.setInfantdetails = function(value) {
  return jspb.Message.setWrapperField(this, 5, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.flights.Passenger} returns this
 */
proto.flights.Passenger.prototype.clearInfantdetails = function() {
  return this.setInfantdetails(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.flights.Passenger.prototype.hasInfantdetails = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional string knownTravelerNumber = 7;
 * @return {string}
 */
proto.flights.Passenger.prototype.getKnowntravelernumber = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.flights.Passenger} returns this
 */
proto.flights.Passenger.prototype.setKnowntravelernumber = function(value) {
  return jspb.Message.setProto3StringField(this, 7, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.flights.FrequentFlyerInfo.prototype.toObject = function(opt_includeInstance) {
  return proto.flights.FrequentFlyerInfo.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.flights.FrequentFlyerInfo} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.flights.FrequentFlyerInfo.toObject = function(includeInstance, msg) {
  var f, obj = {
    programname: jspb.Message.getFieldWithDefault(msg, 1, ""),
    airlinedesignator: jspb.Message.getFieldWithDefault(msg, 2, ""),
    number: jspb.Message.getFieldWithDefault(msg, 3, ""),
    tier: jspb.Message.getFieldWithDefault(msg, 4, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.flights.FrequentFlyerInfo}
 */
proto.flights.FrequentFlyerInfo.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.flights.FrequentFlyerInfo;
  return proto.flights.FrequentFlyerInfo.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.flights.FrequentFlyerInfo} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.flights.FrequentFlyerInfo}
 */
proto.flights.FrequentFlyerInfo.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setProgramname(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setAirlinedesignator(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setNumber(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setTier(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.flights.FrequentFlyerInfo.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.flights.FrequentFlyerInfo.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.flights.FrequentFlyerInfo} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.flights.FrequentFlyerInfo.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getProgramname();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getAirlinedesignator();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getNumber();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getTier();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
};


/**
 * optional string programName = 1;
 * @return {string}
 */
proto.flights.FrequentFlyerInfo.prototype.getProgramname = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.flights.FrequentFlyerInfo} returns this
 */
proto.flights.FrequentFlyerInfo.prototype.setProgramname = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string airlineDesignator = 2;
 * @return {string}
 */
proto.flights.FrequentFlyerInfo.prototype.getAirlinedesignator = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.flights.FrequentFlyerInfo} returns this
 */
proto.flights.FrequentFlyerInfo.prototype.setAirlinedesignator = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string number = 3;
 * @return {string}
 */
proto.flights.FrequentFlyerInfo.prototype.getNumber = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.flights.FrequentFlyerInfo} returns this
 */
proto.flights.FrequentFlyerInfo.prototype.setNumber = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string tier = 4;
 * @return {string}
 */
proto.flights.FrequentFlyerInfo.prototype.getTier = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.flights.FrequentFlyerInfo} returns this
 */
proto.flights.FrequentFlyerInfo.prototype.setTier = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.flights.IdentityDetails.prototype.toObject = function(opt_includeInstance) {
  return proto.flights.IdentityDetails.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.flights.IdentityDetails} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.flights.IdentityDetails.toObject = function(includeInstance, msg) {
  var f, obj = {
    identitydocument: jspb.Message.getFieldWithDefault(msg, 1, 0),
    issuingcountry: jspb.Message.getFieldWithDefault(msg, 2, ""),
    nationality: jspb.Message.getFieldWithDefault(msg, 3, ""),
    documentnumber: jspb.Message.getFieldWithDefault(msg, 4, ""),
    dateofbirth: (f = msg.getDateofbirth()) && io_common_common_objects_pb.Date.toObject(includeInstance, f),
    gender: jspb.Message.getFieldWithDefault(msg, 6, 0),
    issueddate: (f = msg.getIssueddate()) && io_common_common_objects_pb.Date.toObject(includeInstance, f),
    expirydate: (f = msg.getExpirydate()) && io_common_common_objects_pb.Date.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.flights.IdentityDetails}
 */
proto.flights.IdentityDetails.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.flights.IdentityDetails;
  return proto.flights.IdentityDetails.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.flights.IdentityDetails} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.flights.IdentityDetails}
 */
proto.flights.IdentityDetails.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.flights.IdentityDocument} */ (reader.readEnum());
      msg.setIdentitydocument(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setIssuingcountry(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setNationality(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setDocumentnumber(value);
      break;
    case 5:
      var value = new io_common_common_objects_pb.Date;
      reader.readMessage(value,io_common_common_objects_pb.Date.deserializeBinaryFromReader);
      msg.setDateofbirth(value);
      break;
    case 6:
      var value = /** @type {!proto.io.Gender} */ (reader.readEnum());
      msg.setGender(value);
      break;
    case 7:
      var value = new io_common_common_objects_pb.Date;
      reader.readMessage(value,io_common_common_objects_pb.Date.deserializeBinaryFromReader);
      msg.setIssueddate(value);
      break;
    case 8:
      var value = new io_common_common_objects_pb.Date;
      reader.readMessage(value,io_common_common_objects_pb.Date.deserializeBinaryFromReader);
      msg.setExpirydate(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.flights.IdentityDetails.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.flights.IdentityDetails.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.flights.IdentityDetails} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.flights.IdentityDetails.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getIdentitydocument();
  if (f !== 0.0) {
    writer.writeEnum(
      1,
      f
    );
  }
  f = message.getIssuingcountry();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getNationality();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getDocumentnumber();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getDateofbirth();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      io_common_common_objects_pb.Date.serializeBinaryToWriter
    );
  }
  f = message.getGender();
  if (f !== 0.0) {
    writer.writeEnum(
      6,
      f
    );
  }
  f = message.getIssueddate();
  if (f != null) {
    writer.writeMessage(
      7,
      f,
      io_common_common_objects_pb.Date.serializeBinaryToWriter
    );
  }
  f = message.getExpirydate();
  if (f != null) {
    writer.writeMessage(
      8,
      f,
      io_common_common_objects_pb.Date.serializeBinaryToWriter
    );
  }
};


/**
 * optional IdentityDocument identityDocument = 1;
 * @return {!proto.flights.IdentityDocument}
 */
proto.flights.IdentityDetails.prototype.getIdentitydocument = function() {
  return /** @type {!proto.flights.IdentityDocument} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {!proto.flights.IdentityDocument} value
 * @return {!proto.flights.IdentityDetails} returns this
 */
proto.flights.IdentityDetails.prototype.setIdentitydocument = function(value) {
  return jspb.Message.setProto3EnumField(this, 1, value);
};


/**
 * optional string issuingCountry = 2;
 * @return {string}
 */
proto.flights.IdentityDetails.prototype.getIssuingcountry = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.flights.IdentityDetails} returns this
 */
proto.flights.IdentityDetails.prototype.setIssuingcountry = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string nationality = 3;
 * @return {string}
 */
proto.flights.IdentityDetails.prototype.getNationality = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.flights.IdentityDetails} returns this
 */
proto.flights.IdentityDetails.prototype.setNationality = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string documentNumber = 4;
 * @return {string}
 */
proto.flights.IdentityDetails.prototype.getDocumentnumber = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.flights.IdentityDetails} returns this
 */
proto.flights.IdentityDetails.prototype.setDocumentnumber = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional io.Date dateOfBirth = 5;
 * @return {?proto.io.Date}
 */
proto.flights.IdentityDetails.prototype.getDateofbirth = function() {
  return /** @type{?proto.io.Date} */ (
    jspb.Message.getWrapperField(this, io_common_common_objects_pb.Date, 5));
};


/**
 * @param {?proto.io.Date|undefined} value
 * @return {!proto.flights.IdentityDetails} returns this
*/
proto.flights.IdentityDetails.prototype.setDateofbirth = function(value) {
  return jspb.Message.setWrapperField(this, 5, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.flights.IdentityDetails} returns this
 */
proto.flights.IdentityDetails.prototype.clearDateofbirth = function() {
  return this.setDateofbirth(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.flights.IdentityDetails.prototype.hasDateofbirth = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional io.Gender gender = 6;
 * @return {!proto.io.Gender}
 */
proto.flights.IdentityDetails.prototype.getGender = function() {
  return /** @type {!proto.io.Gender} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/**
 * @param {!proto.io.Gender} value
 * @return {!proto.flights.IdentityDetails} returns this
 */
proto.flights.IdentityDetails.prototype.setGender = function(value) {
  return jspb.Message.setProto3EnumField(this, 6, value);
};


/**
 * optional io.Date issuedDate = 7;
 * @return {?proto.io.Date}
 */
proto.flights.IdentityDetails.prototype.getIssueddate = function() {
  return /** @type{?proto.io.Date} */ (
    jspb.Message.getWrapperField(this, io_common_common_objects_pb.Date, 7));
};


/**
 * @param {?proto.io.Date|undefined} value
 * @return {!proto.flights.IdentityDetails} returns this
*/
proto.flights.IdentityDetails.prototype.setIssueddate = function(value) {
  return jspb.Message.setWrapperField(this, 7, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.flights.IdentityDetails} returns this
 */
proto.flights.IdentityDetails.prototype.clearIssueddate = function() {
  return this.setIssueddate(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.flights.IdentityDetails.prototype.hasIssueddate = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * optional io.Date expiryDate = 8;
 * @return {?proto.io.Date}
 */
proto.flights.IdentityDetails.prototype.getExpirydate = function() {
  return /** @type{?proto.io.Date} */ (
    jspb.Message.getWrapperField(this, io_common_common_objects_pb.Date, 8));
};


/**
 * @param {?proto.io.Date|undefined} value
 * @return {!proto.flights.IdentityDetails} returns this
*/
proto.flights.IdentityDetails.prototype.setExpirydate = function(value) {
  return jspb.Message.setWrapperField(this, 8, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.flights.IdentityDetails} returns this
 */
proto.flights.IdentityDetails.prototype.clearExpirydate = function() {
  return this.setExpirydate(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.flights.IdentityDetails.prototype.hasExpirydate = function() {
  return jspb.Message.getField(this, 8) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.flights.Infant.prototype.toObject = function(opt_includeInstance) {
  return proto.flights.Infant.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.flights.Infant} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.flights.Infant.toObject = function(includeInstance, msg) {
  var f, obj = {
    infantdetails: (f = msg.getInfantdetails()) && io_common_personal_pb.Person.toObject(includeInstance, f),
    identitydetails: (f = msg.getIdentitydetails()) && proto.flights.IdentityDetails.toObject(includeInstance, f),
    barcodepayload: jspb.Message.getFieldWithDefault(msg, 3, ""),
    conditionalitems: (f = msg.getConditionalitems()) && io_flights_barcode_pb.ConditionalItems.toObject(includeInstance, f),
    barcodeadditionaldata: jspb.Message.getFieldWithDefault(msg, 5, ""),
    securityimage: jspb.Message.getFieldWithDefault(msg, 6, ""),
    privilegeimage: jspb.Message.getFieldWithDefault(msg, 7, ""),
    footerimage: jspb.Message.getFieldWithDefault(msg, 8, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.flights.Infant}
 */
proto.flights.Infant.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.flights.Infant;
  return proto.flights.Infant.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.flights.Infant} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.flights.Infant}
 */
proto.flights.Infant.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new io_common_personal_pb.Person;
      reader.readMessage(value,io_common_personal_pb.Person.deserializeBinaryFromReader);
      msg.setInfantdetails(value);
      break;
    case 2:
      var value = new proto.flights.IdentityDetails;
      reader.readMessage(value,proto.flights.IdentityDetails.deserializeBinaryFromReader);
      msg.setIdentitydetails(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setBarcodepayload(value);
      break;
    case 4:
      var value = new io_flights_barcode_pb.ConditionalItems;
      reader.readMessage(value,io_flights_barcode_pb.ConditionalItems.deserializeBinaryFromReader);
      msg.setConditionalitems(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setBarcodeadditionaldata(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setSecurityimage(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setPrivilegeimage(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.setFooterimage(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.flights.Infant.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.flights.Infant.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.flights.Infant} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.flights.Infant.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getInfantdetails();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      io_common_personal_pb.Person.serializeBinaryToWriter
    );
  }
  f = message.getIdentitydetails();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.flights.IdentityDetails.serializeBinaryToWriter
    );
  }
  f = message.getBarcodepayload();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getConditionalitems();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      io_flights_barcode_pb.ConditionalItems.serializeBinaryToWriter
    );
  }
  f = message.getBarcodeadditionaldata();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getSecurityimage();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getPrivilegeimage();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
  f = message.getFooterimage();
  if (f.length > 0) {
    writer.writeString(
      8,
      f
    );
  }
};


/**
 * optional io.Person infantDetails = 1;
 * @return {?proto.io.Person}
 */
proto.flights.Infant.prototype.getInfantdetails = function() {
  return /** @type{?proto.io.Person} */ (
    jspb.Message.getWrapperField(this, io_common_personal_pb.Person, 1));
};


/**
 * @param {?proto.io.Person|undefined} value
 * @return {!proto.flights.Infant} returns this
*/
proto.flights.Infant.prototype.setInfantdetails = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.flights.Infant} returns this
 */
proto.flights.Infant.prototype.clearInfantdetails = function() {
  return this.setInfantdetails(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.flights.Infant.prototype.hasInfantdetails = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional IdentityDetails identityDetails = 2;
 * @return {?proto.flights.IdentityDetails}
 */
proto.flights.Infant.prototype.getIdentitydetails = function() {
  return /** @type{?proto.flights.IdentityDetails} */ (
    jspb.Message.getWrapperField(this, proto.flights.IdentityDetails, 2));
};


/**
 * @param {?proto.flights.IdentityDetails|undefined} value
 * @return {!proto.flights.Infant} returns this
*/
proto.flights.Infant.prototype.setIdentitydetails = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.flights.Infant} returns this
 */
proto.flights.Infant.prototype.clearIdentitydetails = function() {
  return this.setIdentitydetails(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.flights.Infant.prototype.hasIdentitydetails = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional string barcodePayload = 3;
 * @return {string}
 */
proto.flights.Infant.prototype.getBarcodepayload = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.flights.Infant} returns this
 */
proto.flights.Infant.prototype.setBarcodepayload = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional ConditionalItems conditionalItems = 4;
 * @return {?proto.flights.ConditionalItems}
 */
proto.flights.Infant.prototype.getConditionalitems = function() {
  return /** @type{?proto.flights.ConditionalItems} */ (
    jspb.Message.getWrapperField(this, io_flights_barcode_pb.ConditionalItems, 4));
};


/**
 * @param {?proto.flights.ConditionalItems|undefined} value
 * @return {!proto.flights.Infant} returns this
*/
proto.flights.Infant.prototype.setConditionalitems = function(value) {
  return jspb.Message.setWrapperField(this, 4, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.flights.Infant} returns this
 */
proto.flights.Infant.prototype.clearConditionalitems = function() {
  return this.setConditionalitems(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.flights.Infant.prototype.hasConditionalitems = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional string barcodeAdditionalData = 5;
 * @return {string}
 */
proto.flights.Infant.prototype.getBarcodeadditionaldata = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.flights.Infant} returns this
 */
proto.flights.Infant.prototype.setBarcodeadditionaldata = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional string securityImage = 6;
 * @return {string}
 */
proto.flights.Infant.prototype.getSecurityimage = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.flights.Infant} returns this
 */
proto.flights.Infant.prototype.setSecurityimage = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional string privilegeImage = 7;
 * @return {string}
 */
proto.flights.Infant.prototype.getPrivilegeimage = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.flights.Infant} returns this
 */
proto.flights.Infant.prototype.setPrivilegeimage = function(value) {
  return jspb.Message.setProto3StringField(this, 7, value);
};


/**
 * optional string footerImage = 8;
 * @return {string}
 */
proto.flights.Infant.prototype.getFooterimage = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, ""));
};


/**
 * @param {string} value
 * @return {!proto.flights.Infant} returns this
 */
proto.flights.Infant.prototype.setFooterimage = function(value) {
  return jspb.Message.setProto3StringField(this, 8, value);
};


/**
 * @enum {number}
 */
proto.flights.IdentityDocument = {
  PASSPORT: 0,
  NATIONAL_ID_CARD: 1,
  DRIVING_LICENSE: 2,
  CREDIT_CARD: 3,
  FREQUENT_FLYER_CARD: 4,
  OTHER_TRAVEL_DOCUMENT: 5
};

goog.object.extend(exports, proto.flights);
