// source: io/flights/flight_designator.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global = (function() {
  if (this) { return this; }
  if (typeof window !== 'undefined') { return window; }
  if (typeof global !== 'undefined') { return global; }
  if (typeof self !== 'undefined') { return self; }
  return Function('return this')();
}.call(null));

var io_common_common_objects_pb = require('../../io/common/common_objects_pb.js');
goog.object.extend(proto, io_common_common_objects_pb);
var io_common_proximity_pb = require('../../io/common/proximity_pb.js');
goog.object.extend(proto, io_common_proximity_pb);
var io_common_links_pb = require('../../io/common/links_pb.js');
goog.object.extend(proto, io_common_links_pb);
goog.exportSymbol('proto.flights.Authority', null, global);
goog.exportSymbol('proto.flights.BoardingPolicy', null, global);
goog.exportSymbol('proto.flights.FlightAlerts', null, global);
goog.exportSymbol('proto.flights.FlightDesignator', null, global);
goog.exportSymbol('proto.flights.FlightDesignatorRequest', null, global);
goog.exportSymbol('proto.flights.FlightSchedule', null, global);
goog.exportSymbol('proto.flights.FlightTimes', null, global);
goog.exportSymbol('proto.flights.SeatClassPolicy', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.flights.FlightDesignator = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.flights.FlightDesignator.repeatedFields_, null);
};
goog.inherits(proto.flights.FlightDesignator, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.flights.FlightDesignator.displayName = 'proto.flights.FlightDesignator';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.flights.FlightDesignatorRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.flights.FlightDesignatorRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.flights.FlightDesignatorRequest.displayName = 'proto.flights.FlightDesignatorRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.flights.FlightSchedule = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.flights.FlightSchedule, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.flights.FlightSchedule.displayName = 'proto.flights.FlightSchedule';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.flights.FlightTimes = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.flights.FlightTimes, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.flights.FlightTimes.displayName = 'proto.flights.FlightTimes';
}

/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.flights.FlightDesignator.repeatedFields_ = [9,12,15,18,22,23,24];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.flights.FlightDesignator.prototype.toObject = function(opt_includeInstance) {
  return proto.flights.FlightDesignator.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.flights.FlightDesignator} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.flights.FlightDesignator.toObject = function(includeInstance, msg) {
  var f, obj = {
    carriercode: jspb.Message.getFieldWithDefault(msg, 1, ""),
    flightnumber: jspb.Message.getFieldWithDefault(msg, 2, ""),
    validfrom: (f = msg.getValidfrom()) && io_common_common_objects_pb.Date.toObject(includeInstance, f),
    revision: jspb.Message.getFieldWithDefault(msg, 4, 0),
    active: jspb.Message.getBooleanFieldWithDefault(msg, 5, false),
    schedule: (f = msg.getSchedule()) && proto.flights.FlightSchedule.toObject(includeInstance, f),
    operatingcarriercode: jspb.Message.getFieldWithDefault(msg, 7, ""),
    operatingflightnumber: jspb.Message.getFieldWithDefault(msg, 8, ""),
    codeshareflightnumbersList: (f = jspb.Message.getRepeatedField(msg, 9)) == null ? undefined : f,
    origin: jspb.Message.getFieldWithDefault(msg, 10, ""),
    destination: jspb.Message.getFieldWithDefault(msg, 11, ""),
    transitpointsList: (f = jspb.Message.getRepeatedField(msg, 12)) == null ? undefined : f,
    departureterminal: jspb.Message.getFieldWithDefault(msg, 13, ""),
    arrivalterminal: jspb.Message.getFieldWithDefault(msg, 14, ""),
    transitterminalsList: (f = jspb.Message.getRepeatedField(msg, 15)) == null ? undefined : f,
    boardingpolicy: jspb.Message.getFieldWithDefault(msg, 16, 0),
    seatclasspolicy: jspb.Message.getFieldWithDefault(msg, 17, 0),
    alertsList: (f = jspb.Message.getRepeatedField(msg, 18)) == null ? undefined : f,
    passtemplateid: jspb.Message.getFieldWithDefault(msg, 19, ""),
    autoinvalidateafter: jspb.Message.getFieldWithDefault(msg, 20, 0),
    autoinvalidatecancelledpasses: jspb.Message.getBooleanFieldWithDefault(msg, 21, false),
    locationmessagesList: jspb.Message.toObjectList(msg.getLocationmessagesList(),
    io_common_proximity_pb.GPSLocation.toObject, includeInstance),
    beaconmessagesList: jspb.Message.toObjectList(msg.getBeaconmessagesList(),
    io_common_proximity_pb.Beacon.toObject, includeInstance),
    defaultlinksList: jspb.Message.toObjectList(msg.getDefaultlinksList(),
    io_common_links_pb.Link.toObject, includeInstance),
    conditionalitems: jspb.Message.getBooleanFieldWithDefault(msg, 25, false),
    barcodeadditionaldata: jspb.Message.getFieldWithDefault(msg, 26, ""),
    invalidatecancelledpasses: jspb.Message.getFieldWithDefault(msg, 27, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.flights.FlightDesignator}
 */
proto.flights.FlightDesignator.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.flights.FlightDesignator;
  return proto.flights.FlightDesignator.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.flights.FlightDesignator} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.flights.FlightDesignator}
 */
proto.flights.FlightDesignator.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setCarriercode(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setFlightnumber(value);
      break;
    case 3:
      var value = new io_common_common_objects_pb.Date;
      reader.readMessage(value,io_common_common_objects_pb.Date.deserializeBinaryFromReader);
      msg.setValidfrom(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setRevision(value);
      break;
    case 5:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setActive(value);
      break;
    case 6:
      var value = new proto.flights.FlightSchedule;
      reader.readMessage(value,proto.flights.FlightSchedule.deserializeBinaryFromReader);
      msg.setSchedule(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setOperatingcarriercode(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.setOperatingflightnumber(value);
      break;
    case 9:
      var value = /** @type {string} */ (reader.readString());
      msg.addCodeshareflightnumbers(value);
      break;
    case 10:
      var value = /** @type {string} */ (reader.readString());
      msg.setOrigin(value);
      break;
    case 11:
      var value = /** @type {string} */ (reader.readString());
      msg.setDestination(value);
      break;
    case 12:
      var value = /** @type {string} */ (reader.readString());
      msg.addTransitpoints(value);
      break;
    case 13:
      var value = /** @type {string} */ (reader.readString());
      msg.setDepartureterminal(value);
      break;
    case 14:
      var value = /** @type {string} */ (reader.readString());
      msg.setArrivalterminal(value);
      break;
    case 15:
      var value = /** @type {string} */ (reader.readString());
      msg.addTransitterminals(value);
      break;
    case 16:
      var value = /** @type {!proto.flights.BoardingPolicy} */ (reader.readEnum());
      msg.setBoardingpolicy(value);
      break;
    case 17:
      var value = /** @type {!proto.flights.SeatClassPolicy} */ (reader.readEnum());
      msg.setSeatclasspolicy(value);
      break;
    case 18:
      var values = /** @type {!Array<!proto.flights.FlightAlerts>} */ (reader.isDelimited() ? reader.readPackedEnum() : [reader.readEnum()]);
      for (var i = 0; i < values.length; i++) {
        msg.addAlerts(values[i]);
      }
      break;
    case 19:
      var value = /** @type {string} */ (reader.readString());
      msg.setPasstemplateid(value);
      break;
    case 20:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setAutoinvalidateafter(value);
      break;
    case 21:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setAutoinvalidatecancelledpasses(value);
      break;
    case 22:
      var value = new io_common_proximity_pb.GPSLocation;
      reader.readMessage(value,io_common_proximity_pb.GPSLocation.deserializeBinaryFromReader);
      msg.addLocationmessages(value);
      break;
    case 23:
      var value = new io_common_proximity_pb.Beacon;
      reader.readMessage(value,io_common_proximity_pb.Beacon.deserializeBinaryFromReader);
      msg.addBeaconmessages(value);
      break;
    case 24:
      var value = new io_common_links_pb.Link;
      reader.readMessage(value,io_common_links_pb.Link.deserializeBinaryFromReader);
      msg.addDefaultlinks(value);
      break;
    case 25:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setConditionalitems(value);
      break;
    case 26:
      var value = /** @type {string} */ (reader.readString());
      msg.setBarcodeadditionaldata(value);
      break;
    case 27:
      var value = /** @type {!proto.io.Toggle} */ (reader.readEnum());
      msg.setInvalidatecancelledpasses(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.flights.FlightDesignator.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.flights.FlightDesignator.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.flights.FlightDesignator} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.flights.FlightDesignator.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCarriercode();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getFlightnumber();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getValidfrom();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      io_common_common_objects_pb.Date.serializeBinaryToWriter
    );
  }
  f = message.getRevision();
  if (f !== 0) {
    writer.writeUint32(
      4,
      f
    );
  }
  f = message.getActive();
  if (f) {
    writer.writeBool(
      5,
      f
    );
  }
  f = message.getSchedule();
  if (f != null) {
    writer.writeMessage(
      6,
      f,
      proto.flights.FlightSchedule.serializeBinaryToWriter
    );
  }
  f = message.getOperatingcarriercode();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
  f = message.getOperatingflightnumber();
  if (f.length > 0) {
    writer.writeString(
      8,
      f
    );
  }
  f = message.getCodeshareflightnumbersList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      9,
      f
    );
  }
  f = message.getOrigin();
  if (f.length > 0) {
    writer.writeString(
      10,
      f
    );
  }
  f = message.getDestination();
  if (f.length > 0) {
    writer.writeString(
      11,
      f
    );
  }
  f = message.getTransitpointsList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      12,
      f
    );
  }
  f = message.getDepartureterminal();
  if (f.length > 0) {
    writer.writeString(
      13,
      f
    );
  }
  f = message.getArrivalterminal();
  if (f.length > 0) {
    writer.writeString(
      14,
      f
    );
  }
  f = message.getTransitterminalsList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      15,
      f
    );
  }
  f = message.getBoardingpolicy();
  if (f !== 0.0) {
    writer.writeEnum(
      16,
      f
    );
  }
  f = message.getSeatclasspolicy();
  if (f !== 0.0) {
    writer.writeEnum(
      17,
      f
    );
  }
  f = message.getAlertsList();
  if (f.length > 0) {
    writer.writePackedEnum(
      18,
      f
    );
  }
  f = message.getPasstemplateid();
  if (f.length > 0) {
    writer.writeString(
      19,
      f
    );
  }
  f = message.getAutoinvalidateafter();
  if (f !== 0) {
    writer.writeUint32(
      20,
      f
    );
  }
  f = message.getAutoinvalidatecancelledpasses();
  if (f) {
    writer.writeBool(
      21,
      f
    );
  }
  f = message.getLocationmessagesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      22,
      f,
      io_common_proximity_pb.GPSLocation.serializeBinaryToWriter
    );
  }
  f = message.getBeaconmessagesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      23,
      f,
      io_common_proximity_pb.Beacon.serializeBinaryToWriter
    );
  }
  f = message.getDefaultlinksList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      24,
      f,
      io_common_links_pb.Link.serializeBinaryToWriter
    );
  }
  f = message.getConditionalitems();
  if (f) {
    writer.writeBool(
      25,
      f
    );
  }
  f = message.getBarcodeadditionaldata();
  if (f.length > 0) {
    writer.writeString(
      26,
      f
    );
  }
  f = message.getInvalidatecancelledpasses();
  if (f !== 0.0) {
    writer.writeEnum(
      27,
      f
    );
  }
};


/**
 * optional string carrierCode = 1;
 * @return {string}
 */
proto.flights.FlightDesignator.prototype.getCarriercode = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.flights.FlightDesignator} returns this
 */
proto.flights.FlightDesignator.prototype.setCarriercode = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string flightNumber = 2;
 * @return {string}
 */
proto.flights.FlightDesignator.prototype.getFlightnumber = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.flights.FlightDesignator} returns this
 */
proto.flights.FlightDesignator.prototype.setFlightnumber = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional io.Date validFrom = 3;
 * @return {?proto.io.Date}
 */
proto.flights.FlightDesignator.prototype.getValidfrom = function() {
  return /** @type{?proto.io.Date} */ (
    jspb.Message.getWrapperField(this, io_common_common_objects_pb.Date, 3));
};


/**
 * @param {?proto.io.Date|undefined} value
 * @return {!proto.flights.FlightDesignator} returns this
*/
proto.flights.FlightDesignator.prototype.setValidfrom = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.flights.FlightDesignator} returns this
 */
proto.flights.FlightDesignator.prototype.clearValidfrom = function() {
  return this.setValidfrom(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.flights.FlightDesignator.prototype.hasValidfrom = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional uint32 revision = 4;
 * @return {number}
 */
proto.flights.FlightDesignator.prototype.getRevision = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.flights.FlightDesignator} returns this
 */
proto.flights.FlightDesignator.prototype.setRevision = function(value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};


/**
 * optional bool active = 5;
 * @return {boolean}
 */
proto.flights.FlightDesignator.prototype.getActive = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 5, false));
};


/**
 * @param {boolean} value
 * @return {!proto.flights.FlightDesignator} returns this
 */
proto.flights.FlightDesignator.prototype.setActive = function(value) {
  return jspb.Message.setProto3BooleanField(this, 5, value);
};


/**
 * optional FlightSchedule schedule = 6;
 * @return {?proto.flights.FlightSchedule}
 */
proto.flights.FlightDesignator.prototype.getSchedule = function() {
  return /** @type{?proto.flights.FlightSchedule} */ (
    jspb.Message.getWrapperField(this, proto.flights.FlightSchedule, 6));
};


/**
 * @param {?proto.flights.FlightSchedule|undefined} value
 * @return {!proto.flights.FlightDesignator} returns this
*/
proto.flights.FlightDesignator.prototype.setSchedule = function(value) {
  return jspb.Message.setWrapperField(this, 6, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.flights.FlightDesignator} returns this
 */
proto.flights.FlightDesignator.prototype.clearSchedule = function() {
  return this.setSchedule(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.flights.FlightDesignator.prototype.hasSchedule = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional string operatingCarrierCode = 7;
 * @return {string}
 */
proto.flights.FlightDesignator.prototype.getOperatingcarriercode = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.flights.FlightDesignator} returns this
 */
proto.flights.FlightDesignator.prototype.setOperatingcarriercode = function(value) {
  return jspb.Message.setProto3StringField(this, 7, value);
};


/**
 * optional string operatingFlightNumber = 8;
 * @return {string}
 */
proto.flights.FlightDesignator.prototype.getOperatingflightnumber = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, ""));
};


/**
 * @param {string} value
 * @return {!proto.flights.FlightDesignator} returns this
 */
proto.flights.FlightDesignator.prototype.setOperatingflightnumber = function(value) {
  return jspb.Message.setProto3StringField(this, 8, value);
};


/**
 * repeated string codeShareFlightNumbers = 9;
 * @return {!Array<string>}
 */
proto.flights.FlightDesignator.prototype.getCodeshareflightnumbersList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 9));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.flights.FlightDesignator} returns this
 */
proto.flights.FlightDesignator.prototype.setCodeshareflightnumbersList = function(value) {
  return jspb.Message.setField(this, 9, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.flights.FlightDesignator} returns this
 */
proto.flights.FlightDesignator.prototype.addCodeshareflightnumbers = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 9, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.flights.FlightDesignator} returns this
 */
proto.flights.FlightDesignator.prototype.clearCodeshareflightnumbersList = function() {
  return this.setCodeshareflightnumbersList([]);
};


/**
 * optional string origin = 10;
 * @return {string}
 */
proto.flights.FlightDesignator.prototype.getOrigin = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 10, ""));
};


/**
 * @param {string} value
 * @return {!proto.flights.FlightDesignator} returns this
 */
proto.flights.FlightDesignator.prototype.setOrigin = function(value) {
  return jspb.Message.setProto3StringField(this, 10, value);
};


/**
 * optional string destination = 11;
 * @return {string}
 */
proto.flights.FlightDesignator.prototype.getDestination = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 11, ""));
};


/**
 * @param {string} value
 * @return {!proto.flights.FlightDesignator} returns this
 */
proto.flights.FlightDesignator.prototype.setDestination = function(value) {
  return jspb.Message.setProto3StringField(this, 11, value);
};


/**
 * repeated string transitPoints = 12;
 * @return {!Array<string>}
 */
proto.flights.FlightDesignator.prototype.getTransitpointsList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 12));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.flights.FlightDesignator} returns this
 */
proto.flights.FlightDesignator.prototype.setTransitpointsList = function(value) {
  return jspb.Message.setField(this, 12, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.flights.FlightDesignator} returns this
 */
proto.flights.FlightDesignator.prototype.addTransitpoints = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 12, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.flights.FlightDesignator} returns this
 */
proto.flights.FlightDesignator.prototype.clearTransitpointsList = function() {
  return this.setTransitpointsList([]);
};


/**
 * optional string departureTerminal = 13;
 * @return {string}
 */
proto.flights.FlightDesignator.prototype.getDepartureterminal = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 13, ""));
};


/**
 * @param {string} value
 * @return {!proto.flights.FlightDesignator} returns this
 */
proto.flights.FlightDesignator.prototype.setDepartureterminal = function(value) {
  return jspb.Message.setProto3StringField(this, 13, value);
};


/**
 * optional string arrivalTerminal = 14;
 * @return {string}
 */
proto.flights.FlightDesignator.prototype.getArrivalterminal = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 14, ""));
};


/**
 * @param {string} value
 * @return {!proto.flights.FlightDesignator} returns this
 */
proto.flights.FlightDesignator.prototype.setArrivalterminal = function(value) {
  return jspb.Message.setProto3StringField(this, 14, value);
};


/**
 * repeated string transitTerminals = 15;
 * @return {!Array<string>}
 */
proto.flights.FlightDesignator.prototype.getTransitterminalsList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 15));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.flights.FlightDesignator} returns this
 */
proto.flights.FlightDesignator.prototype.setTransitterminalsList = function(value) {
  return jspb.Message.setField(this, 15, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.flights.FlightDesignator} returns this
 */
proto.flights.FlightDesignator.prototype.addTransitterminals = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 15, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.flights.FlightDesignator} returns this
 */
proto.flights.FlightDesignator.prototype.clearTransitterminalsList = function() {
  return this.setTransitterminalsList([]);
};


/**
 * optional BoardingPolicy boardingPolicy = 16;
 * @return {!proto.flights.BoardingPolicy}
 */
proto.flights.FlightDesignator.prototype.getBoardingpolicy = function() {
  return /** @type {!proto.flights.BoardingPolicy} */ (jspb.Message.getFieldWithDefault(this, 16, 0));
};


/**
 * @param {!proto.flights.BoardingPolicy} value
 * @return {!proto.flights.FlightDesignator} returns this
 */
proto.flights.FlightDesignator.prototype.setBoardingpolicy = function(value) {
  return jspb.Message.setProto3EnumField(this, 16, value);
};


/**
 * optional SeatClassPolicy seatClassPolicy = 17;
 * @return {!proto.flights.SeatClassPolicy}
 */
proto.flights.FlightDesignator.prototype.getSeatclasspolicy = function() {
  return /** @type {!proto.flights.SeatClassPolicy} */ (jspb.Message.getFieldWithDefault(this, 17, 0));
};


/**
 * @param {!proto.flights.SeatClassPolicy} value
 * @return {!proto.flights.FlightDesignator} returns this
 */
proto.flights.FlightDesignator.prototype.setSeatclasspolicy = function(value) {
  return jspb.Message.setProto3EnumField(this, 17, value);
};


/**
 * repeated FlightAlerts alerts = 18;
 * @return {!Array<!proto.flights.FlightAlerts>}
 */
proto.flights.FlightDesignator.prototype.getAlertsList = function() {
  return /** @type {!Array<!proto.flights.FlightAlerts>} */ (jspb.Message.getRepeatedField(this, 18));
};


/**
 * @param {!Array<!proto.flights.FlightAlerts>} value
 * @return {!proto.flights.FlightDesignator} returns this
 */
proto.flights.FlightDesignator.prototype.setAlertsList = function(value) {
  return jspb.Message.setField(this, 18, value || []);
};


/**
 * @param {!proto.flights.FlightAlerts} value
 * @param {number=} opt_index
 * @return {!proto.flights.FlightDesignator} returns this
 */
proto.flights.FlightDesignator.prototype.addAlerts = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 18, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.flights.FlightDesignator} returns this
 */
proto.flights.FlightDesignator.prototype.clearAlertsList = function() {
  return this.setAlertsList([]);
};


/**
 * optional string passTemplateId = 19;
 * @return {string}
 */
proto.flights.FlightDesignator.prototype.getPasstemplateid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 19, ""));
};


/**
 * @param {string} value
 * @return {!proto.flights.FlightDesignator} returns this
 */
proto.flights.FlightDesignator.prototype.setPasstemplateid = function(value) {
  return jspb.Message.setProto3StringField(this, 19, value);
};


/**
 * optional uint32 autoInvalidateAfter = 20;
 * @return {number}
 */
proto.flights.FlightDesignator.prototype.getAutoinvalidateafter = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 20, 0));
};


/**
 * @param {number} value
 * @return {!proto.flights.FlightDesignator} returns this
 */
proto.flights.FlightDesignator.prototype.setAutoinvalidateafter = function(value) {
  return jspb.Message.setProto3IntField(this, 20, value);
};


/**
 * optional bool autoInvalidateCancelledPasses = 21;
 * @return {boolean}
 */
proto.flights.FlightDesignator.prototype.getAutoinvalidatecancelledpasses = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 21, false));
};


/**
 * @param {boolean} value
 * @return {!proto.flights.FlightDesignator} returns this
 */
proto.flights.FlightDesignator.prototype.setAutoinvalidatecancelledpasses = function(value) {
  return jspb.Message.setProto3BooleanField(this, 21, value);
};


/**
 * repeated io.GPSLocation locationMessages = 22;
 * @return {!Array<!proto.io.GPSLocation>}
 */
proto.flights.FlightDesignator.prototype.getLocationmessagesList = function() {
  return /** @type{!Array<!proto.io.GPSLocation>} */ (
    jspb.Message.getRepeatedWrapperField(this, io_common_proximity_pb.GPSLocation, 22));
};


/**
 * @param {!Array<!proto.io.GPSLocation>} value
 * @return {!proto.flights.FlightDesignator} returns this
*/
proto.flights.FlightDesignator.prototype.setLocationmessagesList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 22, value);
};


/**
 * @param {!proto.io.GPSLocation=} opt_value
 * @param {number=} opt_index
 * @return {!proto.io.GPSLocation}
 */
proto.flights.FlightDesignator.prototype.addLocationmessages = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 22, opt_value, proto.io.GPSLocation, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.flights.FlightDesignator} returns this
 */
proto.flights.FlightDesignator.prototype.clearLocationmessagesList = function() {
  return this.setLocationmessagesList([]);
};


/**
 * repeated io.Beacon beaconMessages = 23;
 * @return {!Array<!proto.io.Beacon>}
 */
proto.flights.FlightDesignator.prototype.getBeaconmessagesList = function() {
  return /** @type{!Array<!proto.io.Beacon>} */ (
    jspb.Message.getRepeatedWrapperField(this, io_common_proximity_pb.Beacon, 23));
};


/**
 * @param {!Array<!proto.io.Beacon>} value
 * @return {!proto.flights.FlightDesignator} returns this
*/
proto.flights.FlightDesignator.prototype.setBeaconmessagesList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 23, value);
};


/**
 * @param {!proto.io.Beacon=} opt_value
 * @param {number=} opt_index
 * @return {!proto.io.Beacon}
 */
proto.flights.FlightDesignator.prototype.addBeaconmessages = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 23, opt_value, proto.io.Beacon, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.flights.FlightDesignator} returns this
 */
proto.flights.FlightDesignator.prototype.clearBeaconmessagesList = function() {
  return this.setBeaconmessagesList([]);
};


/**
 * repeated io.Link defaultLinks = 24;
 * @return {!Array<!proto.io.Link>}
 */
proto.flights.FlightDesignator.prototype.getDefaultlinksList = function() {
  return /** @type{!Array<!proto.io.Link>} */ (
    jspb.Message.getRepeatedWrapperField(this, io_common_links_pb.Link, 24));
};


/**
 * @param {!Array<!proto.io.Link>} value
 * @return {!proto.flights.FlightDesignator} returns this
*/
proto.flights.FlightDesignator.prototype.setDefaultlinksList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 24, value);
};


/**
 * @param {!proto.io.Link=} opt_value
 * @param {number=} opt_index
 * @return {!proto.io.Link}
 */
proto.flights.FlightDesignator.prototype.addDefaultlinks = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 24, opt_value, proto.io.Link, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.flights.FlightDesignator} returns this
 */
proto.flights.FlightDesignator.prototype.clearDefaultlinksList = function() {
  return this.setDefaultlinksList([]);
};


/**
 * optional bool ConditionalItems = 25;
 * @return {boolean}
 */
proto.flights.FlightDesignator.prototype.getConditionalitems = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 25, false));
};


/**
 * @param {boolean} value
 * @return {!proto.flights.FlightDesignator} returns this
 */
proto.flights.FlightDesignator.prototype.setConditionalitems = function(value) {
  return jspb.Message.setProto3BooleanField(this, 25, value);
};


/**
 * optional string BarcodeAdditionalData = 26;
 * @return {string}
 */
proto.flights.FlightDesignator.prototype.getBarcodeadditionaldata = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 26, ""));
};


/**
 * @param {string} value
 * @return {!proto.flights.FlightDesignator} returns this
 */
proto.flights.FlightDesignator.prototype.setBarcodeadditionaldata = function(value) {
  return jspb.Message.setProto3StringField(this, 26, value);
};


/**
 * optional io.Toggle invalidateCancelledPasses = 27;
 * @return {!proto.io.Toggle}
 */
proto.flights.FlightDesignator.prototype.getInvalidatecancelledpasses = function() {
  return /** @type {!proto.io.Toggle} */ (jspb.Message.getFieldWithDefault(this, 27, 0));
};


/**
 * @param {!proto.io.Toggle} value
 * @return {!proto.flights.FlightDesignator} returns this
 */
proto.flights.FlightDesignator.prototype.setInvalidatecancelledpasses = function(value) {
  return jspb.Message.setProto3EnumField(this, 27, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.flights.FlightDesignatorRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.flights.FlightDesignatorRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.flights.FlightDesignatorRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.flights.FlightDesignatorRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    carriercode: jspb.Message.getFieldWithDefault(msg, 1, ""),
    flightnumber: jspb.Message.getFieldWithDefault(msg, 2, ""),
    revision: jspb.Message.getFieldWithDefault(msg, 3, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.flights.FlightDesignatorRequest}
 */
proto.flights.FlightDesignatorRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.flights.FlightDesignatorRequest;
  return proto.flights.FlightDesignatorRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.flights.FlightDesignatorRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.flights.FlightDesignatorRequest}
 */
proto.flights.FlightDesignatorRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setCarriercode(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setFlightnumber(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setRevision(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.flights.FlightDesignatorRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.flights.FlightDesignatorRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.flights.FlightDesignatorRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.flights.FlightDesignatorRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCarriercode();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getFlightnumber();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getRevision();
  if (f !== 0) {
    writer.writeUint32(
      3,
      f
    );
  }
};


/**
 * optional string carrierCode = 1;
 * @return {string}
 */
proto.flights.FlightDesignatorRequest.prototype.getCarriercode = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.flights.FlightDesignatorRequest} returns this
 */
proto.flights.FlightDesignatorRequest.prototype.setCarriercode = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string flightNumber = 2;
 * @return {string}
 */
proto.flights.FlightDesignatorRequest.prototype.getFlightnumber = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.flights.FlightDesignatorRequest} returns this
 */
proto.flights.FlightDesignatorRequest.prototype.setFlightnumber = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional uint32 revision = 3;
 * @return {number}
 */
proto.flights.FlightDesignatorRequest.prototype.getRevision = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.flights.FlightDesignatorRequest} returns this
 */
proto.flights.FlightDesignatorRequest.prototype.setRevision = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.flights.FlightSchedule.prototype.toObject = function(opt_includeInstance) {
  return proto.flights.FlightSchedule.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.flights.FlightSchedule} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.flights.FlightSchedule.toObject = function(includeInstance, msg) {
  var f, obj = {
    monday: (f = msg.getMonday()) && proto.flights.FlightTimes.toObject(includeInstance, f),
    tuesday: (f = msg.getTuesday()) && proto.flights.FlightTimes.toObject(includeInstance, f),
    wednesday: (f = msg.getWednesday()) && proto.flights.FlightTimes.toObject(includeInstance, f),
    thursday: (f = msg.getThursday()) && proto.flights.FlightTimes.toObject(includeInstance, f),
    friday: (f = msg.getFriday()) && proto.flights.FlightTimes.toObject(includeInstance, f),
    saturday: (f = msg.getSaturday()) && proto.flights.FlightTimes.toObject(includeInstance, f),
    sunday: (f = msg.getSunday()) && proto.flights.FlightTimes.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.flights.FlightSchedule}
 */
proto.flights.FlightSchedule.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.flights.FlightSchedule;
  return proto.flights.FlightSchedule.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.flights.FlightSchedule} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.flights.FlightSchedule}
 */
proto.flights.FlightSchedule.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.flights.FlightTimes;
      reader.readMessage(value,proto.flights.FlightTimes.deserializeBinaryFromReader);
      msg.setMonday(value);
      break;
    case 2:
      var value = new proto.flights.FlightTimes;
      reader.readMessage(value,proto.flights.FlightTimes.deserializeBinaryFromReader);
      msg.setTuesday(value);
      break;
    case 3:
      var value = new proto.flights.FlightTimes;
      reader.readMessage(value,proto.flights.FlightTimes.deserializeBinaryFromReader);
      msg.setWednesday(value);
      break;
    case 4:
      var value = new proto.flights.FlightTimes;
      reader.readMessage(value,proto.flights.FlightTimes.deserializeBinaryFromReader);
      msg.setThursday(value);
      break;
    case 5:
      var value = new proto.flights.FlightTimes;
      reader.readMessage(value,proto.flights.FlightTimes.deserializeBinaryFromReader);
      msg.setFriday(value);
      break;
    case 6:
      var value = new proto.flights.FlightTimes;
      reader.readMessage(value,proto.flights.FlightTimes.deserializeBinaryFromReader);
      msg.setSaturday(value);
      break;
    case 7:
      var value = new proto.flights.FlightTimes;
      reader.readMessage(value,proto.flights.FlightTimes.deserializeBinaryFromReader);
      msg.setSunday(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.flights.FlightSchedule.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.flights.FlightSchedule.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.flights.FlightSchedule} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.flights.FlightSchedule.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getMonday();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.flights.FlightTimes.serializeBinaryToWriter
    );
  }
  f = message.getTuesday();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.flights.FlightTimes.serializeBinaryToWriter
    );
  }
  f = message.getWednesday();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.flights.FlightTimes.serializeBinaryToWriter
    );
  }
  f = message.getThursday();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      proto.flights.FlightTimes.serializeBinaryToWriter
    );
  }
  f = message.getFriday();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      proto.flights.FlightTimes.serializeBinaryToWriter
    );
  }
  f = message.getSaturday();
  if (f != null) {
    writer.writeMessage(
      6,
      f,
      proto.flights.FlightTimes.serializeBinaryToWriter
    );
  }
  f = message.getSunday();
  if (f != null) {
    writer.writeMessage(
      7,
      f,
      proto.flights.FlightTimes.serializeBinaryToWriter
    );
  }
};


/**
 * optional FlightTimes monday = 1;
 * @return {?proto.flights.FlightTimes}
 */
proto.flights.FlightSchedule.prototype.getMonday = function() {
  return /** @type{?proto.flights.FlightTimes} */ (
    jspb.Message.getWrapperField(this, proto.flights.FlightTimes, 1));
};


/**
 * @param {?proto.flights.FlightTimes|undefined} value
 * @return {!proto.flights.FlightSchedule} returns this
*/
proto.flights.FlightSchedule.prototype.setMonday = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.flights.FlightSchedule} returns this
 */
proto.flights.FlightSchedule.prototype.clearMonday = function() {
  return this.setMonday(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.flights.FlightSchedule.prototype.hasMonday = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional FlightTimes tuesday = 2;
 * @return {?proto.flights.FlightTimes}
 */
proto.flights.FlightSchedule.prototype.getTuesday = function() {
  return /** @type{?proto.flights.FlightTimes} */ (
    jspb.Message.getWrapperField(this, proto.flights.FlightTimes, 2));
};


/**
 * @param {?proto.flights.FlightTimes|undefined} value
 * @return {!proto.flights.FlightSchedule} returns this
*/
proto.flights.FlightSchedule.prototype.setTuesday = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.flights.FlightSchedule} returns this
 */
proto.flights.FlightSchedule.prototype.clearTuesday = function() {
  return this.setTuesday(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.flights.FlightSchedule.prototype.hasTuesday = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional FlightTimes wednesday = 3;
 * @return {?proto.flights.FlightTimes}
 */
proto.flights.FlightSchedule.prototype.getWednesday = function() {
  return /** @type{?proto.flights.FlightTimes} */ (
    jspb.Message.getWrapperField(this, proto.flights.FlightTimes, 3));
};


/**
 * @param {?proto.flights.FlightTimes|undefined} value
 * @return {!proto.flights.FlightSchedule} returns this
*/
proto.flights.FlightSchedule.prototype.setWednesday = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.flights.FlightSchedule} returns this
 */
proto.flights.FlightSchedule.prototype.clearWednesday = function() {
  return this.setWednesday(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.flights.FlightSchedule.prototype.hasWednesday = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional FlightTimes thursday = 4;
 * @return {?proto.flights.FlightTimes}
 */
proto.flights.FlightSchedule.prototype.getThursday = function() {
  return /** @type{?proto.flights.FlightTimes} */ (
    jspb.Message.getWrapperField(this, proto.flights.FlightTimes, 4));
};


/**
 * @param {?proto.flights.FlightTimes|undefined} value
 * @return {!proto.flights.FlightSchedule} returns this
*/
proto.flights.FlightSchedule.prototype.setThursday = function(value) {
  return jspb.Message.setWrapperField(this, 4, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.flights.FlightSchedule} returns this
 */
proto.flights.FlightSchedule.prototype.clearThursday = function() {
  return this.setThursday(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.flights.FlightSchedule.prototype.hasThursday = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional FlightTimes friday = 5;
 * @return {?proto.flights.FlightTimes}
 */
proto.flights.FlightSchedule.prototype.getFriday = function() {
  return /** @type{?proto.flights.FlightTimes} */ (
    jspb.Message.getWrapperField(this, proto.flights.FlightTimes, 5));
};


/**
 * @param {?proto.flights.FlightTimes|undefined} value
 * @return {!proto.flights.FlightSchedule} returns this
*/
proto.flights.FlightSchedule.prototype.setFriday = function(value) {
  return jspb.Message.setWrapperField(this, 5, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.flights.FlightSchedule} returns this
 */
proto.flights.FlightSchedule.prototype.clearFriday = function() {
  return this.setFriday(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.flights.FlightSchedule.prototype.hasFriday = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional FlightTimes saturday = 6;
 * @return {?proto.flights.FlightTimes}
 */
proto.flights.FlightSchedule.prototype.getSaturday = function() {
  return /** @type{?proto.flights.FlightTimes} */ (
    jspb.Message.getWrapperField(this, proto.flights.FlightTimes, 6));
};


/**
 * @param {?proto.flights.FlightTimes|undefined} value
 * @return {!proto.flights.FlightSchedule} returns this
*/
proto.flights.FlightSchedule.prototype.setSaturday = function(value) {
  return jspb.Message.setWrapperField(this, 6, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.flights.FlightSchedule} returns this
 */
proto.flights.FlightSchedule.prototype.clearSaturday = function() {
  return this.setSaturday(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.flights.FlightSchedule.prototype.hasSaturday = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional FlightTimes sunday = 7;
 * @return {?proto.flights.FlightTimes}
 */
proto.flights.FlightSchedule.prototype.getSunday = function() {
  return /** @type{?proto.flights.FlightTimes} */ (
    jspb.Message.getWrapperField(this, proto.flights.FlightTimes, 7));
};


/**
 * @param {?proto.flights.FlightTimes|undefined} value
 * @return {!proto.flights.FlightSchedule} returns this
*/
proto.flights.FlightSchedule.prototype.setSunday = function(value) {
  return jspb.Message.setWrapperField(this, 7, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.flights.FlightSchedule} returns this
 */
proto.flights.FlightSchedule.prototype.clearSunday = function() {
  return this.setSunday(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.flights.FlightSchedule.prototype.hasSunday = function() {
  return jspb.Message.getField(this, 7) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.flights.FlightTimes.prototype.toObject = function(opt_includeInstance) {
  return proto.flights.FlightTimes.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.flights.FlightTimes} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.flights.FlightTimes.toObject = function(includeInstance, msg) {
  var f, obj = {
    scheduleddeparturetime: (f = msg.getScheduleddeparturetime()) && io_common_common_objects_pb.Time.toObject(includeInstance, f),
    boardingtime: (f = msg.getBoardingtime()) && io_common_common_objects_pb.Time.toObject(includeInstance, f),
    gateclosingtime: (f = msg.getGateclosingtime()) && io_common_common_objects_pb.Time.toObject(includeInstance, f),
    scheduledarrivaltime: (f = msg.getScheduledarrivaltime()) && io_common_common_objects_pb.Time.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.flights.FlightTimes}
 */
proto.flights.FlightTimes.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.flights.FlightTimes;
  return proto.flights.FlightTimes.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.flights.FlightTimes} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.flights.FlightTimes}
 */
proto.flights.FlightTimes.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new io_common_common_objects_pb.Time;
      reader.readMessage(value,io_common_common_objects_pb.Time.deserializeBinaryFromReader);
      msg.setScheduleddeparturetime(value);
      break;
    case 2:
      var value = new io_common_common_objects_pb.Time;
      reader.readMessage(value,io_common_common_objects_pb.Time.deserializeBinaryFromReader);
      msg.setBoardingtime(value);
      break;
    case 3:
      var value = new io_common_common_objects_pb.Time;
      reader.readMessage(value,io_common_common_objects_pb.Time.deserializeBinaryFromReader);
      msg.setGateclosingtime(value);
      break;
    case 4:
      var value = new io_common_common_objects_pb.Time;
      reader.readMessage(value,io_common_common_objects_pb.Time.deserializeBinaryFromReader);
      msg.setScheduledarrivaltime(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.flights.FlightTimes.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.flights.FlightTimes.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.flights.FlightTimes} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.flights.FlightTimes.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getScheduleddeparturetime();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      io_common_common_objects_pb.Time.serializeBinaryToWriter
    );
  }
  f = message.getBoardingtime();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      io_common_common_objects_pb.Time.serializeBinaryToWriter
    );
  }
  f = message.getGateclosingtime();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      io_common_common_objects_pb.Time.serializeBinaryToWriter
    );
  }
  f = message.getScheduledarrivaltime();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      io_common_common_objects_pb.Time.serializeBinaryToWriter
    );
  }
};


/**
 * optional io.Time scheduledDepartureTime = 1;
 * @return {?proto.io.Time}
 */
proto.flights.FlightTimes.prototype.getScheduleddeparturetime = function() {
  return /** @type{?proto.io.Time} */ (
    jspb.Message.getWrapperField(this, io_common_common_objects_pb.Time, 1));
};


/**
 * @param {?proto.io.Time|undefined} value
 * @return {!proto.flights.FlightTimes} returns this
*/
proto.flights.FlightTimes.prototype.setScheduleddeparturetime = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.flights.FlightTimes} returns this
 */
proto.flights.FlightTimes.prototype.clearScheduleddeparturetime = function() {
  return this.setScheduleddeparturetime(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.flights.FlightTimes.prototype.hasScheduleddeparturetime = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional io.Time boardingTime = 2;
 * @return {?proto.io.Time}
 */
proto.flights.FlightTimes.prototype.getBoardingtime = function() {
  return /** @type{?proto.io.Time} */ (
    jspb.Message.getWrapperField(this, io_common_common_objects_pb.Time, 2));
};


/**
 * @param {?proto.io.Time|undefined} value
 * @return {!proto.flights.FlightTimes} returns this
*/
proto.flights.FlightTimes.prototype.setBoardingtime = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.flights.FlightTimes} returns this
 */
proto.flights.FlightTimes.prototype.clearBoardingtime = function() {
  return this.setBoardingtime(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.flights.FlightTimes.prototype.hasBoardingtime = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional io.Time gateClosingTime = 3;
 * @return {?proto.io.Time}
 */
proto.flights.FlightTimes.prototype.getGateclosingtime = function() {
  return /** @type{?proto.io.Time} */ (
    jspb.Message.getWrapperField(this, io_common_common_objects_pb.Time, 3));
};


/**
 * @param {?proto.io.Time|undefined} value
 * @return {!proto.flights.FlightTimes} returns this
*/
proto.flights.FlightTimes.prototype.setGateclosingtime = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.flights.FlightTimes} returns this
 */
proto.flights.FlightTimes.prototype.clearGateclosingtime = function() {
  return this.setGateclosingtime(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.flights.FlightTimes.prototype.hasGateclosingtime = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional io.Time scheduledArrivalTime = 4;
 * @return {?proto.io.Time}
 */
proto.flights.FlightTimes.prototype.getScheduledarrivaltime = function() {
  return /** @type{?proto.io.Time} */ (
    jspb.Message.getWrapperField(this, io_common_common_objects_pb.Time, 4));
};


/**
 * @param {?proto.io.Time|undefined} value
 * @return {!proto.flights.FlightTimes} returns this
*/
proto.flights.FlightTimes.prototype.setScheduledarrivaltime = function(value) {
  return jspb.Message.setWrapperField(this, 4, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.flights.FlightTimes} returns this
 */
proto.flights.FlightTimes.prototype.clearScheduledarrivaltime = function() {
  return this.setScheduledarrivaltime(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.flights.FlightTimes.prototype.hasScheduledarrivaltime = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * @enum {number}
 */
proto.flights.FlightAlerts = {
  NO_ALERTS: 0,
  ALL_ALERTS: 1,
  DEPARTURE_GATE_ALERT: 2,
  DEPARTURE_TIME_ALERT: 4,
  ARRIVAL_GATE_ALERT: 8,
  ARRIVAL_TIME_ALERT: 16,
  BAGGAGE_BELT_ALERT: 32
};

/**
 * @enum {number}
 */
proto.flights.BoardingPolicy = {
  BOARDING_POLICY_UNSPECIFIED: 0,
  ZONE_BASED: 1,
  GROUP_BASED: 2,
  BOARDING_POLICY_OTHER: 3
};

/**
 * @enum {number}
 */
proto.flights.SeatClassPolicy = {
  SEAT_CLASS_POLICY_UNSPECIFIED: 0,
  CABIN_BASED: 1,
  CLASS_BASED: 2,
  TIER_BASED: 3,
  SEAT_CLASS_POLICY_OTHER: 4
};

/**
 * @enum {number}
 */
proto.flights.Authority = {
  IATA: 0,
  ICAO: 1
};

goog.object.extend(exports, proto.flights);
