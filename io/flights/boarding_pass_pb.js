// source: io/flights/boarding_pass.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global = (function() {
  if (this) { return this; }
  if (typeof window !== 'undefined') { return window; }
  if (typeof global !== 'undefined') { return global; }
  if (typeof self !== 'undefined') { return self; }
  return Function('return this')();
}.call(null));

var io_flights_passenger_pb = require('../../io/flights/passenger_pb.js');
goog.object.extend(proto, io_flights_passenger_pb);
var io_flights_barcode_pb = require('../../io/flights/barcode_pb.js');
goog.object.extend(proto, io_flights_barcode_pb);
var io_flights_cabin_codes_cabin_codes_pb = require('../../io/flights/cabin_codes/cabin_codes_pb.js');
goog.object.extend(proto, io_flights_cabin_codes_cabin_codes_pb);
var io_common_common_objects_pb = require('../../io/common/common_objects_pb.js');
goog.object.extend(proto, io_common_common_objects_pb);
var io_common_proximity_pb = require('../../io/common/proximity_pb.js');
goog.object.extend(proto, io_common_proximity_pb);
var io_common_links_pb = require('../../io/common/links_pb.js');
goog.object.extend(proto, io_common_links_pb);
var io_common_metrics_pb = require('../../io/common/metrics_pb.js');
goog.object.extend(proto, io_common_metrics_pb);
goog.exportSymbol('proto.flights.BoardingPassRecord', null, global);
goog.exportSymbol('proto.flights.BoardingPassRecordRequest', null, global);
goog.exportSymbol('proto.flights.BoardingPassRecordRequest.RequestCase', null, global);
goog.exportSymbol('proto.flights.BoardingPassRecordRequestByIndex', null, global);
goog.exportSymbol('proto.flights.BoardingPassRecordRequestByTicketNumber', null, global);
goog.exportSymbol('proto.flights.BoardingPassRequest', null, global);
goog.exportSymbol('proto.flights.BoardingPassRequest.RequestCase', null, global);
goog.exportSymbol('proto.flights.BoardingPassesForBookingRequest', null, global);
goog.exportSymbol('proto.flights.BoardingPassesResponse', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.flights.BoardingPassRecord = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.flights.BoardingPassRecord.repeatedFields_, null);
};
goog.inherits(proto.flights.BoardingPassRecord, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.flights.BoardingPassRecord.displayName = 'proto.flights.BoardingPassRecord';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.flights.BoardingPassRecordRequestByTicketNumber = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.flights.BoardingPassRecordRequestByTicketNumber, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.flights.BoardingPassRecordRequestByTicketNumber.displayName = 'proto.flights.BoardingPassRecordRequestByTicketNumber';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.flights.BoardingPassRecordRequestByIndex = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.flights.BoardingPassRecordRequestByIndex, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.flights.BoardingPassRecordRequestByIndex.displayName = 'proto.flights.BoardingPassRecordRequestByIndex';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.flights.BoardingPassRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.flights.BoardingPassRequest.repeatedFields_, proto.flights.BoardingPassRequest.oneofGroups_);
};
goog.inherits(proto.flights.BoardingPassRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.flights.BoardingPassRequest.displayName = 'proto.flights.BoardingPassRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.flights.BoardingPassRecordRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.flights.BoardingPassRecordRequest.oneofGroups_);
};
goog.inherits(proto.flights.BoardingPassRecordRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.flights.BoardingPassRecordRequest.displayName = 'proto.flights.BoardingPassRecordRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.flights.BoardingPassesForBookingRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.flights.BoardingPassesForBookingRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.flights.BoardingPassesForBookingRequest.displayName = 'proto.flights.BoardingPassesForBookingRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.flights.BoardingPassesResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.flights.BoardingPassesResponse.repeatedFields_, null);
};
goog.inherits(proto.flights.BoardingPassesResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.flights.BoardingPassesResponse.displayName = 'proto.flights.BoardingPassesResponse';
}

/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.flights.BoardingPassRecord.repeatedFields_ = [3,21,30,31,32];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.flights.BoardingPassRecord.prototype.toObject = function(opt_includeInstance) {
  return proto.flights.BoardingPassRecord.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.flights.BoardingPassRecord} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.flights.BoardingPassRecord.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, ""),
    operatingcarrierpnr: jspb.Message.getFieldWithDefault(msg, 2, ""),
    relatedpnrsList: (f = jspb.Message.getRepeatedField(msg, 3)) == null ? undefined : f,
    ticketnumber: jspb.Message.getFieldWithDefault(msg, 4, ""),
    ticketleg: jspb.Message.getFieldWithDefault(msg, 5, 0),
    boardingpoint: jspb.Message.getFieldWithDefault(msg, 6, ""),
    deplaningpoint: jspb.Message.getFieldWithDefault(msg, 7, ""),
    carriercode: jspb.Message.getFieldWithDefault(msg, 8, ""),
    flightnumber: jspb.Message.getFieldWithDefault(msg, 9, ""),
    departuredate: (f = msg.getDeparturedate()) && io_common_common_objects_pb.Date.toObject(includeInstance, f),
    passenger: (f = msg.getPassenger()) && io_flights_passenger_pb.Passenger.toObject(includeInstance, f),
    pb_class: jspb.Message.getFieldWithDefault(msg, 13, ""),
    compartmentcode: jspb.Message.getFieldWithDefault(msg, 14, 0),
    seatnumber: jspb.Message.getFieldWithDefault(msg, 15, ""),
    sequencenumber: jspb.Message.getFieldWithDefault(msg, 16, 0),
    boardinggroup: jspb.Message.getFieldWithDefault(msg, 17, ""),
    boardingposition: jspb.Message.getFieldWithDefault(msg, 18, ""),
    freebaggageallowance: jspb.Message.getFieldWithDefault(msg, 19, ""),
    carryonallowance: jspb.Message.getFieldWithDefault(msg, 20, ""),
    ssrcodesList: (f = jspb.Message.getRepeatedField(msg, 21)) == null ? undefined : f,
    osi: jspb.Message.getFieldWithDefault(msg, 22, ""),
    remarks: jspb.Message.getFieldWithDefault(msg, 23, ""),
    passengerstatus: jspb.Message.getFieldWithDefault(msg, 24, 0),
    conditionalitems: (f = msg.getConditionalitems()) && io_flights_barcode_pb.ConditionalItems.toObject(includeInstance, f),
    barcodepayload: jspb.Message.getFieldWithDefault(msg, 26, ""),
    securityimage: jspb.Message.getFieldWithDefault(msg, 27, ""),
    privilegeimage: jspb.Message.getFieldWithDefault(msg, 28, ""),
    footerimage: jspb.Message.getFieldWithDefault(msg, 29, ""),
    locationmessagesList: jspb.Message.toObjectList(msg.getLocationmessagesList(),
    io_common_proximity_pb.GPSLocation.toObject, includeInstance),
    beaconmessagesList: jspb.Message.toObjectList(msg.getBeaconmessagesList(),
    io_common_proximity_pb.Beacon.toObject, includeInstance),
    linksList: jspb.Message.toObjectList(msg.getLinksList(),
    io_common_links_pb.Link.toObject, includeInstance),
    barcodeadditionaldata: jspb.Message.getFieldWithDefault(msg, 33, ""),
    infantpassid: jspb.Message.getFieldWithDefault(msg, 34, ""),
    additionaldataitems: (f = msg.getAdditionaldataitems()) && io_common_common_objects_pb.DataItems.toObject(includeInstance, f),
    metadata: (f = msg.getMetadata()) && io_common_metrics_pb.Metadata.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.flights.BoardingPassRecord}
 */
proto.flights.BoardingPassRecord.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.flights.BoardingPassRecord;
  return proto.flights.BoardingPassRecord.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.flights.BoardingPassRecord} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.flights.BoardingPassRecord}
 */
proto.flights.BoardingPassRecord.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setOperatingcarrierpnr(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.addRelatedpnrs(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setTicketnumber(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setTicketleg(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setBoardingpoint(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setDeplaningpoint(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.setCarriercode(value);
      break;
    case 9:
      var value = /** @type {string} */ (reader.readString());
      msg.setFlightnumber(value);
      break;
    case 11:
      var value = new io_common_common_objects_pb.Date;
      reader.readMessage(value,io_common_common_objects_pb.Date.deserializeBinaryFromReader);
      msg.setDeparturedate(value);
      break;
    case 12:
      var value = new io_flights_passenger_pb.Passenger;
      reader.readMessage(value,io_flights_passenger_pb.Passenger.deserializeBinaryFromReader);
      msg.setPassenger(value);
      break;
    case 13:
      var value = /** @type {string} */ (reader.readString());
      msg.setClass(value);
      break;
    case 14:
      var value = /** @type {!proto.cabin_codes.CompartmentCode} */ (reader.readEnum());
      msg.setCompartmentcode(value);
      break;
    case 15:
      var value = /** @type {string} */ (reader.readString());
      msg.setSeatnumber(value);
      break;
    case 16:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setSequencenumber(value);
      break;
    case 17:
      var value = /** @type {string} */ (reader.readString());
      msg.setBoardinggroup(value);
      break;
    case 18:
      var value = /** @type {string} */ (reader.readString());
      msg.setBoardingposition(value);
      break;
    case 19:
      var value = /** @type {string} */ (reader.readString());
      msg.setFreebaggageallowance(value);
      break;
    case 20:
      var value = /** @type {string} */ (reader.readString());
      msg.setCarryonallowance(value);
      break;
    case 21:
      var value = /** @type {string} */ (reader.readString());
      msg.addSsrcodes(value);
      break;
    case 22:
      var value = /** @type {string} */ (reader.readString());
      msg.setOsi(value);
      break;
    case 23:
      var value = /** @type {string} */ (reader.readString());
      msg.setRemarks(value);
      break;
    case 24:
      var value = /** @type {!proto.flights.PassengerStatus} */ (reader.readEnum());
      msg.setPassengerstatus(value);
      break;
    case 25:
      var value = new io_flights_barcode_pb.ConditionalItems;
      reader.readMessage(value,io_flights_barcode_pb.ConditionalItems.deserializeBinaryFromReader);
      msg.setConditionalitems(value);
      break;
    case 26:
      var value = /** @type {string} */ (reader.readString());
      msg.setBarcodepayload(value);
      break;
    case 27:
      var value = /** @type {string} */ (reader.readString());
      msg.setSecurityimage(value);
      break;
    case 28:
      var value = /** @type {string} */ (reader.readString());
      msg.setPrivilegeimage(value);
      break;
    case 29:
      var value = /** @type {string} */ (reader.readString());
      msg.setFooterimage(value);
      break;
    case 30:
      var value = new io_common_proximity_pb.GPSLocation;
      reader.readMessage(value,io_common_proximity_pb.GPSLocation.deserializeBinaryFromReader);
      msg.addLocationmessages(value);
      break;
    case 31:
      var value = new io_common_proximity_pb.Beacon;
      reader.readMessage(value,io_common_proximity_pb.Beacon.deserializeBinaryFromReader);
      msg.addBeaconmessages(value);
      break;
    case 32:
      var value = new io_common_links_pb.Link;
      reader.readMessage(value,io_common_links_pb.Link.deserializeBinaryFromReader);
      msg.addLinks(value);
      break;
    case 33:
      var value = /** @type {string} */ (reader.readString());
      msg.setBarcodeadditionaldata(value);
      break;
    case 34:
      var value = /** @type {string} */ (reader.readString());
      msg.setInfantpassid(value);
      break;
    case 35:
      var value = new io_common_common_objects_pb.DataItems;
      reader.readMessage(value,io_common_common_objects_pb.DataItems.deserializeBinaryFromReader);
      msg.setAdditionaldataitems(value);
      break;
    case 36:
      var value = new io_common_metrics_pb.Metadata;
      reader.readMessage(value,io_common_metrics_pb.Metadata.deserializeBinaryFromReader);
      msg.setMetadata(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.flights.BoardingPassRecord.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.flights.BoardingPassRecord.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.flights.BoardingPassRecord} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.flights.BoardingPassRecord.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getOperatingcarrierpnr();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getRelatedpnrsList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      3,
      f
    );
  }
  f = message.getTicketnumber();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getTicketleg();
  if (f !== 0) {
    writer.writeInt32(
      5,
      f
    );
  }
  f = message.getBoardingpoint();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getDeplaningpoint();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
  f = message.getCarriercode();
  if (f.length > 0) {
    writer.writeString(
      8,
      f
    );
  }
  f = message.getFlightnumber();
  if (f.length > 0) {
    writer.writeString(
      9,
      f
    );
  }
  f = message.getDeparturedate();
  if (f != null) {
    writer.writeMessage(
      11,
      f,
      io_common_common_objects_pb.Date.serializeBinaryToWriter
    );
  }
  f = message.getPassenger();
  if (f != null) {
    writer.writeMessage(
      12,
      f,
      io_flights_passenger_pb.Passenger.serializeBinaryToWriter
    );
  }
  f = message.getClass();
  if (f.length > 0) {
    writer.writeString(
      13,
      f
    );
  }
  f = message.getCompartmentcode();
  if (f !== 0.0) {
    writer.writeEnum(
      14,
      f
    );
  }
  f = message.getSeatnumber();
  if (f.length > 0) {
    writer.writeString(
      15,
      f
    );
  }
  f = message.getSequencenumber();
  if (f !== 0) {
    writer.writeInt32(
      16,
      f
    );
  }
  f = message.getBoardinggroup();
  if (f.length > 0) {
    writer.writeString(
      17,
      f
    );
  }
  f = message.getBoardingposition();
  if (f.length > 0) {
    writer.writeString(
      18,
      f
    );
  }
  f = message.getFreebaggageallowance();
  if (f.length > 0) {
    writer.writeString(
      19,
      f
    );
  }
  f = message.getCarryonallowance();
  if (f.length > 0) {
    writer.writeString(
      20,
      f
    );
  }
  f = message.getSsrcodesList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      21,
      f
    );
  }
  f = message.getOsi();
  if (f.length > 0) {
    writer.writeString(
      22,
      f
    );
  }
  f = message.getRemarks();
  if (f.length > 0) {
    writer.writeString(
      23,
      f
    );
  }
  f = message.getPassengerstatus();
  if (f !== 0.0) {
    writer.writeEnum(
      24,
      f
    );
  }
  f = message.getConditionalitems();
  if (f != null) {
    writer.writeMessage(
      25,
      f,
      io_flights_barcode_pb.ConditionalItems.serializeBinaryToWriter
    );
  }
  f = message.getBarcodepayload();
  if (f.length > 0) {
    writer.writeString(
      26,
      f
    );
  }
  f = message.getSecurityimage();
  if (f.length > 0) {
    writer.writeString(
      27,
      f
    );
  }
  f = message.getPrivilegeimage();
  if (f.length > 0) {
    writer.writeString(
      28,
      f
    );
  }
  f = message.getFooterimage();
  if (f.length > 0) {
    writer.writeString(
      29,
      f
    );
  }
  f = message.getLocationmessagesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      30,
      f,
      io_common_proximity_pb.GPSLocation.serializeBinaryToWriter
    );
  }
  f = message.getBeaconmessagesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      31,
      f,
      io_common_proximity_pb.Beacon.serializeBinaryToWriter
    );
  }
  f = message.getLinksList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      32,
      f,
      io_common_links_pb.Link.serializeBinaryToWriter
    );
  }
  f = message.getBarcodeadditionaldata();
  if (f.length > 0) {
    writer.writeString(
      33,
      f
    );
  }
  f = message.getInfantpassid();
  if (f.length > 0) {
    writer.writeString(
      34,
      f
    );
  }
  f = message.getAdditionaldataitems();
  if (f != null) {
    writer.writeMessage(
      35,
      f,
      io_common_common_objects_pb.DataItems.serializeBinaryToWriter
    );
  }
  f = message.getMetadata();
  if (f != null) {
    writer.writeMessage(
      36,
      f,
      io_common_metrics_pb.Metadata.serializeBinaryToWriter
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.flights.BoardingPassRecord.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.flights.BoardingPassRecord} returns this
 */
proto.flights.BoardingPassRecord.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string operatingCarrierPNR = 2;
 * @return {string}
 */
proto.flights.BoardingPassRecord.prototype.getOperatingcarrierpnr = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.flights.BoardingPassRecord} returns this
 */
proto.flights.BoardingPassRecord.prototype.setOperatingcarrierpnr = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * repeated string relatedPNRs = 3;
 * @return {!Array<string>}
 */
proto.flights.BoardingPassRecord.prototype.getRelatedpnrsList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 3));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.flights.BoardingPassRecord} returns this
 */
proto.flights.BoardingPassRecord.prototype.setRelatedpnrsList = function(value) {
  return jspb.Message.setField(this, 3, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.flights.BoardingPassRecord} returns this
 */
proto.flights.BoardingPassRecord.prototype.addRelatedpnrs = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 3, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.flights.BoardingPassRecord} returns this
 */
proto.flights.BoardingPassRecord.prototype.clearRelatedpnrsList = function() {
  return this.setRelatedpnrsList([]);
};


/**
 * optional string ticketNumber = 4;
 * @return {string}
 */
proto.flights.BoardingPassRecord.prototype.getTicketnumber = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.flights.BoardingPassRecord} returns this
 */
proto.flights.BoardingPassRecord.prototype.setTicketnumber = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional int32 ticketLeg = 5;
 * @return {number}
 */
proto.flights.BoardingPassRecord.prototype.getTicketleg = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {number} value
 * @return {!proto.flights.BoardingPassRecord} returns this
 */
proto.flights.BoardingPassRecord.prototype.setTicketleg = function(value) {
  return jspb.Message.setProto3IntField(this, 5, value);
};


/**
 * optional string boardingPoint = 6;
 * @return {string}
 */
proto.flights.BoardingPassRecord.prototype.getBoardingpoint = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.flights.BoardingPassRecord} returns this
 */
proto.flights.BoardingPassRecord.prototype.setBoardingpoint = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional string deplaningPoint = 7;
 * @return {string}
 */
proto.flights.BoardingPassRecord.prototype.getDeplaningpoint = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.flights.BoardingPassRecord} returns this
 */
proto.flights.BoardingPassRecord.prototype.setDeplaningpoint = function(value) {
  return jspb.Message.setProto3StringField(this, 7, value);
};


/**
 * optional string carrierCode = 8;
 * @return {string}
 */
proto.flights.BoardingPassRecord.prototype.getCarriercode = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, ""));
};


/**
 * @param {string} value
 * @return {!proto.flights.BoardingPassRecord} returns this
 */
proto.flights.BoardingPassRecord.prototype.setCarriercode = function(value) {
  return jspb.Message.setProto3StringField(this, 8, value);
};


/**
 * optional string flightNumber = 9;
 * @return {string}
 */
proto.flights.BoardingPassRecord.prototype.getFlightnumber = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 9, ""));
};


/**
 * @param {string} value
 * @return {!proto.flights.BoardingPassRecord} returns this
 */
proto.flights.BoardingPassRecord.prototype.setFlightnumber = function(value) {
  return jspb.Message.setProto3StringField(this, 9, value);
};


/**
 * optional io.Date departureDate = 11;
 * @return {?proto.io.Date}
 */
proto.flights.BoardingPassRecord.prototype.getDeparturedate = function() {
  return /** @type{?proto.io.Date} */ (
    jspb.Message.getWrapperField(this, io_common_common_objects_pb.Date, 11));
};


/**
 * @param {?proto.io.Date|undefined} value
 * @return {!proto.flights.BoardingPassRecord} returns this
*/
proto.flights.BoardingPassRecord.prototype.setDeparturedate = function(value) {
  return jspb.Message.setWrapperField(this, 11, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.flights.BoardingPassRecord} returns this
 */
proto.flights.BoardingPassRecord.prototype.clearDeparturedate = function() {
  return this.setDeparturedate(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.flights.BoardingPassRecord.prototype.hasDeparturedate = function() {
  return jspb.Message.getField(this, 11) != null;
};


/**
 * optional Passenger passenger = 12;
 * @return {?proto.flights.Passenger}
 */
proto.flights.BoardingPassRecord.prototype.getPassenger = function() {
  return /** @type{?proto.flights.Passenger} */ (
    jspb.Message.getWrapperField(this, io_flights_passenger_pb.Passenger, 12));
};


/**
 * @param {?proto.flights.Passenger|undefined} value
 * @return {!proto.flights.BoardingPassRecord} returns this
*/
proto.flights.BoardingPassRecord.prototype.setPassenger = function(value) {
  return jspb.Message.setWrapperField(this, 12, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.flights.BoardingPassRecord} returns this
 */
proto.flights.BoardingPassRecord.prototype.clearPassenger = function() {
  return this.setPassenger(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.flights.BoardingPassRecord.prototype.hasPassenger = function() {
  return jspb.Message.getField(this, 12) != null;
};


/**
 * optional string class = 13;
 * @return {string}
 */
proto.flights.BoardingPassRecord.prototype.getClass = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 13, ""));
};


/**
 * @param {string} value
 * @return {!proto.flights.BoardingPassRecord} returns this
 */
proto.flights.BoardingPassRecord.prototype.setClass = function(value) {
  return jspb.Message.setProto3StringField(this, 13, value);
};


/**
 * optional cabin_codes.CompartmentCode compartmentCode = 14;
 * @return {!proto.cabin_codes.CompartmentCode}
 */
proto.flights.BoardingPassRecord.prototype.getCompartmentcode = function() {
  return /** @type {!proto.cabin_codes.CompartmentCode} */ (jspb.Message.getFieldWithDefault(this, 14, 0));
};


/**
 * @param {!proto.cabin_codes.CompartmentCode} value
 * @return {!proto.flights.BoardingPassRecord} returns this
 */
proto.flights.BoardingPassRecord.prototype.setCompartmentcode = function(value) {
  return jspb.Message.setProto3EnumField(this, 14, value);
};


/**
 * optional string seatNumber = 15;
 * @return {string}
 */
proto.flights.BoardingPassRecord.prototype.getSeatnumber = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 15, ""));
};


/**
 * @param {string} value
 * @return {!proto.flights.BoardingPassRecord} returns this
 */
proto.flights.BoardingPassRecord.prototype.setSeatnumber = function(value) {
  return jspb.Message.setProto3StringField(this, 15, value);
};


/**
 * optional int32 sequenceNumber = 16;
 * @return {number}
 */
proto.flights.BoardingPassRecord.prototype.getSequencenumber = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 16, 0));
};


/**
 * @param {number} value
 * @return {!proto.flights.BoardingPassRecord} returns this
 */
proto.flights.BoardingPassRecord.prototype.setSequencenumber = function(value) {
  return jspb.Message.setProto3IntField(this, 16, value);
};


/**
 * optional string boardingGroup = 17;
 * @return {string}
 */
proto.flights.BoardingPassRecord.prototype.getBoardinggroup = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 17, ""));
};


/**
 * @param {string} value
 * @return {!proto.flights.BoardingPassRecord} returns this
 */
proto.flights.BoardingPassRecord.prototype.setBoardinggroup = function(value) {
  return jspb.Message.setProto3StringField(this, 17, value);
};


/**
 * optional string boardingPosition = 18;
 * @return {string}
 */
proto.flights.BoardingPassRecord.prototype.getBoardingposition = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 18, ""));
};


/**
 * @param {string} value
 * @return {!proto.flights.BoardingPassRecord} returns this
 */
proto.flights.BoardingPassRecord.prototype.setBoardingposition = function(value) {
  return jspb.Message.setProto3StringField(this, 18, value);
};


/**
 * optional string freeBaggageAllowance = 19;
 * @return {string}
 */
proto.flights.BoardingPassRecord.prototype.getFreebaggageallowance = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 19, ""));
};


/**
 * @param {string} value
 * @return {!proto.flights.BoardingPassRecord} returns this
 */
proto.flights.BoardingPassRecord.prototype.setFreebaggageallowance = function(value) {
  return jspb.Message.setProto3StringField(this, 19, value);
};


/**
 * optional string carryOnAllowance = 20;
 * @return {string}
 */
proto.flights.BoardingPassRecord.prototype.getCarryonallowance = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 20, ""));
};


/**
 * @param {string} value
 * @return {!proto.flights.BoardingPassRecord} returns this
 */
proto.flights.BoardingPassRecord.prototype.setCarryonallowance = function(value) {
  return jspb.Message.setProto3StringField(this, 20, value);
};


/**
 * repeated string ssrCodes = 21;
 * @return {!Array<string>}
 */
proto.flights.BoardingPassRecord.prototype.getSsrcodesList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 21));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.flights.BoardingPassRecord} returns this
 */
proto.flights.BoardingPassRecord.prototype.setSsrcodesList = function(value) {
  return jspb.Message.setField(this, 21, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.flights.BoardingPassRecord} returns this
 */
proto.flights.BoardingPassRecord.prototype.addSsrcodes = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 21, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.flights.BoardingPassRecord} returns this
 */
proto.flights.BoardingPassRecord.prototype.clearSsrcodesList = function() {
  return this.setSsrcodesList([]);
};


/**
 * optional string osi = 22;
 * @return {string}
 */
proto.flights.BoardingPassRecord.prototype.getOsi = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 22, ""));
};


/**
 * @param {string} value
 * @return {!proto.flights.BoardingPassRecord} returns this
 */
proto.flights.BoardingPassRecord.prototype.setOsi = function(value) {
  return jspb.Message.setProto3StringField(this, 22, value);
};


/**
 * optional string remarks = 23;
 * @return {string}
 */
proto.flights.BoardingPassRecord.prototype.getRemarks = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 23, ""));
};


/**
 * @param {string} value
 * @return {!proto.flights.BoardingPassRecord} returns this
 */
proto.flights.BoardingPassRecord.prototype.setRemarks = function(value) {
  return jspb.Message.setProto3StringField(this, 23, value);
};


/**
 * optional PassengerStatus passengerStatus = 24;
 * @return {!proto.flights.PassengerStatus}
 */
proto.flights.BoardingPassRecord.prototype.getPassengerstatus = function() {
  return /** @type {!proto.flights.PassengerStatus} */ (jspb.Message.getFieldWithDefault(this, 24, 0));
};


/**
 * @param {!proto.flights.PassengerStatus} value
 * @return {!proto.flights.BoardingPassRecord} returns this
 */
proto.flights.BoardingPassRecord.prototype.setPassengerstatus = function(value) {
  return jspb.Message.setProto3EnumField(this, 24, value);
};


/**
 * optional ConditionalItems conditionalItems = 25;
 * @return {?proto.flights.ConditionalItems}
 */
proto.flights.BoardingPassRecord.prototype.getConditionalitems = function() {
  return /** @type{?proto.flights.ConditionalItems} */ (
    jspb.Message.getWrapperField(this, io_flights_barcode_pb.ConditionalItems, 25));
};


/**
 * @param {?proto.flights.ConditionalItems|undefined} value
 * @return {!proto.flights.BoardingPassRecord} returns this
*/
proto.flights.BoardingPassRecord.prototype.setConditionalitems = function(value) {
  return jspb.Message.setWrapperField(this, 25, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.flights.BoardingPassRecord} returns this
 */
proto.flights.BoardingPassRecord.prototype.clearConditionalitems = function() {
  return this.setConditionalitems(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.flights.BoardingPassRecord.prototype.hasConditionalitems = function() {
  return jspb.Message.getField(this, 25) != null;
};


/**
 * optional string barcodePayload = 26;
 * @return {string}
 */
proto.flights.BoardingPassRecord.prototype.getBarcodepayload = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 26, ""));
};


/**
 * @param {string} value
 * @return {!proto.flights.BoardingPassRecord} returns this
 */
proto.flights.BoardingPassRecord.prototype.setBarcodepayload = function(value) {
  return jspb.Message.setProto3StringField(this, 26, value);
};


/**
 * optional string securityImage = 27;
 * @return {string}
 */
proto.flights.BoardingPassRecord.prototype.getSecurityimage = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 27, ""));
};


/**
 * @param {string} value
 * @return {!proto.flights.BoardingPassRecord} returns this
 */
proto.flights.BoardingPassRecord.prototype.setSecurityimage = function(value) {
  return jspb.Message.setProto3StringField(this, 27, value);
};


/**
 * optional string privilegeImage = 28;
 * @return {string}
 */
proto.flights.BoardingPassRecord.prototype.getPrivilegeimage = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 28, ""));
};


/**
 * @param {string} value
 * @return {!proto.flights.BoardingPassRecord} returns this
 */
proto.flights.BoardingPassRecord.prototype.setPrivilegeimage = function(value) {
  return jspb.Message.setProto3StringField(this, 28, value);
};


/**
 * optional string footerImage = 29;
 * @return {string}
 */
proto.flights.BoardingPassRecord.prototype.getFooterimage = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 29, ""));
};


/**
 * @param {string} value
 * @return {!proto.flights.BoardingPassRecord} returns this
 */
proto.flights.BoardingPassRecord.prototype.setFooterimage = function(value) {
  return jspb.Message.setProto3StringField(this, 29, value);
};


/**
 * repeated io.GPSLocation locationMessages = 30;
 * @return {!Array<!proto.io.GPSLocation>}
 */
proto.flights.BoardingPassRecord.prototype.getLocationmessagesList = function() {
  return /** @type{!Array<!proto.io.GPSLocation>} */ (
    jspb.Message.getRepeatedWrapperField(this, io_common_proximity_pb.GPSLocation, 30));
};


/**
 * @param {!Array<!proto.io.GPSLocation>} value
 * @return {!proto.flights.BoardingPassRecord} returns this
*/
proto.flights.BoardingPassRecord.prototype.setLocationmessagesList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 30, value);
};


/**
 * @param {!proto.io.GPSLocation=} opt_value
 * @param {number=} opt_index
 * @return {!proto.io.GPSLocation}
 */
proto.flights.BoardingPassRecord.prototype.addLocationmessages = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 30, opt_value, proto.io.GPSLocation, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.flights.BoardingPassRecord} returns this
 */
proto.flights.BoardingPassRecord.prototype.clearLocationmessagesList = function() {
  return this.setLocationmessagesList([]);
};


/**
 * repeated io.Beacon beaconMessages = 31;
 * @return {!Array<!proto.io.Beacon>}
 */
proto.flights.BoardingPassRecord.prototype.getBeaconmessagesList = function() {
  return /** @type{!Array<!proto.io.Beacon>} */ (
    jspb.Message.getRepeatedWrapperField(this, io_common_proximity_pb.Beacon, 31));
};


/**
 * @param {!Array<!proto.io.Beacon>} value
 * @return {!proto.flights.BoardingPassRecord} returns this
*/
proto.flights.BoardingPassRecord.prototype.setBeaconmessagesList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 31, value);
};


/**
 * @param {!proto.io.Beacon=} opt_value
 * @param {number=} opt_index
 * @return {!proto.io.Beacon}
 */
proto.flights.BoardingPassRecord.prototype.addBeaconmessages = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 31, opt_value, proto.io.Beacon, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.flights.BoardingPassRecord} returns this
 */
proto.flights.BoardingPassRecord.prototype.clearBeaconmessagesList = function() {
  return this.setBeaconmessagesList([]);
};


/**
 * repeated io.Link links = 32;
 * @return {!Array<!proto.io.Link>}
 */
proto.flights.BoardingPassRecord.prototype.getLinksList = function() {
  return /** @type{!Array<!proto.io.Link>} */ (
    jspb.Message.getRepeatedWrapperField(this, io_common_links_pb.Link, 32));
};


/**
 * @param {!Array<!proto.io.Link>} value
 * @return {!proto.flights.BoardingPassRecord} returns this
*/
proto.flights.BoardingPassRecord.prototype.setLinksList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 32, value);
};


/**
 * @param {!proto.io.Link=} opt_value
 * @param {number=} opt_index
 * @return {!proto.io.Link}
 */
proto.flights.BoardingPassRecord.prototype.addLinks = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 32, opt_value, proto.io.Link, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.flights.BoardingPassRecord} returns this
 */
proto.flights.BoardingPassRecord.prototype.clearLinksList = function() {
  return this.setLinksList([]);
};


/**
 * optional string barcodeAdditionalData = 33;
 * @return {string}
 */
proto.flights.BoardingPassRecord.prototype.getBarcodeadditionaldata = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 33, ""));
};


/**
 * @param {string} value
 * @return {!proto.flights.BoardingPassRecord} returns this
 */
proto.flights.BoardingPassRecord.prototype.setBarcodeadditionaldata = function(value) {
  return jspb.Message.setProto3StringField(this, 33, value);
};


/**
 * optional string infantPassId = 34;
 * @return {string}
 */
proto.flights.BoardingPassRecord.prototype.getInfantpassid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 34, ""));
};


/**
 * @param {string} value
 * @return {!proto.flights.BoardingPassRecord} returns this
 */
proto.flights.BoardingPassRecord.prototype.setInfantpassid = function(value) {
  return jspb.Message.setProto3StringField(this, 34, value);
};


/**
 * optional io.DataItems additionalDataItems = 35;
 * @return {?proto.io.DataItems}
 */
proto.flights.BoardingPassRecord.prototype.getAdditionaldataitems = function() {
  return /** @type{?proto.io.DataItems} */ (
    jspb.Message.getWrapperField(this, io_common_common_objects_pb.DataItems, 35));
};


/**
 * @param {?proto.io.DataItems|undefined} value
 * @return {!proto.flights.BoardingPassRecord} returns this
*/
proto.flights.BoardingPassRecord.prototype.setAdditionaldataitems = function(value) {
  return jspb.Message.setWrapperField(this, 35, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.flights.BoardingPassRecord} returns this
 */
proto.flights.BoardingPassRecord.prototype.clearAdditionaldataitems = function() {
  return this.setAdditionaldataitems(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.flights.BoardingPassRecord.prototype.hasAdditionaldataitems = function() {
  return jspb.Message.getField(this, 35) != null;
};


/**
 * optional io.Metadata metadata = 36;
 * @return {?proto.io.Metadata}
 */
proto.flights.BoardingPassRecord.prototype.getMetadata = function() {
  return /** @type{?proto.io.Metadata} */ (
    jspb.Message.getWrapperField(this, io_common_metrics_pb.Metadata, 36));
};


/**
 * @param {?proto.io.Metadata|undefined} value
 * @return {!proto.flights.BoardingPassRecord} returns this
*/
proto.flights.BoardingPassRecord.prototype.setMetadata = function(value) {
  return jspb.Message.setWrapperField(this, 36, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.flights.BoardingPassRecord} returns this
 */
proto.flights.BoardingPassRecord.prototype.clearMetadata = function() {
  return this.setMetadata(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.flights.BoardingPassRecord.prototype.hasMetadata = function() {
  return jspb.Message.getField(this, 36) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.flights.BoardingPassRecordRequestByTicketNumber.prototype.toObject = function(opt_includeInstance) {
  return proto.flights.BoardingPassRecordRequestByTicketNumber.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.flights.BoardingPassRecordRequestByTicketNumber} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.flights.BoardingPassRecordRequestByTicketNumber.toObject = function(includeInstance, msg) {
  var f, obj = {
    ticketnumber: jspb.Message.getFieldWithDefault(msg, 1, ""),
    ticketleg: jspb.Message.getFieldWithDefault(msg, 2, 0),
    boardingpoint: jspb.Message.getFieldWithDefault(msg, 3, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.flights.BoardingPassRecordRequestByTicketNumber}
 */
proto.flights.BoardingPassRecordRequestByTicketNumber.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.flights.BoardingPassRecordRequestByTicketNumber;
  return proto.flights.BoardingPassRecordRequestByTicketNumber.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.flights.BoardingPassRecordRequestByTicketNumber} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.flights.BoardingPassRecordRequestByTicketNumber}
 */
proto.flights.BoardingPassRecordRequestByTicketNumber.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setTicketnumber(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setTicketleg(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setBoardingpoint(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.flights.BoardingPassRecordRequestByTicketNumber.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.flights.BoardingPassRecordRequestByTicketNumber.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.flights.BoardingPassRecordRequestByTicketNumber} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.flights.BoardingPassRecordRequestByTicketNumber.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTicketnumber();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getTicketleg();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
  f = message.getBoardingpoint();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
};


/**
 * optional string ticketNumber = 1;
 * @return {string}
 */
proto.flights.BoardingPassRecordRequestByTicketNumber.prototype.getTicketnumber = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.flights.BoardingPassRecordRequestByTicketNumber} returns this
 */
proto.flights.BoardingPassRecordRequestByTicketNumber.prototype.setTicketnumber = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional int32 ticketLeg = 2;
 * @return {number}
 */
proto.flights.BoardingPassRecordRequestByTicketNumber.prototype.getTicketleg = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.flights.BoardingPassRecordRequestByTicketNumber} returns this
 */
proto.flights.BoardingPassRecordRequestByTicketNumber.prototype.setTicketleg = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional string boardingPoint = 3;
 * @return {string}
 */
proto.flights.BoardingPassRecordRequestByTicketNumber.prototype.getBoardingpoint = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.flights.BoardingPassRecordRequestByTicketNumber} returns this
 */
proto.flights.BoardingPassRecordRequestByTicketNumber.prototype.setBoardingpoint = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.flights.BoardingPassRecordRequestByIndex.prototype.toObject = function(opt_includeInstance) {
  return proto.flights.BoardingPassRecordRequestByIndex.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.flights.BoardingPassRecordRequestByIndex} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.flights.BoardingPassRecordRequestByIndex.toObject = function(includeInstance, msg) {
  var f, obj = {
    carriercode: jspb.Message.getFieldWithDefault(msg, 1, ""),
    flightnumber: jspb.Message.getFieldWithDefault(msg, 2, ""),
    departuredate: (f = msg.getDeparturedate()) && io_common_common_objects_pb.Date.toObject(includeInstance, f),
    boardingpoint: jspb.Message.getFieldWithDefault(msg, 4, ""),
    sequencenumber: jspb.Message.getFieldWithDefault(msg, 5, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.flights.BoardingPassRecordRequestByIndex}
 */
proto.flights.BoardingPassRecordRequestByIndex.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.flights.BoardingPassRecordRequestByIndex;
  return proto.flights.BoardingPassRecordRequestByIndex.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.flights.BoardingPassRecordRequestByIndex} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.flights.BoardingPassRecordRequestByIndex}
 */
proto.flights.BoardingPassRecordRequestByIndex.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setCarriercode(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setFlightnumber(value);
      break;
    case 3:
      var value = new io_common_common_objects_pb.Date;
      reader.readMessage(value,io_common_common_objects_pb.Date.deserializeBinaryFromReader);
      msg.setDeparturedate(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setBoardingpoint(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setSequencenumber(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.flights.BoardingPassRecordRequestByIndex.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.flights.BoardingPassRecordRequestByIndex.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.flights.BoardingPassRecordRequestByIndex} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.flights.BoardingPassRecordRequestByIndex.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCarriercode();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getFlightnumber();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getDeparturedate();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      io_common_common_objects_pb.Date.serializeBinaryToWriter
    );
  }
  f = message.getBoardingpoint();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getSequencenumber();
  if (f !== 0) {
    writer.writeInt32(
      5,
      f
    );
  }
};


/**
 * optional string carrierCode = 1;
 * @return {string}
 */
proto.flights.BoardingPassRecordRequestByIndex.prototype.getCarriercode = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.flights.BoardingPassRecordRequestByIndex} returns this
 */
proto.flights.BoardingPassRecordRequestByIndex.prototype.setCarriercode = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string flightNumber = 2;
 * @return {string}
 */
proto.flights.BoardingPassRecordRequestByIndex.prototype.getFlightnumber = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.flights.BoardingPassRecordRequestByIndex} returns this
 */
proto.flights.BoardingPassRecordRequestByIndex.prototype.setFlightnumber = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional io.Date departureDate = 3;
 * @return {?proto.io.Date}
 */
proto.flights.BoardingPassRecordRequestByIndex.prototype.getDeparturedate = function() {
  return /** @type{?proto.io.Date} */ (
    jspb.Message.getWrapperField(this, io_common_common_objects_pb.Date, 3));
};


/**
 * @param {?proto.io.Date|undefined} value
 * @return {!proto.flights.BoardingPassRecordRequestByIndex} returns this
*/
proto.flights.BoardingPassRecordRequestByIndex.prototype.setDeparturedate = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.flights.BoardingPassRecordRequestByIndex} returns this
 */
proto.flights.BoardingPassRecordRequestByIndex.prototype.clearDeparturedate = function() {
  return this.setDeparturedate(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.flights.BoardingPassRecordRequestByIndex.prototype.hasDeparturedate = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional string boardingPoint = 4;
 * @return {string}
 */
proto.flights.BoardingPassRecordRequestByIndex.prototype.getBoardingpoint = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.flights.BoardingPassRecordRequestByIndex} returns this
 */
proto.flights.BoardingPassRecordRequestByIndex.prototype.setBoardingpoint = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional int32 sequenceNumber = 5;
 * @return {number}
 */
proto.flights.BoardingPassRecordRequestByIndex.prototype.getSequencenumber = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {number} value
 * @return {!proto.flights.BoardingPassRecordRequestByIndex} returns this
 */
proto.flights.BoardingPassRecordRequestByIndex.prototype.setSequencenumber = function(value) {
  return jspb.Message.setProto3IntField(this, 5, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.flights.BoardingPassRequest.repeatedFields_ = [5];

/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.flights.BoardingPassRequest.oneofGroups_ = [[1,2,3,4]];

/**
 * @enum {number}
 */
proto.flights.BoardingPassRequest.RequestCase = {
  REQUEST_NOT_SET: 0,
  TICKETNUMBER: 1,
  INDEX: 2,
  PNR: 3,
  PASSID: 4
};

/**
 * @return {proto.flights.BoardingPassRequest.RequestCase}
 */
proto.flights.BoardingPassRequest.prototype.getRequestCase = function() {
  return /** @type {proto.flights.BoardingPassRequest.RequestCase} */(jspb.Message.computeOneofCase(this, proto.flights.BoardingPassRequest.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.flights.BoardingPassRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.flights.BoardingPassRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.flights.BoardingPassRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.flights.BoardingPassRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    ticketnumber: (f = msg.getTicketnumber()) && proto.flights.BoardingPassRecordRequestByTicketNumber.toObject(includeInstance, f),
    index: (f = msg.getIndex()) && proto.flights.BoardingPassRecordRequestByIndex.toObject(includeInstance, f),
    pnr: (f = msg.getPnr()) && proto.flights.BoardingPassesForBookingRequest.toObject(includeInstance, f),
    passid: (f = msg.getPassid()) && io_common_common_objects_pb.Id.toObject(includeInstance, f),
    formatList: (f = jspb.Message.getRepeatedField(msg, 5)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.flights.BoardingPassRequest}
 */
proto.flights.BoardingPassRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.flights.BoardingPassRequest;
  return proto.flights.BoardingPassRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.flights.BoardingPassRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.flights.BoardingPassRequest}
 */
proto.flights.BoardingPassRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.flights.BoardingPassRecordRequestByTicketNumber;
      reader.readMessage(value,proto.flights.BoardingPassRecordRequestByTicketNumber.deserializeBinaryFromReader);
      msg.setTicketnumber(value);
      break;
    case 2:
      var value = new proto.flights.BoardingPassRecordRequestByIndex;
      reader.readMessage(value,proto.flights.BoardingPassRecordRequestByIndex.deserializeBinaryFromReader);
      msg.setIndex(value);
      break;
    case 3:
      var value = new proto.flights.BoardingPassesForBookingRequest;
      reader.readMessage(value,proto.flights.BoardingPassesForBookingRequest.deserializeBinaryFromReader);
      msg.setPnr(value);
      break;
    case 4:
      var value = new io_common_common_objects_pb.Id;
      reader.readMessage(value,io_common_common_objects_pb.Id.deserializeBinaryFromReader);
      msg.setPassid(value);
      break;
    case 5:
      var values = /** @type {!Array<!proto.io.PassBundleFormat>} */ (reader.isDelimited() ? reader.readPackedEnum() : [reader.readEnum()]);
      for (var i = 0; i < values.length; i++) {
        msg.addFormat(values[i]);
      }
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.flights.BoardingPassRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.flights.BoardingPassRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.flights.BoardingPassRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.flights.BoardingPassRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTicketnumber();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.flights.BoardingPassRecordRequestByTicketNumber.serializeBinaryToWriter
    );
  }
  f = message.getIndex();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.flights.BoardingPassRecordRequestByIndex.serializeBinaryToWriter
    );
  }
  f = message.getPnr();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.flights.BoardingPassesForBookingRequest.serializeBinaryToWriter
    );
  }
  f = message.getPassid();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      io_common_common_objects_pb.Id.serializeBinaryToWriter
    );
  }
  f = message.getFormatList();
  if (f.length > 0) {
    writer.writePackedEnum(
      5,
      f
    );
  }
};


/**
 * optional BoardingPassRecordRequestByTicketNumber ticketNumber = 1;
 * @return {?proto.flights.BoardingPassRecordRequestByTicketNumber}
 */
proto.flights.BoardingPassRequest.prototype.getTicketnumber = function() {
  return /** @type{?proto.flights.BoardingPassRecordRequestByTicketNumber} */ (
    jspb.Message.getWrapperField(this, proto.flights.BoardingPassRecordRequestByTicketNumber, 1));
};


/**
 * @param {?proto.flights.BoardingPassRecordRequestByTicketNumber|undefined} value
 * @return {!proto.flights.BoardingPassRequest} returns this
*/
proto.flights.BoardingPassRequest.prototype.setTicketnumber = function(value) {
  return jspb.Message.setOneofWrapperField(this, 1, proto.flights.BoardingPassRequest.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.flights.BoardingPassRequest} returns this
 */
proto.flights.BoardingPassRequest.prototype.clearTicketnumber = function() {
  return this.setTicketnumber(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.flights.BoardingPassRequest.prototype.hasTicketnumber = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional BoardingPassRecordRequestByIndex index = 2;
 * @return {?proto.flights.BoardingPassRecordRequestByIndex}
 */
proto.flights.BoardingPassRequest.prototype.getIndex = function() {
  return /** @type{?proto.flights.BoardingPassRecordRequestByIndex} */ (
    jspb.Message.getWrapperField(this, proto.flights.BoardingPassRecordRequestByIndex, 2));
};


/**
 * @param {?proto.flights.BoardingPassRecordRequestByIndex|undefined} value
 * @return {!proto.flights.BoardingPassRequest} returns this
*/
proto.flights.BoardingPassRequest.prototype.setIndex = function(value) {
  return jspb.Message.setOneofWrapperField(this, 2, proto.flights.BoardingPassRequest.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.flights.BoardingPassRequest} returns this
 */
proto.flights.BoardingPassRequest.prototype.clearIndex = function() {
  return this.setIndex(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.flights.BoardingPassRequest.prototype.hasIndex = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional BoardingPassesForBookingRequest pnr = 3;
 * @return {?proto.flights.BoardingPassesForBookingRequest}
 */
proto.flights.BoardingPassRequest.prototype.getPnr = function() {
  return /** @type{?proto.flights.BoardingPassesForBookingRequest} */ (
    jspb.Message.getWrapperField(this, proto.flights.BoardingPassesForBookingRequest, 3));
};


/**
 * @param {?proto.flights.BoardingPassesForBookingRequest|undefined} value
 * @return {!proto.flights.BoardingPassRequest} returns this
*/
proto.flights.BoardingPassRequest.prototype.setPnr = function(value) {
  return jspb.Message.setOneofWrapperField(this, 3, proto.flights.BoardingPassRequest.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.flights.BoardingPassRequest} returns this
 */
proto.flights.BoardingPassRequest.prototype.clearPnr = function() {
  return this.setPnr(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.flights.BoardingPassRequest.prototype.hasPnr = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional io.Id passId = 4;
 * @return {?proto.io.Id}
 */
proto.flights.BoardingPassRequest.prototype.getPassid = function() {
  return /** @type{?proto.io.Id} */ (
    jspb.Message.getWrapperField(this, io_common_common_objects_pb.Id, 4));
};


/**
 * @param {?proto.io.Id|undefined} value
 * @return {!proto.flights.BoardingPassRequest} returns this
*/
proto.flights.BoardingPassRequest.prototype.setPassid = function(value) {
  return jspb.Message.setOneofWrapperField(this, 4, proto.flights.BoardingPassRequest.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.flights.BoardingPassRequest} returns this
 */
proto.flights.BoardingPassRequest.prototype.clearPassid = function() {
  return this.setPassid(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.flights.BoardingPassRequest.prototype.hasPassid = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * repeated io.PassBundleFormat format = 5;
 * @return {!Array<!proto.io.PassBundleFormat>}
 */
proto.flights.BoardingPassRequest.prototype.getFormatList = function() {
  return /** @type {!Array<!proto.io.PassBundleFormat>} */ (jspb.Message.getRepeatedField(this, 5));
};


/**
 * @param {!Array<!proto.io.PassBundleFormat>} value
 * @return {!proto.flights.BoardingPassRequest} returns this
 */
proto.flights.BoardingPassRequest.prototype.setFormatList = function(value) {
  return jspb.Message.setField(this, 5, value || []);
};


/**
 * @param {!proto.io.PassBundleFormat} value
 * @param {number=} opt_index
 * @return {!proto.flights.BoardingPassRequest} returns this
 */
proto.flights.BoardingPassRequest.prototype.addFormat = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 5, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.flights.BoardingPassRequest} returns this
 */
proto.flights.BoardingPassRequest.prototype.clearFormatList = function() {
  return this.setFormatList([]);
};



/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.flights.BoardingPassRecordRequest.oneofGroups_ = [[1,2,3]];

/**
 * @enum {number}
 */
proto.flights.BoardingPassRecordRequest.RequestCase = {
  REQUEST_NOT_SET: 0,
  TICKETNUMBER: 1,
  INDEX: 2,
  PASSID: 3
};

/**
 * @return {proto.flights.BoardingPassRecordRequest.RequestCase}
 */
proto.flights.BoardingPassRecordRequest.prototype.getRequestCase = function() {
  return /** @type {proto.flights.BoardingPassRecordRequest.RequestCase} */(jspb.Message.computeOneofCase(this, proto.flights.BoardingPassRecordRequest.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.flights.BoardingPassRecordRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.flights.BoardingPassRecordRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.flights.BoardingPassRecordRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.flights.BoardingPassRecordRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    ticketnumber: (f = msg.getTicketnumber()) && proto.flights.BoardingPassRecordRequestByTicketNumber.toObject(includeInstance, f),
    index: (f = msg.getIndex()) && proto.flights.BoardingPassRecordRequestByIndex.toObject(includeInstance, f),
    passid: (f = msg.getPassid()) && io_common_common_objects_pb.Id.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.flights.BoardingPassRecordRequest}
 */
proto.flights.BoardingPassRecordRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.flights.BoardingPassRecordRequest;
  return proto.flights.BoardingPassRecordRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.flights.BoardingPassRecordRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.flights.BoardingPassRecordRequest}
 */
proto.flights.BoardingPassRecordRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.flights.BoardingPassRecordRequestByTicketNumber;
      reader.readMessage(value,proto.flights.BoardingPassRecordRequestByTicketNumber.deserializeBinaryFromReader);
      msg.setTicketnumber(value);
      break;
    case 2:
      var value = new proto.flights.BoardingPassRecordRequestByIndex;
      reader.readMessage(value,proto.flights.BoardingPassRecordRequestByIndex.deserializeBinaryFromReader);
      msg.setIndex(value);
      break;
    case 3:
      var value = new io_common_common_objects_pb.Id;
      reader.readMessage(value,io_common_common_objects_pb.Id.deserializeBinaryFromReader);
      msg.setPassid(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.flights.BoardingPassRecordRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.flights.BoardingPassRecordRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.flights.BoardingPassRecordRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.flights.BoardingPassRecordRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTicketnumber();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.flights.BoardingPassRecordRequestByTicketNumber.serializeBinaryToWriter
    );
  }
  f = message.getIndex();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.flights.BoardingPassRecordRequestByIndex.serializeBinaryToWriter
    );
  }
  f = message.getPassid();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      io_common_common_objects_pb.Id.serializeBinaryToWriter
    );
  }
};


/**
 * optional BoardingPassRecordRequestByTicketNumber ticketNumber = 1;
 * @return {?proto.flights.BoardingPassRecordRequestByTicketNumber}
 */
proto.flights.BoardingPassRecordRequest.prototype.getTicketnumber = function() {
  return /** @type{?proto.flights.BoardingPassRecordRequestByTicketNumber} */ (
    jspb.Message.getWrapperField(this, proto.flights.BoardingPassRecordRequestByTicketNumber, 1));
};


/**
 * @param {?proto.flights.BoardingPassRecordRequestByTicketNumber|undefined} value
 * @return {!proto.flights.BoardingPassRecordRequest} returns this
*/
proto.flights.BoardingPassRecordRequest.prototype.setTicketnumber = function(value) {
  return jspb.Message.setOneofWrapperField(this, 1, proto.flights.BoardingPassRecordRequest.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.flights.BoardingPassRecordRequest} returns this
 */
proto.flights.BoardingPassRecordRequest.prototype.clearTicketnumber = function() {
  return this.setTicketnumber(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.flights.BoardingPassRecordRequest.prototype.hasTicketnumber = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional BoardingPassRecordRequestByIndex index = 2;
 * @return {?proto.flights.BoardingPassRecordRequestByIndex}
 */
proto.flights.BoardingPassRecordRequest.prototype.getIndex = function() {
  return /** @type{?proto.flights.BoardingPassRecordRequestByIndex} */ (
    jspb.Message.getWrapperField(this, proto.flights.BoardingPassRecordRequestByIndex, 2));
};


/**
 * @param {?proto.flights.BoardingPassRecordRequestByIndex|undefined} value
 * @return {!proto.flights.BoardingPassRecordRequest} returns this
*/
proto.flights.BoardingPassRecordRequest.prototype.setIndex = function(value) {
  return jspb.Message.setOneofWrapperField(this, 2, proto.flights.BoardingPassRecordRequest.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.flights.BoardingPassRecordRequest} returns this
 */
proto.flights.BoardingPassRecordRequest.prototype.clearIndex = function() {
  return this.setIndex(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.flights.BoardingPassRecordRequest.prototype.hasIndex = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional io.Id passId = 3;
 * @return {?proto.io.Id}
 */
proto.flights.BoardingPassRecordRequest.prototype.getPassid = function() {
  return /** @type{?proto.io.Id} */ (
    jspb.Message.getWrapperField(this, io_common_common_objects_pb.Id, 3));
};


/**
 * @param {?proto.io.Id|undefined} value
 * @return {!proto.flights.BoardingPassRecordRequest} returns this
*/
proto.flights.BoardingPassRecordRequest.prototype.setPassid = function(value) {
  return jspb.Message.setOneofWrapperField(this, 3, proto.flights.BoardingPassRecordRequest.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.flights.BoardingPassRecordRequest} returns this
 */
proto.flights.BoardingPassRecordRequest.prototype.clearPassid = function() {
  return this.setPassid(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.flights.BoardingPassRecordRequest.prototype.hasPassid = function() {
  return jspb.Message.getField(this, 3) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.flights.BoardingPassesForBookingRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.flights.BoardingPassesForBookingRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.flights.BoardingPassesForBookingRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.flights.BoardingPassesForBookingRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    pnr: jspb.Message.getFieldWithDefault(msg, 1, ""),
    ticketleg: jspb.Message.getFieldWithDefault(msg, 2, 0),
    boardingpoint: jspb.Message.getFieldWithDefault(msg, 3, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.flights.BoardingPassesForBookingRequest}
 */
proto.flights.BoardingPassesForBookingRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.flights.BoardingPassesForBookingRequest;
  return proto.flights.BoardingPassesForBookingRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.flights.BoardingPassesForBookingRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.flights.BoardingPassesForBookingRequest}
 */
proto.flights.BoardingPassesForBookingRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setPnr(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setTicketleg(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setBoardingpoint(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.flights.BoardingPassesForBookingRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.flights.BoardingPassesForBookingRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.flights.BoardingPassesForBookingRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.flights.BoardingPassesForBookingRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPnr();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getTicketleg();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
  f = message.getBoardingpoint();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
};


/**
 * optional string pnr = 1;
 * @return {string}
 */
proto.flights.BoardingPassesForBookingRequest.prototype.getPnr = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.flights.BoardingPassesForBookingRequest} returns this
 */
proto.flights.BoardingPassesForBookingRequest.prototype.setPnr = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional int32 ticketLeg = 2;
 * @return {number}
 */
proto.flights.BoardingPassesForBookingRequest.prototype.getTicketleg = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.flights.BoardingPassesForBookingRequest} returns this
 */
proto.flights.BoardingPassesForBookingRequest.prototype.setTicketleg = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional string boardingPoint = 3;
 * @return {string}
 */
proto.flights.BoardingPassesForBookingRequest.prototype.getBoardingpoint = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.flights.BoardingPassesForBookingRequest} returns this
 */
proto.flights.BoardingPassesForBookingRequest.prototype.setBoardingpoint = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.flights.BoardingPassesResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.flights.BoardingPassesResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.flights.BoardingPassesResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.flights.BoardingPassesResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.flights.BoardingPassesResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    boardingpassesList: jspb.Message.toObjectList(msg.getBoardingpassesList(),
    io_common_common_objects_pb.PassBundle.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.flights.BoardingPassesResponse}
 */
proto.flights.BoardingPassesResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.flights.BoardingPassesResponse;
  return proto.flights.BoardingPassesResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.flights.BoardingPassesResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.flights.BoardingPassesResponse}
 */
proto.flights.BoardingPassesResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new io_common_common_objects_pb.PassBundle;
      reader.readMessage(value,io_common_common_objects_pb.PassBundle.deserializeBinaryFromReader);
      msg.addBoardingpasses(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.flights.BoardingPassesResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.flights.BoardingPassesResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.flights.BoardingPassesResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.flights.BoardingPassesResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getBoardingpassesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      io_common_common_objects_pb.PassBundle.serializeBinaryToWriter
    );
  }
};


/**
 * repeated io.PassBundle boardingPasses = 1;
 * @return {!Array<!proto.io.PassBundle>}
 */
proto.flights.BoardingPassesResponse.prototype.getBoardingpassesList = function() {
  return /** @type{!Array<!proto.io.PassBundle>} */ (
    jspb.Message.getRepeatedWrapperField(this, io_common_common_objects_pb.PassBundle, 1));
};


/**
 * @param {!Array<!proto.io.PassBundle>} value
 * @return {!proto.flights.BoardingPassesResponse} returns this
*/
proto.flights.BoardingPassesResponse.prototype.setBoardingpassesList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.io.PassBundle=} opt_value
 * @param {number=} opt_index
 * @return {!proto.io.PassBundle}
 */
proto.flights.BoardingPassesResponse.prototype.addBoardingpasses = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.io.PassBundle, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.flights.BoardingPassesResponse} returns this
 */
proto.flights.BoardingPassesResponse.prototype.clearBoardingpassesList = function() {
  return this.setBoardingpassesList([]);
};


goog.object.extend(exports, proto.flights);
