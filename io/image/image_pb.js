// source: io/image/image.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global = (function() {
  if (this) { return this; }
  if (typeof window !== 'undefined') { return window; }
  if (typeof global !== 'undefined') { return global; }
  if (typeof self !== 'undefined') { return self; }
  return Function('return this')();
}.call(null));

var io_common_localization_pb = require('../../io/common/localization_pb.js');
goog.object.extend(proto, io_common_localization_pb);
var google_protobuf_timestamp_pb = require('google-protobuf/google/protobuf/timestamp_pb.js');
goog.object.extend(proto, google_protobuf_timestamp_pb);
goog.exportSymbol('proto.io.CreateImageInput', null, global);
goog.exportSymbol('proto.io.ImageBundle', null, global);
goog.exportSymbol('proto.io.ImageData', null, global);
goog.exportSymbol('proto.io.ImageIds', null, global);
goog.exportSymbol('proto.io.ImageRecord', null, global);
goog.exportSymbol('proto.io.ImageUse', null, global);
goog.exportSymbol('proto.io.LocalizedImageInput', null, global);
goog.exportSymbol('proto.io.MultipleImages', null, global);
goog.exportSymbol('proto.io.ProfileImageInput', null, global);
goog.exportSymbol('proto.io.StampImageConfig', null, global);
goog.exportSymbol('proto.io.StampImagePreview', null, global);
goog.exportSymbol('proto.io.StampImagePreviewRequest', null, global);
goog.exportSymbol('proto.io.StampImageRequest', null, global);
goog.exportSymbol('proto.io.UpdateImageInput', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.io.ImageIds = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.io.ImageIds, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.io.ImageIds.displayName = 'proto.io.ImageIds';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.io.ImageData = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.io.ImageData, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.io.ImageData.displayName = 'proto.io.ImageData';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.io.ImageRecord = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.io.ImageRecord.repeatedFields_, null);
};
goog.inherits(proto.io.ImageRecord, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.io.ImageRecord.displayName = 'proto.io.ImageRecord';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.io.ProfileImageInput = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.io.ProfileImageInput, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.io.ProfileImageInput.displayName = 'proto.io.ProfileImageInput';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.io.MultipleImages = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.io.MultipleImages.repeatedFields_, null);
};
goog.inherits(proto.io.MultipleImages, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.io.MultipleImages.displayName = 'proto.io.MultipleImages';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.io.StampImageRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.io.StampImageRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.io.StampImageRequest.displayName = 'proto.io.StampImageRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.io.CreateImageInput = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.io.CreateImageInput, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.io.CreateImageInput.displayName = 'proto.io.CreateImageInput';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.io.UpdateImageInput = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.io.UpdateImageInput, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.io.UpdateImageInput.displayName = 'proto.io.UpdateImageInput';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.io.ImageBundle = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.io.ImageBundle, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.io.ImageBundle.displayName = 'proto.io.ImageBundle';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.io.LocalizedImageInput = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.io.LocalizedImageInput, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.io.LocalizedImageInput.displayName = 'proto.io.LocalizedImageInput';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.io.StampImageConfig = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.io.StampImageConfig, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.io.StampImageConfig.displayName = 'proto.io.StampImageConfig';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.io.StampImagePreviewRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.io.StampImagePreviewRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.io.StampImagePreviewRequest.displayName = 'proto.io.StampImagePreviewRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.io.StampImagePreview = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.io.StampImagePreview, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.io.StampImagePreview.displayName = 'proto.io.StampImagePreview';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.io.ImageIds.prototype.toObject = function(opt_includeInstance) {
  return proto.io.ImageIds.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.io.ImageIds} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.ImageIds.toObject = function(includeInstance, msg) {
  var f, obj = {
    icon: jspb.Message.getFieldWithDefault(msg, 1, ""),
    logo: jspb.Message.getFieldWithDefault(msg, 2, ""),
    applelogo: jspb.Message.getFieldWithDefault(msg, 3, ""),
    hero: jspb.Message.getFieldWithDefault(msg, 4, ""),
    eventstrip: jspb.Message.getFieldWithDefault(msg, 5, ""),
    strip: jspb.Message.getFieldWithDefault(msg, 6, ""),
    thumbnail: jspb.Message.getFieldWithDefault(msg, 7, ""),
    background: jspb.Message.getFieldWithDefault(msg, 8, ""),
    footer: jspb.Message.getFieldWithDefault(msg, 9, ""),
    security: jspb.Message.getFieldWithDefault(msg, 10, ""),
    privilege: jspb.Message.getFieldWithDefault(msg, 11, ""),
    airlinealliance: jspb.Message.getFieldWithDefault(msg, 12, ""),
    personalization: jspb.Message.getFieldWithDefault(msg, 13, ""),
    banner: jspb.Message.getFieldWithDefault(msg, 14, ""),
    message: jspb.Message.getFieldWithDefault(msg, 15, ""),
    profile: jspb.Message.getFieldWithDefault(msg, 16, ""),
    appimage: jspb.Message.getFieldWithDefault(msg, 17, ""),
    stampedimage: jspb.Message.getFieldWithDefault(msg, 18, ""),
    unstampedimage: jspb.Message.getFieldWithDefault(msg, 19, ""),
    stampimage: jspb.Message.getFieldWithDefault(msg, 20, ""),
    widelogo: jspb.Message.getFieldWithDefault(msg, 21, ""),
    secondarylogo: jspb.Message.getFieldWithDefault(msg, 22, ""),
    artwork: jspb.Message.getFieldWithDefault(msg, 23, ""),
    posterlogo: jspb.Message.getFieldWithDefault(msg, 24, ""),
    venuemap: jspb.Message.getFieldWithDefault(msg, 25, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.io.ImageIds}
 */
proto.io.ImageIds.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.io.ImageIds;
  return proto.io.ImageIds.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.io.ImageIds} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.io.ImageIds}
 */
proto.io.ImageIds.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setIcon(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setLogo(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setApplelogo(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setHero(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setEventstrip(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setStrip(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setThumbnail(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.setBackground(value);
      break;
    case 9:
      var value = /** @type {string} */ (reader.readString());
      msg.setFooter(value);
      break;
    case 10:
      var value = /** @type {string} */ (reader.readString());
      msg.setSecurity(value);
      break;
    case 11:
      var value = /** @type {string} */ (reader.readString());
      msg.setPrivilege(value);
      break;
    case 12:
      var value = /** @type {string} */ (reader.readString());
      msg.setAirlinealliance(value);
      break;
    case 13:
      var value = /** @type {string} */ (reader.readString());
      msg.setPersonalization(value);
      break;
    case 14:
      var value = /** @type {string} */ (reader.readString());
      msg.setBanner(value);
      break;
    case 15:
      var value = /** @type {string} */ (reader.readString());
      msg.setMessage(value);
      break;
    case 16:
      var value = /** @type {string} */ (reader.readString());
      msg.setProfile(value);
      break;
    case 17:
      var value = /** @type {string} */ (reader.readString());
      msg.setAppimage(value);
      break;
    case 18:
      var value = /** @type {string} */ (reader.readString());
      msg.setStampedimage(value);
      break;
    case 19:
      var value = /** @type {string} */ (reader.readString());
      msg.setUnstampedimage(value);
      break;
    case 20:
      var value = /** @type {string} */ (reader.readString());
      msg.setStampimage(value);
      break;
    case 21:
      var value = /** @type {string} */ (reader.readString());
      msg.setWidelogo(value);
      break;
    case 22:
      var value = /** @type {string} */ (reader.readString());
      msg.setSecondarylogo(value);
      break;
    case 23:
      var value = /** @type {string} */ (reader.readString());
      msg.setArtwork(value);
      break;
    case 24:
      var value = /** @type {string} */ (reader.readString());
      msg.setPosterlogo(value);
      break;
    case 25:
      var value = /** @type {string} */ (reader.readString());
      msg.setVenuemap(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.io.ImageIds.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.io.ImageIds.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.io.ImageIds} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.ImageIds.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getIcon();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getLogo();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getApplelogo();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getHero();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getEventstrip();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getStrip();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getThumbnail();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
  f = message.getBackground();
  if (f.length > 0) {
    writer.writeString(
      8,
      f
    );
  }
  f = message.getFooter();
  if (f.length > 0) {
    writer.writeString(
      9,
      f
    );
  }
  f = message.getSecurity();
  if (f.length > 0) {
    writer.writeString(
      10,
      f
    );
  }
  f = message.getPrivilege();
  if (f.length > 0) {
    writer.writeString(
      11,
      f
    );
  }
  f = message.getAirlinealliance();
  if (f.length > 0) {
    writer.writeString(
      12,
      f
    );
  }
  f = message.getPersonalization();
  if (f.length > 0) {
    writer.writeString(
      13,
      f
    );
  }
  f = message.getBanner();
  if (f.length > 0) {
    writer.writeString(
      14,
      f
    );
  }
  f = message.getMessage();
  if (f.length > 0) {
    writer.writeString(
      15,
      f
    );
  }
  f = message.getProfile();
  if (f.length > 0) {
    writer.writeString(
      16,
      f
    );
  }
  f = message.getAppimage();
  if (f.length > 0) {
    writer.writeString(
      17,
      f
    );
  }
  f = message.getStampedimage();
  if (f.length > 0) {
    writer.writeString(
      18,
      f
    );
  }
  f = message.getUnstampedimage();
  if (f.length > 0) {
    writer.writeString(
      19,
      f
    );
  }
  f = message.getStampimage();
  if (f.length > 0) {
    writer.writeString(
      20,
      f
    );
  }
  f = message.getWidelogo();
  if (f.length > 0) {
    writer.writeString(
      21,
      f
    );
  }
  f = message.getSecondarylogo();
  if (f.length > 0) {
    writer.writeString(
      22,
      f
    );
  }
  f = message.getArtwork();
  if (f.length > 0) {
    writer.writeString(
      23,
      f
    );
  }
  f = message.getPosterlogo();
  if (f.length > 0) {
    writer.writeString(
      24,
      f
    );
  }
  f = message.getVenuemap();
  if (f.length > 0) {
    writer.writeString(
      25,
      f
    );
  }
};


/**
 * optional string icon = 1;
 * @return {string}
 */
proto.io.ImageIds.prototype.getIcon = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.ImageIds} returns this
 */
proto.io.ImageIds.prototype.setIcon = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string logo = 2;
 * @return {string}
 */
proto.io.ImageIds.prototype.getLogo = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.ImageIds} returns this
 */
proto.io.ImageIds.prototype.setLogo = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string appleLogo = 3;
 * @return {string}
 */
proto.io.ImageIds.prototype.getApplelogo = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.ImageIds} returns this
 */
proto.io.ImageIds.prototype.setApplelogo = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string hero = 4;
 * @return {string}
 */
proto.io.ImageIds.prototype.getHero = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.ImageIds} returns this
 */
proto.io.ImageIds.prototype.setHero = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string eventStrip = 5;
 * @return {string}
 */
proto.io.ImageIds.prototype.getEventstrip = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.ImageIds} returns this
 */
proto.io.ImageIds.prototype.setEventstrip = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional string strip = 6;
 * @return {string}
 */
proto.io.ImageIds.prototype.getStrip = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.ImageIds} returns this
 */
proto.io.ImageIds.prototype.setStrip = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional string thumbnail = 7;
 * @return {string}
 */
proto.io.ImageIds.prototype.getThumbnail = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.ImageIds} returns this
 */
proto.io.ImageIds.prototype.setThumbnail = function(value) {
  return jspb.Message.setProto3StringField(this, 7, value);
};


/**
 * optional string background = 8;
 * @return {string}
 */
proto.io.ImageIds.prototype.getBackground = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.ImageIds} returns this
 */
proto.io.ImageIds.prototype.setBackground = function(value) {
  return jspb.Message.setProto3StringField(this, 8, value);
};


/**
 * optional string footer = 9;
 * @return {string}
 */
proto.io.ImageIds.prototype.getFooter = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 9, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.ImageIds} returns this
 */
proto.io.ImageIds.prototype.setFooter = function(value) {
  return jspb.Message.setProto3StringField(this, 9, value);
};


/**
 * optional string security = 10;
 * @return {string}
 */
proto.io.ImageIds.prototype.getSecurity = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 10, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.ImageIds} returns this
 */
proto.io.ImageIds.prototype.setSecurity = function(value) {
  return jspb.Message.setProto3StringField(this, 10, value);
};


/**
 * optional string privilege = 11;
 * @return {string}
 */
proto.io.ImageIds.prototype.getPrivilege = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 11, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.ImageIds} returns this
 */
proto.io.ImageIds.prototype.setPrivilege = function(value) {
  return jspb.Message.setProto3StringField(this, 11, value);
};


/**
 * optional string airlineAlliance = 12;
 * @return {string}
 */
proto.io.ImageIds.prototype.getAirlinealliance = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 12, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.ImageIds} returns this
 */
proto.io.ImageIds.prototype.setAirlinealliance = function(value) {
  return jspb.Message.setProto3StringField(this, 12, value);
};


/**
 * optional string personalization = 13;
 * @return {string}
 */
proto.io.ImageIds.prototype.getPersonalization = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 13, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.ImageIds} returns this
 */
proto.io.ImageIds.prototype.setPersonalization = function(value) {
  return jspb.Message.setProto3StringField(this, 13, value);
};


/**
 * optional string banner = 14;
 * @return {string}
 */
proto.io.ImageIds.prototype.getBanner = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 14, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.ImageIds} returns this
 */
proto.io.ImageIds.prototype.setBanner = function(value) {
  return jspb.Message.setProto3StringField(this, 14, value);
};


/**
 * optional string message = 15;
 * @return {string}
 */
proto.io.ImageIds.prototype.getMessage = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 15, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.ImageIds} returns this
 */
proto.io.ImageIds.prototype.setMessage = function(value) {
  return jspb.Message.setProto3StringField(this, 15, value);
};


/**
 * optional string profile = 16;
 * @return {string}
 */
proto.io.ImageIds.prototype.getProfile = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 16, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.ImageIds} returns this
 */
proto.io.ImageIds.prototype.setProfile = function(value) {
  return jspb.Message.setProto3StringField(this, 16, value);
};


/**
 * optional string appImage = 17;
 * @return {string}
 */
proto.io.ImageIds.prototype.getAppimage = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 17, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.ImageIds} returns this
 */
proto.io.ImageIds.prototype.setAppimage = function(value) {
  return jspb.Message.setProto3StringField(this, 17, value);
};


/**
 * optional string stampedImage = 18;
 * @return {string}
 */
proto.io.ImageIds.prototype.getStampedimage = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 18, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.ImageIds} returns this
 */
proto.io.ImageIds.prototype.setStampedimage = function(value) {
  return jspb.Message.setProto3StringField(this, 18, value);
};


/**
 * optional string unstampedImage = 19;
 * @return {string}
 */
proto.io.ImageIds.prototype.getUnstampedimage = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 19, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.ImageIds} returns this
 */
proto.io.ImageIds.prototype.setUnstampedimage = function(value) {
  return jspb.Message.setProto3StringField(this, 19, value);
};


/**
 * optional string stampImage = 20;
 * @return {string}
 */
proto.io.ImageIds.prototype.getStampimage = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 20, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.ImageIds} returns this
 */
proto.io.ImageIds.prototype.setStampimage = function(value) {
  return jspb.Message.setProto3StringField(this, 20, value);
};


/**
 * optional string wideLogo = 21;
 * @return {string}
 */
proto.io.ImageIds.prototype.getWidelogo = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 21, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.ImageIds} returns this
 */
proto.io.ImageIds.prototype.setWidelogo = function(value) {
  return jspb.Message.setProto3StringField(this, 21, value);
};


/**
 * optional string secondaryLogo = 22;
 * @return {string}
 */
proto.io.ImageIds.prototype.getSecondarylogo = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 22, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.ImageIds} returns this
 */
proto.io.ImageIds.prototype.setSecondarylogo = function(value) {
  return jspb.Message.setProto3StringField(this, 22, value);
};


/**
 * optional string artwork = 23;
 * @return {string}
 */
proto.io.ImageIds.prototype.getArtwork = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 23, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.ImageIds} returns this
 */
proto.io.ImageIds.prototype.setArtwork = function(value) {
  return jspb.Message.setProto3StringField(this, 23, value);
};


/**
 * optional string posterLogo = 24;
 * @return {string}
 */
proto.io.ImageIds.prototype.getPosterlogo = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 24, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.ImageIds} returns this
 */
proto.io.ImageIds.prototype.setPosterlogo = function(value) {
  return jspb.Message.setProto3StringField(this, 24, value);
};


/**
 * optional string venueMap = 25;
 * @return {string}
 */
proto.io.ImageIds.prototype.getVenuemap = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 25, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.ImageIds} returns this
 */
proto.io.ImageIds.prototype.setVenuemap = function(value) {
  return jspb.Message.setProto3StringField(this, 25, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.io.ImageData.prototype.toObject = function(opt_includeInstance) {
  return proto.io.ImageData.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.io.ImageData} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.ImageData.toObject = function(includeInstance, msg) {
  var f, obj = {
    icon: jspb.Message.getFieldWithDefault(msg, 1, ""),
    logo: jspb.Message.getFieldWithDefault(msg, 2, ""),
    applelogo: jspb.Message.getFieldWithDefault(msg, 3, ""),
    hero: jspb.Message.getFieldWithDefault(msg, 4, ""),
    eventstrip: jspb.Message.getFieldWithDefault(msg, 5, ""),
    strip: jspb.Message.getFieldWithDefault(msg, 6, ""),
    thumbnail: jspb.Message.getFieldWithDefault(msg, 7, ""),
    background: jspb.Message.getFieldWithDefault(msg, 8, ""),
    footer: jspb.Message.getFieldWithDefault(msg, 9, ""),
    security: jspb.Message.getFieldWithDefault(msg, 10, ""),
    privilege: jspb.Message.getFieldWithDefault(msg, 11, ""),
    airlinealliance: jspb.Message.getFieldWithDefault(msg, 12, ""),
    personalization: jspb.Message.getFieldWithDefault(msg, 13, ""),
    banner: jspb.Message.getFieldWithDefault(msg, 14, ""),
    message: jspb.Message.getFieldWithDefault(msg, 15, ""),
    profile: jspb.Message.getFieldWithDefault(msg, 16, ""),
    appimage: jspb.Message.getFieldWithDefault(msg, 17, ""),
    stampedimage: jspb.Message.getFieldWithDefault(msg, 18, ""),
    unstampedimage: jspb.Message.getFieldWithDefault(msg, 19, ""),
    stampconfig: (f = msg.getStampconfig()) && proto.io.StampImageConfig.toObject(includeInstance, f),
    widelogo: jspb.Message.getFieldWithDefault(msg, 21, ""),
    secondarylogo: jspb.Message.getFieldWithDefault(msg, 22, ""),
    artwork: jspb.Message.getFieldWithDefault(msg, 23, ""),
    posterlogo: jspb.Message.getFieldWithDefault(msg, 24, ""),
    venuemap: jspb.Message.getFieldWithDefault(msg, 25, ""),
    localizedicon: (f = msg.getLocalizedicon()) && io_common_localization_pb.LocalizedString.toObject(includeInstance, f),
    localizedlogo: (f = msg.getLocalizedlogo()) && io_common_localization_pb.LocalizedString.toObject(includeInstance, f),
    localizedapplelogo: (f = msg.getLocalizedapplelogo()) && io_common_localization_pb.LocalizedString.toObject(includeInstance, f),
    localizedhero: (f = msg.getLocalizedhero()) && io_common_localization_pb.LocalizedString.toObject(includeInstance, f),
    localizedeventstrip: (f = msg.getLocalizedeventstrip()) && io_common_localization_pb.LocalizedString.toObject(includeInstance, f),
    localizedstrip: (f = msg.getLocalizedstrip()) && io_common_localization_pb.LocalizedString.toObject(includeInstance, f),
    localizedthumbnail: (f = msg.getLocalizedthumbnail()) && io_common_localization_pb.LocalizedString.toObject(includeInstance, f),
    localizedbackground: (f = msg.getLocalizedbackground()) && io_common_localization_pb.LocalizedString.toObject(includeInstance, f),
    localizedfooter: (f = msg.getLocalizedfooter()) && io_common_localization_pb.LocalizedString.toObject(includeInstance, f),
    localizedsecurity: (f = msg.getLocalizedsecurity()) && io_common_localization_pb.LocalizedString.toObject(includeInstance, f),
    localizedprivilege: (f = msg.getLocalizedprivilege()) && io_common_localization_pb.LocalizedString.toObject(includeInstance, f),
    localizedairlinealliance: (f = msg.getLocalizedairlinealliance()) && io_common_localization_pb.LocalizedString.toObject(includeInstance, f),
    localizedpersonalization: (f = msg.getLocalizedpersonalization()) && io_common_localization_pb.LocalizedString.toObject(includeInstance, f),
    localizedbanner: (f = msg.getLocalizedbanner()) && io_common_localization_pb.LocalizedString.toObject(includeInstance, f),
    localizedmessage: (f = msg.getLocalizedmessage()) && io_common_localization_pb.LocalizedString.toObject(includeInstance, f),
    localizedwidelogo: (f = msg.getLocalizedwidelogo()) && io_common_localization_pb.LocalizedString.toObject(includeInstance, f),
    localizedsecondarylogo: (f = msg.getLocalizedsecondarylogo()) && io_common_localization_pb.LocalizedString.toObject(includeInstance, f),
    localizedartwork: (f = msg.getLocalizedartwork()) && io_common_localization_pb.LocalizedString.toObject(includeInstance, f),
    localizedposterlogo: (f = msg.getLocalizedposterlogo()) && io_common_localization_pb.LocalizedString.toObject(includeInstance, f),
    localizedvenuemap: (f = msg.getLocalizedvenuemap()) && io_common_localization_pb.LocalizedString.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.io.ImageData}
 */
proto.io.ImageData.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.io.ImageData;
  return proto.io.ImageData.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.io.ImageData} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.io.ImageData}
 */
proto.io.ImageData.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setIcon(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setLogo(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setApplelogo(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setHero(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setEventstrip(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setStrip(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setThumbnail(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.setBackground(value);
      break;
    case 9:
      var value = /** @type {string} */ (reader.readString());
      msg.setFooter(value);
      break;
    case 10:
      var value = /** @type {string} */ (reader.readString());
      msg.setSecurity(value);
      break;
    case 11:
      var value = /** @type {string} */ (reader.readString());
      msg.setPrivilege(value);
      break;
    case 12:
      var value = /** @type {string} */ (reader.readString());
      msg.setAirlinealliance(value);
      break;
    case 13:
      var value = /** @type {string} */ (reader.readString());
      msg.setPersonalization(value);
      break;
    case 14:
      var value = /** @type {string} */ (reader.readString());
      msg.setBanner(value);
      break;
    case 15:
      var value = /** @type {string} */ (reader.readString());
      msg.setMessage(value);
      break;
    case 16:
      var value = /** @type {string} */ (reader.readString());
      msg.setProfile(value);
      break;
    case 17:
      var value = /** @type {string} */ (reader.readString());
      msg.setAppimage(value);
      break;
    case 18:
      var value = /** @type {string} */ (reader.readString());
      msg.setStampedimage(value);
      break;
    case 19:
      var value = /** @type {string} */ (reader.readString());
      msg.setUnstampedimage(value);
      break;
    case 20:
      var value = new proto.io.StampImageConfig;
      reader.readMessage(value,proto.io.StampImageConfig.deserializeBinaryFromReader);
      msg.setStampconfig(value);
      break;
    case 21:
      var value = /** @type {string} */ (reader.readString());
      msg.setWidelogo(value);
      break;
    case 22:
      var value = /** @type {string} */ (reader.readString());
      msg.setSecondarylogo(value);
      break;
    case 23:
      var value = /** @type {string} */ (reader.readString());
      msg.setArtwork(value);
      break;
    case 24:
      var value = /** @type {string} */ (reader.readString());
      msg.setPosterlogo(value);
      break;
    case 25:
      var value = /** @type {string} */ (reader.readString());
      msg.setVenuemap(value);
      break;
    case 31:
      var value = new io_common_localization_pb.LocalizedString;
      reader.readMessage(value,io_common_localization_pb.LocalizedString.deserializeBinaryFromReader);
      msg.setLocalizedicon(value);
      break;
    case 32:
      var value = new io_common_localization_pb.LocalizedString;
      reader.readMessage(value,io_common_localization_pb.LocalizedString.deserializeBinaryFromReader);
      msg.setLocalizedlogo(value);
      break;
    case 33:
      var value = new io_common_localization_pb.LocalizedString;
      reader.readMessage(value,io_common_localization_pb.LocalizedString.deserializeBinaryFromReader);
      msg.setLocalizedapplelogo(value);
      break;
    case 34:
      var value = new io_common_localization_pb.LocalizedString;
      reader.readMessage(value,io_common_localization_pb.LocalizedString.deserializeBinaryFromReader);
      msg.setLocalizedhero(value);
      break;
    case 35:
      var value = new io_common_localization_pb.LocalizedString;
      reader.readMessage(value,io_common_localization_pb.LocalizedString.deserializeBinaryFromReader);
      msg.setLocalizedeventstrip(value);
      break;
    case 36:
      var value = new io_common_localization_pb.LocalizedString;
      reader.readMessage(value,io_common_localization_pb.LocalizedString.deserializeBinaryFromReader);
      msg.setLocalizedstrip(value);
      break;
    case 37:
      var value = new io_common_localization_pb.LocalizedString;
      reader.readMessage(value,io_common_localization_pb.LocalizedString.deserializeBinaryFromReader);
      msg.setLocalizedthumbnail(value);
      break;
    case 38:
      var value = new io_common_localization_pb.LocalizedString;
      reader.readMessage(value,io_common_localization_pb.LocalizedString.deserializeBinaryFromReader);
      msg.setLocalizedbackground(value);
      break;
    case 39:
      var value = new io_common_localization_pb.LocalizedString;
      reader.readMessage(value,io_common_localization_pb.LocalizedString.deserializeBinaryFromReader);
      msg.setLocalizedfooter(value);
      break;
    case 40:
      var value = new io_common_localization_pb.LocalizedString;
      reader.readMessage(value,io_common_localization_pb.LocalizedString.deserializeBinaryFromReader);
      msg.setLocalizedsecurity(value);
      break;
    case 41:
      var value = new io_common_localization_pb.LocalizedString;
      reader.readMessage(value,io_common_localization_pb.LocalizedString.deserializeBinaryFromReader);
      msg.setLocalizedprivilege(value);
      break;
    case 42:
      var value = new io_common_localization_pb.LocalizedString;
      reader.readMessage(value,io_common_localization_pb.LocalizedString.deserializeBinaryFromReader);
      msg.setLocalizedairlinealliance(value);
      break;
    case 43:
      var value = new io_common_localization_pb.LocalizedString;
      reader.readMessage(value,io_common_localization_pb.LocalizedString.deserializeBinaryFromReader);
      msg.setLocalizedpersonalization(value);
      break;
    case 44:
      var value = new io_common_localization_pb.LocalizedString;
      reader.readMessage(value,io_common_localization_pb.LocalizedString.deserializeBinaryFromReader);
      msg.setLocalizedbanner(value);
      break;
    case 45:
      var value = new io_common_localization_pb.LocalizedString;
      reader.readMessage(value,io_common_localization_pb.LocalizedString.deserializeBinaryFromReader);
      msg.setLocalizedmessage(value);
      break;
    case 46:
      var value = new io_common_localization_pb.LocalizedString;
      reader.readMessage(value,io_common_localization_pb.LocalizedString.deserializeBinaryFromReader);
      msg.setLocalizedwidelogo(value);
      break;
    case 47:
      var value = new io_common_localization_pb.LocalizedString;
      reader.readMessage(value,io_common_localization_pb.LocalizedString.deserializeBinaryFromReader);
      msg.setLocalizedsecondarylogo(value);
      break;
    case 48:
      var value = new io_common_localization_pb.LocalizedString;
      reader.readMessage(value,io_common_localization_pb.LocalizedString.deserializeBinaryFromReader);
      msg.setLocalizedartwork(value);
      break;
    case 49:
      var value = new io_common_localization_pb.LocalizedString;
      reader.readMessage(value,io_common_localization_pb.LocalizedString.deserializeBinaryFromReader);
      msg.setLocalizedposterlogo(value);
      break;
    case 50:
      var value = new io_common_localization_pb.LocalizedString;
      reader.readMessage(value,io_common_localization_pb.LocalizedString.deserializeBinaryFromReader);
      msg.setLocalizedvenuemap(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.io.ImageData.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.io.ImageData.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.io.ImageData} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.ImageData.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getIcon();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getLogo();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getApplelogo();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getHero();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getEventstrip();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getStrip();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getThumbnail();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
  f = message.getBackground();
  if (f.length > 0) {
    writer.writeString(
      8,
      f
    );
  }
  f = message.getFooter();
  if (f.length > 0) {
    writer.writeString(
      9,
      f
    );
  }
  f = message.getSecurity();
  if (f.length > 0) {
    writer.writeString(
      10,
      f
    );
  }
  f = message.getPrivilege();
  if (f.length > 0) {
    writer.writeString(
      11,
      f
    );
  }
  f = message.getAirlinealliance();
  if (f.length > 0) {
    writer.writeString(
      12,
      f
    );
  }
  f = message.getPersonalization();
  if (f.length > 0) {
    writer.writeString(
      13,
      f
    );
  }
  f = message.getBanner();
  if (f.length > 0) {
    writer.writeString(
      14,
      f
    );
  }
  f = message.getMessage();
  if (f.length > 0) {
    writer.writeString(
      15,
      f
    );
  }
  f = message.getProfile();
  if (f.length > 0) {
    writer.writeString(
      16,
      f
    );
  }
  f = message.getAppimage();
  if (f.length > 0) {
    writer.writeString(
      17,
      f
    );
  }
  f = message.getStampedimage();
  if (f.length > 0) {
    writer.writeString(
      18,
      f
    );
  }
  f = message.getUnstampedimage();
  if (f.length > 0) {
    writer.writeString(
      19,
      f
    );
  }
  f = message.getStampconfig();
  if (f != null) {
    writer.writeMessage(
      20,
      f,
      proto.io.StampImageConfig.serializeBinaryToWriter
    );
  }
  f = message.getWidelogo();
  if (f.length > 0) {
    writer.writeString(
      21,
      f
    );
  }
  f = message.getSecondarylogo();
  if (f.length > 0) {
    writer.writeString(
      22,
      f
    );
  }
  f = message.getArtwork();
  if (f.length > 0) {
    writer.writeString(
      23,
      f
    );
  }
  f = message.getPosterlogo();
  if (f.length > 0) {
    writer.writeString(
      24,
      f
    );
  }
  f = message.getVenuemap();
  if (f.length > 0) {
    writer.writeString(
      25,
      f
    );
  }
  f = message.getLocalizedicon();
  if (f != null) {
    writer.writeMessage(
      31,
      f,
      io_common_localization_pb.LocalizedString.serializeBinaryToWriter
    );
  }
  f = message.getLocalizedlogo();
  if (f != null) {
    writer.writeMessage(
      32,
      f,
      io_common_localization_pb.LocalizedString.serializeBinaryToWriter
    );
  }
  f = message.getLocalizedapplelogo();
  if (f != null) {
    writer.writeMessage(
      33,
      f,
      io_common_localization_pb.LocalizedString.serializeBinaryToWriter
    );
  }
  f = message.getLocalizedhero();
  if (f != null) {
    writer.writeMessage(
      34,
      f,
      io_common_localization_pb.LocalizedString.serializeBinaryToWriter
    );
  }
  f = message.getLocalizedeventstrip();
  if (f != null) {
    writer.writeMessage(
      35,
      f,
      io_common_localization_pb.LocalizedString.serializeBinaryToWriter
    );
  }
  f = message.getLocalizedstrip();
  if (f != null) {
    writer.writeMessage(
      36,
      f,
      io_common_localization_pb.LocalizedString.serializeBinaryToWriter
    );
  }
  f = message.getLocalizedthumbnail();
  if (f != null) {
    writer.writeMessage(
      37,
      f,
      io_common_localization_pb.LocalizedString.serializeBinaryToWriter
    );
  }
  f = message.getLocalizedbackground();
  if (f != null) {
    writer.writeMessage(
      38,
      f,
      io_common_localization_pb.LocalizedString.serializeBinaryToWriter
    );
  }
  f = message.getLocalizedfooter();
  if (f != null) {
    writer.writeMessage(
      39,
      f,
      io_common_localization_pb.LocalizedString.serializeBinaryToWriter
    );
  }
  f = message.getLocalizedsecurity();
  if (f != null) {
    writer.writeMessage(
      40,
      f,
      io_common_localization_pb.LocalizedString.serializeBinaryToWriter
    );
  }
  f = message.getLocalizedprivilege();
  if (f != null) {
    writer.writeMessage(
      41,
      f,
      io_common_localization_pb.LocalizedString.serializeBinaryToWriter
    );
  }
  f = message.getLocalizedairlinealliance();
  if (f != null) {
    writer.writeMessage(
      42,
      f,
      io_common_localization_pb.LocalizedString.serializeBinaryToWriter
    );
  }
  f = message.getLocalizedpersonalization();
  if (f != null) {
    writer.writeMessage(
      43,
      f,
      io_common_localization_pb.LocalizedString.serializeBinaryToWriter
    );
  }
  f = message.getLocalizedbanner();
  if (f != null) {
    writer.writeMessage(
      44,
      f,
      io_common_localization_pb.LocalizedString.serializeBinaryToWriter
    );
  }
  f = message.getLocalizedmessage();
  if (f != null) {
    writer.writeMessage(
      45,
      f,
      io_common_localization_pb.LocalizedString.serializeBinaryToWriter
    );
  }
  f = message.getLocalizedwidelogo();
  if (f != null) {
    writer.writeMessage(
      46,
      f,
      io_common_localization_pb.LocalizedString.serializeBinaryToWriter
    );
  }
  f = message.getLocalizedsecondarylogo();
  if (f != null) {
    writer.writeMessage(
      47,
      f,
      io_common_localization_pb.LocalizedString.serializeBinaryToWriter
    );
  }
  f = message.getLocalizedartwork();
  if (f != null) {
    writer.writeMessage(
      48,
      f,
      io_common_localization_pb.LocalizedString.serializeBinaryToWriter
    );
  }
  f = message.getLocalizedposterlogo();
  if (f != null) {
    writer.writeMessage(
      49,
      f,
      io_common_localization_pb.LocalizedString.serializeBinaryToWriter
    );
  }
  f = message.getLocalizedvenuemap();
  if (f != null) {
    writer.writeMessage(
      50,
      f,
      io_common_localization_pb.LocalizedString.serializeBinaryToWriter
    );
  }
};


/**
 * optional string icon = 1;
 * @return {string}
 */
proto.io.ImageData.prototype.getIcon = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.ImageData} returns this
 */
proto.io.ImageData.prototype.setIcon = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string logo = 2;
 * @return {string}
 */
proto.io.ImageData.prototype.getLogo = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.ImageData} returns this
 */
proto.io.ImageData.prototype.setLogo = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string appleLogo = 3;
 * @return {string}
 */
proto.io.ImageData.prototype.getApplelogo = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.ImageData} returns this
 */
proto.io.ImageData.prototype.setApplelogo = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string hero = 4;
 * @return {string}
 */
proto.io.ImageData.prototype.getHero = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.ImageData} returns this
 */
proto.io.ImageData.prototype.setHero = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string eventStrip = 5;
 * @return {string}
 */
proto.io.ImageData.prototype.getEventstrip = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.ImageData} returns this
 */
proto.io.ImageData.prototype.setEventstrip = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional string strip = 6;
 * @return {string}
 */
proto.io.ImageData.prototype.getStrip = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.ImageData} returns this
 */
proto.io.ImageData.prototype.setStrip = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional string thumbnail = 7;
 * @return {string}
 */
proto.io.ImageData.prototype.getThumbnail = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.ImageData} returns this
 */
proto.io.ImageData.prototype.setThumbnail = function(value) {
  return jspb.Message.setProto3StringField(this, 7, value);
};


/**
 * optional string background = 8;
 * @return {string}
 */
proto.io.ImageData.prototype.getBackground = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.ImageData} returns this
 */
proto.io.ImageData.prototype.setBackground = function(value) {
  return jspb.Message.setProto3StringField(this, 8, value);
};


/**
 * optional string footer = 9;
 * @return {string}
 */
proto.io.ImageData.prototype.getFooter = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 9, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.ImageData} returns this
 */
proto.io.ImageData.prototype.setFooter = function(value) {
  return jspb.Message.setProto3StringField(this, 9, value);
};


/**
 * optional string security = 10;
 * @return {string}
 */
proto.io.ImageData.prototype.getSecurity = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 10, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.ImageData} returns this
 */
proto.io.ImageData.prototype.setSecurity = function(value) {
  return jspb.Message.setProto3StringField(this, 10, value);
};


/**
 * optional string privilege = 11;
 * @return {string}
 */
proto.io.ImageData.prototype.getPrivilege = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 11, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.ImageData} returns this
 */
proto.io.ImageData.prototype.setPrivilege = function(value) {
  return jspb.Message.setProto3StringField(this, 11, value);
};


/**
 * optional string airlineAlliance = 12;
 * @return {string}
 */
proto.io.ImageData.prototype.getAirlinealliance = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 12, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.ImageData} returns this
 */
proto.io.ImageData.prototype.setAirlinealliance = function(value) {
  return jspb.Message.setProto3StringField(this, 12, value);
};


/**
 * optional string personalization = 13;
 * @return {string}
 */
proto.io.ImageData.prototype.getPersonalization = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 13, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.ImageData} returns this
 */
proto.io.ImageData.prototype.setPersonalization = function(value) {
  return jspb.Message.setProto3StringField(this, 13, value);
};


/**
 * optional string banner = 14;
 * @return {string}
 */
proto.io.ImageData.prototype.getBanner = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 14, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.ImageData} returns this
 */
proto.io.ImageData.prototype.setBanner = function(value) {
  return jspb.Message.setProto3StringField(this, 14, value);
};


/**
 * optional string message = 15;
 * @return {string}
 */
proto.io.ImageData.prototype.getMessage = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 15, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.ImageData} returns this
 */
proto.io.ImageData.prototype.setMessage = function(value) {
  return jspb.Message.setProto3StringField(this, 15, value);
};


/**
 * optional string profile = 16;
 * @return {string}
 */
proto.io.ImageData.prototype.getProfile = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 16, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.ImageData} returns this
 */
proto.io.ImageData.prototype.setProfile = function(value) {
  return jspb.Message.setProto3StringField(this, 16, value);
};


/**
 * optional string appImage = 17;
 * @return {string}
 */
proto.io.ImageData.prototype.getAppimage = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 17, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.ImageData} returns this
 */
proto.io.ImageData.prototype.setAppimage = function(value) {
  return jspb.Message.setProto3StringField(this, 17, value);
};


/**
 * optional string stampedImage = 18;
 * @return {string}
 */
proto.io.ImageData.prototype.getStampedimage = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 18, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.ImageData} returns this
 */
proto.io.ImageData.prototype.setStampedimage = function(value) {
  return jspb.Message.setProto3StringField(this, 18, value);
};


/**
 * optional string unstampedImage = 19;
 * @return {string}
 */
proto.io.ImageData.prototype.getUnstampedimage = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 19, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.ImageData} returns this
 */
proto.io.ImageData.prototype.setUnstampedimage = function(value) {
  return jspb.Message.setProto3StringField(this, 19, value);
};


/**
 * optional StampImageConfig stampConfig = 20;
 * @return {?proto.io.StampImageConfig}
 */
proto.io.ImageData.prototype.getStampconfig = function() {
  return /** @type{?proto.io.StampImageConfig} */ (
    jspb.Message.getWrapperField(this, proto.io.StampImageConfig, 20));
};


/**
 * @param {?proto.io.StampImageConfig|undefined} value
 * @return {!proto.io.ImageData} returns this
*/
proto.io.ImageData.prototype.setStampconfig = function(value) {
  return jspb.Message.setWrapperField(this, 20, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.io.ImageData} returns this
 */
proto.io.ImageData.prototype.clearStampconfig = function() {
  return this.setStampconfig(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.io.ImageData.prototype.hasStampconfig = function() {
  return jspb.Message.getField(this, 20) != null;
};


/**
 * optional string wideLogo = 21;
 * @return {string}
 */
proto.io.ImageData.prototype.getWidelogo = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 21, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.ImageData} returns this
 */
proto.io.ImageData.prototype.setWidelogo = function(value) {
  return jspb.Message.setProto3StringField(this, 21, value);
};


/**
 * optional string secondaryLogo = 22;
 * @return {string}
 */
proto.io.ImageData.prototype.getSecondarylogo = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 22, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.ImageData} returns this
 */
proto.io.ImageData.prototype.setSecondarylogo = function(value) {
  return jspb.Message.setProto3StringField(this, 22, value);
};


/**
 * optional string artwork = 23;
 * @return {string}
 */
proto.io.ImageData.prototype.getArtwork = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 23, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.ImageData} returns this
 */
proto.io.ImageData.prototype.setArtwork = function(value) {
  return jspb.Message.setProto3StringField(this, 23, value);
};


/**
 * optional string posterLogo = 24;
 * @return {string}
 */
proto.io.ImageData.prototype.getPosterlogo = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 24, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.ImageData} returns this
 */
proto.io.ImageData.prototype.setPosterlogo = function(value) {
  return jspb.Message.setProto3StringField(this, 24, value);
};


/**
 * optional string venueMap = 25;
 * @return {string}
 */
proto.io.ImageData.prototype.getVenuemap = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 25, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.ImageData} returns this
 */
proto.io.ImageData.prototype.setVenuemap = function(value) {
  return jspb.Message.setProto3StringField(this, 25, value);
};


/**
 * optional LocalizedString localizedIcon = 31;
 * @return {?proto.io.LocalizedString}
 */
proto.io.ImageData.prototype.getLocalizedicon = function() {
  return /** @type{?proto.io.LocalizedString} */ (
    jspb.Message.getWrapperField(this, io_common_localization_pb.LocalizedString, 31));
};


/**
 * @param {?proto.io.LocalizedString|undefined} value
 * @return {!proto.io.ImageData} returns this
*/
proto.io.ImageData.prototype.setLocalizedicon = function(value) {
  return jspb.Message.setWrapperField(this, 31, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.io.ImageData} returns this
 */
proto.io.ImageData.prototype.clearLocalizedicon = function() {
  return this.setLocalizedicon(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.io.ImageData.prototype.hasLocalizedicon = function() {
  return jspb.Message.getField(this, 31) != null;
};


/**
 * optional LocalizedString localizedLogo = 32;
 * @return {?proto.io.LocalizedString}
 */
proto.io.ImageData.prototype.getLocalizedlogo = function() {
  return /** @type{?proto.io.LocalizedString} */ (
    jspb.Message.getWrapperField(this, io_common_localization_pb.LocalizedString, 32));
};


/**
 * @param {?proto.io.LocalizedString|undefined} value
 * @return {!proto.io.ImageData} returns this
*/
proto.io.ImageData.prototype.setLocalizedlogo = function(value) {
  return jspb.Message.setWrapperField(this, 32, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.io.ImageData} returns this
 */
proto.io.ImageData.prototype.clearLocalizedlogo = function() {
  return this.setLocalizedlogo(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.io.ImageData.prototype.hasLocalizedlogo = function() {
  return jspb.Message.getField(this, 32) != null;
};


/**
 * optional LocalizedString localizedAppleLogo = 33;
 * @return {?proto.io.LocalizedString}
 */
proto.io.ImageData.prototype.getLocalizedapplelogo = function() {
  return /** @type{?proto.io.LocalizedString} */ (
    jspb.Message.getWrapperField(this, io_common_localization_pb.LocalizedString, 33));
};


/**
 * @param {?proto.io.LocalizedString|undefined} value
 * @return {!proto.io.ImageData} returns this
*/
proto.io.ImageData.prototype.setLocalizedapplelogo = function(value) {
  return jspb.Message.setWrapperField(this, 33, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.io.ImageData} returns this
 */
proto.io.ImageData.prototype.clearLocalizedapplelogo = function() {
  return this.setLocalizedapplelogo(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.io.ImageData.prototype.hasLocalizedapplelogo = function() {
  return jspb.Message.getField(this, 33) != null;
};


/**
 * optional LocalizedString localizedHero = 34;
 * @return {?proto.io.LocalizedString}
 */
proto.io.ImageData.prototype.getLocalizedhero = function() {
  return /** @type{?proto.io.LocalizedString} */ (
    jspb.Message.getWrapperField(this, io_common_localization_pb.LocalizedString, 34));
};


/**
 * @param {?proto.io.LocalizedString|undefined} value
 * @return {!proto.io.ImageData} returns this
*/
proto.io.ImageData.prototype.setLocalizedhero = function(value) {
  return jspb.Message.setWrapperField(this, 34, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.io.ImageData} returns this
 */
proto.io.ImageData.prototype.clearLocalizedhero = function() {
  return this.setLocalizedhero(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.io.ImageData.prototype.hasLocalizedhero = function() {
  return jspb.Message.getField(this, 34) != null;
};


/**
 * optional LocalizedString localizedEventStrip = 35;
 * @return {?proto.io.LocalizedString}
 */
proto.io.ImageData.prototype.getLocalizedeventstrip = function() {
  return /** @type{?proto.io.LocalizedString} */ (
    jspb.Message.getWrapperField(this, io_common_localization_pb.LocalizedString, 35));
};


/**
 * @param {?proto.io.LocalizedString|undefined} value
 * @return {!proto.io.ImageData} returns this
*/
proto.io.ImageData.prototype.setLocalizedeventstrip = function(value) {
  return jspb.Message.setWrapperField(this, 35, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.io.ImageData} returns this
 */
proto.io.ImageData.prototype.clearLocalizedeventstrip = function() {
  return this.setLocalizedeventstrip(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.io.ImageData.prototype.hasLocalizedeventstrip = function() {
  return jspb.Message.getField(this, 35) != null;
};


/**
 * optional LocalizedString localizedStrip = 36;
 * @return {?proto.io.LocalizedString}
 */
proto.io.ImageData.prototype.getLocalizedstrip = function() {
  return /** @type{?proto.io.LocalizedString} */ (
    jspb.Message.getWrapperField(this, io_common_localization_pb.LocalizedString, 36));
};


/**
 * @param {?proto.io.LocalizedString|undefined} value
 * @return {!proto.io.ImageData} returns this
*/
proto.io.ImageData.prototype.setLocalizedstrip = function(value) {
  return jspb.Message.setWrapperField(this, 36, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.io.ImageData} returns this
 */
proto.io.ImageData.prototype.clearLocalizedstrip = function() {
  return this.setLocalizedstrip(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.io.ImageData.prototype.hasLocalizedstrip = function() {
  return jspb.Message.getField(this, 36) != null;
};


/**
 * optional LocalizedString localizedThumbnail = 37;
 * @return {?proto.io.LocalizedString}
 */
proto.io.ImageData.prototype.getLocalizedthumbnail = function() {
  return /** @type{?proto.io.LocalizedString} */ (
    jspb.Message.getWrapperField(this, io_common_localization_pb.LocalizedString, 37));
};


/**
 * @param {?proto.io.LocalizedString|undefined} value
 * @return {!proto.io.ImageData} returns this
*/
proto.io.ImageData.prototype.setLocalizedthumbnail = function(value) {
  return jspb.Message.setWrapperField(this, 37, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.io.ImageData} returns this
 */
proto.io.ImageData.prototype.clearLocalizedthumbnail = function() {
  return this.setLocalizedthumbnail(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.io.ImageData.prototype.hasLocalizedthumbnail = function() {
  return jspb.Message.getField(this, 37) != null;
};


/**
 * optional LocalizedString localizedBackground = 38;
 * @return {?proto.io.LocalizedString}
 */
proto.io.ImageData.prototype.getLocalizedbackground = function() {
  return /** @type{?proto.io.LocalizedString} */ (
    jspb.Message.getWrapperField(this, io_common_localization_pb.LocalizedString, 38));
};


/**
 * @param {?proto.io.LocalizedString|undefined} value
 * @return {!proto.io.ImageData} returns this
*/
proto.io.ImageData.prototype.setLocalizedbackground = function(value) {
  return jspb.Message.setWrapperField(this, 38, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.io.ImageData} returns this
 */
proto.io.ImageData.prototype.clearLocalizedbackground = function() {
  return this.setLocalizedbackground(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.io.ImageData.prototype.hasLocalizedbackground = function() {
  return jspb.Message.getField(this, 38) != null;
};


/**
 * optional LocalizedString localizedFooter = 39;
 * @return {?proto.io.LocalizedString}
 */
proto.io.ImageData.prototype.getLocalizedfooter = function() {
  return /** @type{?proto.io.LocalizedString} */ (
    jspb.Message.getWrapperField(this, io_common_localization_pb.LocalizedString, 39));
};


/**
 * @param {?proto.io.LocalizedString|undefined} value
 * @return {!proto.io.ImageData} returns this
*/
proto.io.ImageData.prototype.setLocalizedfooter = function(value) {
  return jspb.Message.setWrapperField(this, 39, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.io.ImageData} returns this
 */
proto.io.ImageData.prototype.clearLocalizedfooter = function() {
  return this.setLocalizedfooter(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.io.ImageData.prototype.hasLocalizedfooter = function() {
  return jspb.Message.getField(this, 39) != null;
};


/**
 * optional LocalizedString localizedSecurity = 40;
 * @return {?proto.io.LocalizedString}
 */
proto.io.ImageData.prototype.getLocalizedsecurity = function() {
  return /** @type{?proto.io.LocalizedString} */ (
    jspb.Message.getWrapperField(this, io_common_localization_pb.LocalizedString, 40));
};


/**
 * @param {?proto.io.LocalizedString|undefined} value
 * @return {!proto.io.ImageData} returns this
*/
proto.io.ImageData.prototype.setLocalizedsecurity = function(value) {
  return jspb.Message.setWrapperField(this, 40, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.io.ImageData} returns this
 */
proto.io.ImageData.prototype.clearLocalizedsecurity = function() {
  return this.setLocalizedsecurity(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.io.ImageData.prototype.hasLocalizedsecurity = function() {
  return jspb.Message.getField(this, 40) != null;
};


/**
 * optional LocalizedString localizedPrivilege = 41;
 * @return {?proto.io.LocalizedString}
 */
proto.io.ImageData.prototype.getLocalizedprivilege = function() {
  return /** @type{?proto.io.LocalizedString} */ (
    jspb.Message.getWrapperField(this, io_common_localization_pb.LocalizedString, 41));
};


/**
 * @param {?proto.io.LocalizedString|undefined} value
 * @return {!proto.io.ImageData} returns this
*/
proto.io.ImageData.prototype.setLocalizedprivilege = function(value) {
  return jspb.Message.setWrapperField(this, 41, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.io.ImageData} returns this
 */
proto.io.ImageData.prototype.clearLocalizedprivilege = function() {
  return this.setLocalizedprivilege(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.io.ImageData.prototype.hasLocalizedprivilege = function() {
  return jspb.Message.getField(this, 41) != null;
};


/**
 * optional LocalizedString localizedAirlineAlliance = 42;
 * @return {?proto.io.LocalizedString}
 */
proto.io.ImageData.prototype.getLocalizedairlinealliance = function() {
  return /** @type{?proto.io.LocalizedString} */ (
    jspb.Message.getWrapperField(this, io_common_localization_pb.LocalizedString, 42));
};


/**
 * @param {?proto.io.LocalizedString|undefined} value
 * @return {!proto.io.ImageData} returns this
*/
proto.io.ImageData.prototype.setLocalizedairlinealliance = function(value) {
  return jspb.Message.setWrapperField(this, 42, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.io.ImageData} returns this
 */
proto.io.ImageData.prototype.clearLocalizedairlinealliance = function() {
  return this.setLocalizedairlinealliance(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.io.ImageData.prototype.hasLocalizedairlinealliance = function() {
  return jspb.Message.getField(this, 42) != null;
};


/**
 * optional LocalizedString localizedPersonalization = 43;
 * @return {?proto.io.LocalizedString}
 */
proto.io.ImageData.prototype.getLocalizedpersonalization = function() {
  return /** @type{?proto.io.LocalizedString} */ (
    jspb.Message.getWrapperField(this, io_common_localization_pb.LocalizedString, 43));
};


/**
 * @param {?proto.io.LocalizedString|undefined} value
 * @return {!proto.io.ImageData} returns this
*/
proto.io.ImageData.prototype.setLocalizedpersonalization = function(value) {
  return jspb.Message.setWrapperField(this, 43, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.io.ImageData} returns this
 */
proto.io.ImageData.prototype.clearLocalizedpersonalization = function() {
  return this.setLocalizedpersonalization(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.io.ImageData.prototype.hasLocalizedpersonalization = function() {
  return jspb.Message.getField(this, 43) != null;
};


/**
 * optional LocalizedString localizedBanner = 44;
 * @return {?proto.io.LocalizedString}
 */
proto.io.ImageData.prototype.getLocalizedbanner = function() {
  return /** @type{?proto.io.LocalizedString} */ (
    jspb.Message.getWrapperField(this, io_common_localization_pb.LocalizedString, 44));
};


/**
 * @param {?proto.io.LocalizedString|undefined} value
 * @return {!proto.io.ImageData} returns this
*/
proto.io.ImageData.prototype.setLocalizedbanner = function(value) {
  return jspb.Message.setWrapperField(this, 44, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.io.ImageData} returns this
 */
proto.io.ImageData.prototype.clearLocalizedbanner = function() {
  return this.setLocalizedbanner(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.io.ImageData.prototype.hasLocalizedbanner = function() {
  return jspb.Message.getField(this, 44) != null;
};


/**
 * optional LocalizedString localizedMessage = 45;
 * @return {?proto.io.LocalizedString}
 */
proto.io.ImageData.prototype.getLocalizedmessage = function() {
  return /** @type{?proto.io.LocalizedString} */ (
    jspb.Message.getWrapperField(this, io_common_localization_pb.LocalizedString, 45));
};


/**
 * @param {?proto.io.LocalizedString|undefined} value
 * @return {!proto.io.ImageData} returns this
*/
proto.io.ImageData.prototype.setLocalizedmessage = function(value) {
  return jspb.Message.setWrapperField(this, 45, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.io.ImageData} returns this
 */
proto.io.ImageData.prototype.clearLocalizedmessage = function() {
  return this.setLocalizedmessage(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.io.ImageData.prototype.hasLocalizedmessage = function() {
  return jspb.Message.getField(this, 45) != null;
};


/**
 * optional LocalizedString localizedWideLogo = 46;
 * @return {?proto.io.LocalizedString}
 */
proto.io.ImageData.prototype.getLocalizedwidelogo = function() {
  return /** @type{?proto.io.LocalizedString} */ (
    jspb.Message.getWrapperField(this, io_common_localization_pb.LocalizedString, 46));
};


/**
 * @param {?proto.io.LocalizedString|undefined} value
 * @return {!proto.io.ImageData} returns this
*/
proto.io.ImageData.prototype.setLocalizedwidelogo = function(value) {
  return jspb.Message.setWrapperField(this, 46, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.io.ImageData} returns this
 */
proto.io.ImageData.prototype.clearLocalizedwidelogo = function() {
  return this.setLocalizedwidelogo(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.io.ImageData.prototype.hasLocalizedwidelogo = function() {
  return jspb.Message.getField(this, 46) != null;
};


/**
 * optional LocalizedString localizedSecondaryLogo = 47;
 * @return {?proto.io.LocalizedString}
 */
proto.io.ImageData.prototype.getLocalizedsecondarylogo = function() {
  return /** @type{?proto.io.LocalizedString} */ (
    jspb.Message.getWrapperField(this, io_common_localization_pb.LocalizedString, 47));
};


/**
 * @param {?proto.io.LocalizedString|undefined} value
 * @return {!proto.io.ImageData} returns this
*/
proto.io.ImageData.prototype.setLocalizedsecondarylogo = function(value) {
  return jspb.Message.setWrapperField(this, 47, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.io.ImageData} returns this
 */
proto.io.ImageData.prototype.clearLocalizedsecondarylogo = function() {
  return this.setLocalizedsecondarylogo(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.io.ImageData.prototype.hasLocalizedsecondarylogo = function() {
  return jspb.Message.getField(this, 47) != null;
};


/**
 * optional LocalizedString localizedArtwork = 48;
 * @return {?proto.io.LocalizedString}
 */
proto.io.ImageData.prototype.getLocalizedartwork = function() {
  return /** @type{?proto.io.LocalizedString} */ (
    jspb.Message.getWrapperField(this, io_common_localization_pb.LocalizedString, 48));
};


/**
 * @param {?proto.io.LocalizedString|undefined} value
 * @return {!proto.io.ImageData} returns this
*/
proto.io.ImageData.prototype.setLocalizedartwork = function(value) {
  return jspb.Message.setWrapperField(this, 48, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.io.ImageData} returns this
 */
proto.io.ImageData.prototype.clearLocalizedartwork = function() {
  return this.setLocalizedartwork(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.io.ImageData.prototype.hasLocalizedartwork = function() {
  return jspb.Message.getField(this, 48) != null;
};


/**
 * optional LocalizedString localizedPosterLogo = 49;
 * @return {?proto.io.LocalizedString}
 */
proto.io.ImageData.prototype.getLocalizedposterlogo = function() {
  return /** @type{?proto.io.LocalizedString} */ (
    jspb.Message.getWrapperField(this, io_common_localization_pb.LocalizedString, 49));
};


/**
 * @param {?proto.io.LocalizedString|undefined} value
 * @return {!proto.io.ImageData} returns this
*/
proto.io.ImageData.prototype.setLocalizedposterlogo = function(value) {
  return jspb.Message.setWrapperField(this, 49, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.io.ImageData} returns this
 */
proto.io.ImageData.prototype.clearLocalizedposterlogo = function() {
  return this.setLocalizedposterlogo(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.io.ImageData.prototype.hasLocalizedposterlogo = function() {
  return jspb.Message.getField(this, 49) != null;
};


/**
 * optional LocalizedString localizedVenueMap = 50;
 * @return {?proto.io.LocalizedString}
 */
proto.io.ImageData.prototype.getLocalizedvenuemap = function() {
  return /** @type{?proto.io.LocalizedString} */ (
    jspb.Message.getWrapperField(this, io_common_localization_pb.LocalizedString, 50));
};


/**
 * @param {?proto.io.LocalizedString|undefined} value
 * @return {!proto.io.ImageData} returns this
*/
proto.io.ImageData.prototype.setLocalizedvenuemap = function(value) {
  return jspb.Message.setWrapperField(this, 50, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.io.ImageData} returns this
 */
proto.io.ImageData.prototype.clearLocalizedvenuemap = function() {
  return this.setLocalizedvenuemap(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.io.ImageData.prototype.hasLocalizedvenuemap = function() {
  return jspb.Message.getField(this, 50) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.io.ImageRecord.repeatedFields_ = [6];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.io.ImageRecord.prototype.toObject = function(opt_includeInstance) {
  return proto.io.ImageRecord.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.io.ImageRecord} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.ImageRecord.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, ""),
    name: jspb.Message.getFieldWithDefault(msg, 2, ""),
    url: jspb.Message.getFieldWithDefault(msg, 3, ""),
    use: jspb.Message.getFieldWithDefault(msg, 5, 0),
    languagesList: (f = jspb.Message.getRepeatedField(msg, 6)) == null ? undefined : f,
    ownerusername: jspb.Message.getFieldWithDefault(msg, 7, ""),
    createdat: (f = msg.getCreatedat()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
    updatedat: (f = msg.getUpdatedat()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.io.ImageRecord}
 */
proto.io.ImageRecord.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.io.ImageRecord;
  return proto.io.ImageRecord.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.io.ImageRecord} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.io.ImageRecord}
 */
proto.io.ImageRecord.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setUrl(value);
      break;
    case 5:
      var value = /** @type {!proto.io.ImageUse} */ (reader.readEnum());
      msg.setUse(value);
      break;
    case 6:
      var values = /** @type {!Array<!proto.io.LanguageCode>} */ (reader.isDelimited() ? reader.readPackedEnum() : [reader.readEnum()]);
      for (var i = 0; i < values.length; i++) {
        msg.addLanguages(values[i]);
      }
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setOwnerusername(value);
      break;
    case 8:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setCreatedat(value);
      break;
    case 9:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setUpdatedat(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.io.ImageRecord.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.io.ImageRecord.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.io.ImageRecord} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.ImageRecord.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getUrl();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getUse();
  if (f !== 0.0) {
    writer.writeEnum(
      5,
      f
    );
  }
  f = message.getLanguagesList();
  if (f.length > 0) {
    writer.writePackedEnum(
      6,
      f
    );
  }
  f = message.getOwnerusername();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
  f = message.getCreatedat();
  if (f != null) {
    writer.writeMessage(
      8,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getUpdatedat();
  if (f != null) {
    writer.writeMessage(
      9,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.io.ImageRecord.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.ImageRecord} returns this
 */
proto.io.ImageRecord.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string name = 2;
 * @return {string}
 */
proto.io.ImageRecord.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.ImageRecord} returns this
 */
proto.io.ImageRecord.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string url = 3;
 * @return {string}
 */
proto.io.ImageRecord.prototype.getUrl = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.ImageRecord} returns this
 */
proto.io.ImageRecord.prototype.setUrl = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional ImageUse use = 5;
 * @return {!proto.io.ImageUse}
 */
proto.io.ImageRecord.prototype.getUse = function() {
  return /** @type {!proto.io.ImageUse} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {!proto.io.ImageUse} value
 * @return {!proto.io.ImageRecord} returns this
 */
proto.io.ImageRecord.prototype.setUse = function(value) {
  return jspb.Message.setProto3EnumField(this, 5, value);
};


/**
 * repeated LanguageCode languages = 6;
 * @return {!Array<!proto.io.LanguageCode>}
 */
proto.io.ImageRecord.prototype.getLanguagesList = function() {
  return /** @type {!Array<!proto.io.LanguageCode>} */ (jspb.Message.getRepeatedField(this, 6));
};


/**
 * @param {!Array<!proto.io.LanguageCode>} value
 * @return {!proto.io.ImageRecord} returns this
 */
proto.io.ImageRecord.prototype.setLanguagesList = function(value) {
  return jspb.Message.setField(this, 6, value || []);
};


/**
 * @param {!proto.io.LanguageCode} value
 * @param {number=} opt_index
 * @return {!proto.io.ImageRecord} returns this
 */
proto.io.ImageRecord.prototype.addLanguages = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 6, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.io.ImageRecord} returns this
 */
proto.io.ImageRecord.prototype.clearLanguagesList = function() {
  return this.setLanguagesList([]);
};


/**
 * optional string ownerUsername = 7;
 * @return {string}
 */
proto.io.ImageRecord.prototype.getOwnerusername = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.ImageRecord} returns this
 */
proto.io.ImageRecord.prototype.setOwnerusername = function(value) {
  return jspb.Message.setProto3StringField(this, 7, value);
};


/**
 * optional google.protobuf.Timestamp createdAt = 8;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.io.ImageRecord.prototype.getCreatedat = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 8));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.io.ImageRecord} returns this
*/
proto.io.ImageRecord.prototype.setCreatedat = function(value) {
  return jspb.Message.setWrapperField(this, 8, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.io.ImageRecord} returns this
 */
proto.io.ImageRecord.prototype.clearCreatedat = function() {
  return this.setCreatedat(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.io.ImageRecord.prototype.hasCreatedat = function() {
  return jspb.Message.getField(this, 8) != null;
};


/**
 * optional google.protobuf.Timestamp updatedAt = 9;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.io.ImageRecord.prototype.getUpdatedat = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 9));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.io.ImageRecord} returns this
*/
proto.io.ImageRecord.prototype.setUpdatedat = function(value) {
  return jspb.Message.setWrapperField(this, 9, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.io.ImageRecord} returns this
 */
proto.io.ImageRecord.prototype.clearUpdatedat = function() {
  return this.setUpdatedat(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.io.ImageRecord.prototype.hasUpdatedat = function() {
  return jspb.Message.getField(this, 9) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.io.ProfileImageInput.prototype.toObject = function(opt_includeInstance) {
  return proto.io.ProfileImageInput.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.io.ProfileImageInput} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.ProfileImageInput.toObject = function(includeInstance, msg) {
  var f, obj = {
    imagedata: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.io.ProfileImageInput}
 */
proto.io.ProfileImageInput.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.io.ProfileImageInput;
  return proto.io.ProfileImageInput.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.io.ProfileImageInput} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.io.ProfileImageInput}
 */
proto.io.ProfileImageInput.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setImagedata(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.io.ProfileImageInput.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.io.ProfileImageInput.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.io.ProfileImageInput} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.ProfileImageInput.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getImagedata();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string imageData = 1;
 * @return {string}
 */
proto.io.ProfileImageInput.prototype.getImagedata = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.ProfileImageInput} returns this
 */
proto.io.ProfileImageInput.prototype.setImagedata = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.io.MultipleImages.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.io.MultipleImages.prototype.toObject = function(opt_includeInstance) {
  return proto.io.MultipleImages.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.io.MultipleImages} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.MultipleImages.toObject = function(includeInstance, msg) {
  var f, obj = {
    imagesList: jspb.Message.toObjectList(msg.getImagesList(),
    proto.io.ImageRecord.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.io.MultipleImages}
 */
proto.io.MultipleImages.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.io.MultipleImages;
  return proto.io.MultipleImages.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.io.MultipleImages} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.io.MultipleImages}
 */
proto.io.MultipleImages.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.io.ImageRecord;
      reader.readMessage(value,proto.io.ImageRecord.deserializeBinaryFromReader);
      msg.addImages(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.io.MultipleImages.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.io.MultipleImages.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.io.MultipleImages} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.MultipleImages.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getImagesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.io.ImageRecord.serializeBinaryToWriter
    );
  }
};


/**
 * repeated ImageRecord images = 1;
 * @return {!Array<!proto.io.ImageRecord>}
 */
proto.io.MultipleImages.prototype.getImagesList = function() {
  return /** @type{!Array<!proto.io.ImageRecord>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.io.ImageRecord, 1));
};


/**
 * @param {!Array<!proto.io.ImageRecord>} value
 * @return {!proto.io.MultipleImages} returns this
*/
proto.io.MultipleImages.prototype.setImagesList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.io.ImageRecord=} opt_value
 * @param {number=} opt_index
 * @return {!proto.io.ImageRecord}
 */
proto.io.MultipleImages.prototype.addImages = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.io.ImageRecord, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.io.MultipleImages} returns this
 */
proto.io.MultipleImages.prototype.clearImagesList = function() {
  return this.setImagesList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.io.StampImageRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.io.StampImageRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.io.StampImageRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.StampImageRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, ""),
    status: jspb.Message.getFieldWithDefault(msg, 2, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.io.StampImageRequest}
 */
proto.io.StampImageRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.io.StampImageRequest;
  return proto.io.StampImageRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.io.StampImageRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.io.StampImageRequest}
 */
proto.io.StampImageRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setStatus(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.io.StampImageRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.io.StampImageRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.io.StampImageRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.StampImageRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getStatus();
  if (f !== 0) {
    writer.writeUint64(
      2,
      f
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.io.StampImageRequest.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.StampImageRequest} returns this
 */
proto.io.StampImageRequest.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional uint64 status = 2;
 * @return {number}
 */
proto.io.StampImageRequest.prototype.getStatus = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.io.StampImageRequest} returns this
 */
proto.io.StampImageRequest.prototype.setStatus = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.io.CreateImageInput.prototype.toObject = function(opt_includeInstance) {
  return proto.io.CreateImageInput.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.io.CreateImageInput} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.CreateImageInput.toObject = function(includeInstance, msg) {
  var f, obj = {
    name: jspb.Message.getFieldWithDefault(msg, 1, ""),
    imagedata: (f = msg.getImagedata()) && proto.io.ImageData.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.io.CreateImageInput}
 */
proto.io.CreateImageInput.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.io.CreateImageInput;
  return proto.io.CreateImageInput.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.io.CreateImageInput} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.io.CreateImageInput}
 */
proto.io.CreateImageInput.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 2:
      var value = new proto.io.ImageData;
      reader.readMessage(value,proto.io.ImageData.deserializeBinaryFromReader);
      msg.setImagedata(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.io.CreateImageInput.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.io.CreateImageInput.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.io.CreateImageInput} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.CreateImageInput.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getImagedata();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.io.ImageData.serializeBinaryToWriter
    );
  }
};


/**
 * optional string name = 1;
 * @return {string}
 */
proto.io.CreateImageInput.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.CreateImageInput} returns this
 */
proto.io.CreateImageInput.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional ImageData imageData = 2;
 * @return {?proto.io.ImageData}
 */
proto.io.CreateImageInput.prototype.getImagedata = function() {
  return /** @type{?proto.io.ImageData} */ (
    jspb.Message.getWrapperField(this, proto.io.ImageData, 2));
};


/**
 * @param {?proto.io.ImageData|undefined} value
 * @return {!proto.io.CreateImageInput} returns this
*/
proto.io.CreateImageInput.prototype.setImagedata = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.io.CreateImageInput} returns this
 */
proto.io.CreateImageInput.prototype.clearImagedata = function() {
  return this.setImagedata(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.io.CreateImageInput.prototype.hasImagedata = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.io.UpdateImageInput.prototype.toObject = function(opt_includeInstance) {
  return proto.io.UpdateImageInput.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.io.UpdateImageInput} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.UpdateImageInput.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, ""),
    name: jspb.Message.getFieldWithDefault(msg, 2, ""),
    imagedata: jspb.Message.getFieldWithDefault(msg, 3, ""),
    localizedimagedata: (f = msg.getLocalizedimagedata()) && io_common_localization_pb.LocalizedString.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.io.UpdateImageInput}
 */
proto.io.UpdateImageInput.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.io.UpdateImageInput;
  return proto.io.UpdateImageInput.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.io.UpdateImageInput} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.io.UpdateImageInput}
 */
proto.io.UpdateImageInput.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setImagedata(value);
      break;
    case 4:
      var value = new io_common_localization_pb.LocalizedString;
      reader.readMessage(value,io_common_localization_pb.LocalizedString.deserializeBinaryFromReader);
      msg.setLocalizedimagedata(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.io.UpdateImageInput.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.io.UpdateImageInput.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.io.UpdateImageInput} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.UpdateImageInput.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getImagedata();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getLocalizedimagedata();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      io_common_localization_pb.LocalizedString.serializeBinaryToWriter
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.io.UpdateImageInput.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.UpdateImageInput} returns this
 */
proto.io.UpdateImageInput.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string name = 2;
 * @return {string}
 */
proto.io.UpdateImageInput.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.UpdateImageInput} returns this
 */
proto.io.UpdateImageInput.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string imageData = 3;
 * @return {string}
 */
proto.io.UpdateImageInput.prototype.getImagedata = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.UpdateImageInput} returns this
 */
proto.io.UpdateImageInput.prototype.setImagedata = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional LocalizedString localizedImageData = 4;
 * @return {?proto.io.LocalizedString}
 */
proto.io.UpdateImageInput.prototype.getLocalizedimagedata = function() {
  return /** @type{?proto.io.LocalizedString} */ (
    jspb.Message.getWrapperField(this, io_common_localization_pb.LocalizedString, 4));
};


/**
 * @param {?proto.io.LocalizedString|undefined} value
 * @return {!proto.io.UpdateImageInput} returns this
*/
proto.io.UpdateImageInput.prototype.setLocalizedimagedata = function(value) {
  return jspb.Message.setWrapperField(this, 4, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.io.UpdateImageInput} returns this
 */
proto.io.UpdateImageInput.prototype.clearLocalizedimagedata = function() {
  return this.setLocalizedimagedata(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.io.UpdateImageInput.prototype.hasLocalizedimagedata = function() {
  return jspb.Message.getField(this, 4) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.io.ImageBundle.prototype.toObject = function(opt_includeInstance) {
  return proto.io.ImageBundle.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.io.ImageBundle} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.ImageBundle.toObject = function(includeInstance, msg) {
  var f, obj = {
    image: msg.getImage_asB64()
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.io.ImageBundle}
 */
proto.io.ImageBundle.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.io.ImageBundle;
  return proto.io.ImageBundle.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.io.ImageBundle} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.io.ImageBundle}
 */
proto.io.ImageBundle.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setImage(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.io.ImageBundle.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.io.ImageBundle.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.io.ImageBundle} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.ImageBundle.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getImage_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      1,
      f
    );
  }
};


/**
 * optional bytes image = 1;
 * @return {string}
 */
proto.io.ImageBundle.prototype.getImage = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * optional bytes image = 1;
 * This is a type-conversion wrapper around `getImage()`
 * @return {string}
 */
proto.io.ImageBundle.prototype.getImage_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getImage()));
};


/**
 * optional bytes image = 1;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getImage()`
 * @return {!Uint8Array}
 */
proto.io.ImageBundle.prototype.getImage_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getImage()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.io.ImageBundle} returns this
 */
proto.io.ImageBundle.prototype.setImage = function(value) {
  return jspb.Message.setProto3BytesField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.io.LocalizedImageInput.prototype.toObject = function(opt_includeInstance) {
  return proto.io.LocalizedImageInput.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.io.LocalizedImageInput} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.LocalizedImageInput.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, ""),
    languagecode: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.io.LocalizedImageInput}
 */
proto.io.LocalizedImageInput.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.io.LocalizedImageInput;
  return proto.io.LocalizedImageInput.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.io.LocalizedImageInput} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.io.LocalizedImageInput}
 */
proto.io.LocalizedImageInput.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setLanguagecode(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.io.LocalizedImageInput.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.io.LocalizedImageInput.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.io.LocalizedImageInput} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.LocalizedImageInput.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getLanguagecode();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.io.LocalizedImageInput.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.LocalizedImageInput} returns this
 */
proto.io.LocalizedImageInput.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string languageCode = 2;
 * @return {string}
 */
proto.io.LocalizedImageInput.prototype.getLanguagecode = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.LocalizedImageInput} returns this
 */
proto.io.LocalizedImageInput.prototype.setLanguagecode = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.io.StampImageConfig.prototype.toObject = function(opt_includeInstance) {
  return proto.io.StampImageConfig.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.io.StampImageConfig} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.StampImageConfig.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, ""),
    padding: jspb.Message.getFloatingPointFieldWithDefault(msg, 2, 0.0),
    totalstamps: jspb.Message.getFieldWithDefault(msg, 3, 0),
    stampimage: jspb.Message.getFieldWithDefault(msg, 4, ""),
    unstampimage: jspb.Message.getFieldWithDefault(msg, 5, ""),
    backgroundimage: jspb.Message.getFieldWithDefault(msg, 6, ""),
    backgroundcolor: jspb.Message.getFieldWithDefault(msg, 7, ""),
    backgroundopacity: jspb.Message.getFloatingPointFieldWithDefault(msg, 8, 0.0),
    stampcolor: jspb.Message.getFieldWithDefault(msg, 9, ""),
    stampopacity: jspb.Message.getFloatingPointFieldWithDefault(msg, 10, 0.0),
    unstampcolor: jspb.Message.getFieldWithDefault(msg, 11, ""),
    unstampopacity: jspb.Message.getFloatingPointFieldWithDefault(msg, 12, 0.0),
    placeholders: jspb.Message.getBooleanFieldWithDefault(msg, 13, false),
    placeholdercolor: jspb.Message.getFieldWithDefault(msg, 14, ""),
    placeholderopacity: jspb.Message.getFloatingPointFieldWithDefault(msg, 15, 0.0),
    placeholderbordercolor: jspb.Message.getFieldWithDefault(msg, 16, ""),
    placeholderborderopacity: jspb.Message.getFloatingPointFieldWithDefault(msg, 17, 0.0),
    rewardplaceholders: jspb.Message.getBooleanFieldWithDefault(msg, 18, false),
    rewardbordercolor: jspb.Message.getFieldWithDefault(msg, 19, ""),
    rewardborderopacity: jspb.Message.getFloatingPointFieldWithDefault(msg, 20, 0.0),
    rewardbackgroundcolor: jspb.Message.getFieldWithDefault(msg, 21, ""),
    rewardbackgroundopacity: jspb.Message.getFloatingPointFieldWithDefault(msg, 22, 0.0),
    rewardpositions: jspb.Message.getFieldWithDefault(msg, 23, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.io.StampImageConfig}
 */
proto.io.StampImageConfig.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.io.StampImageConfig;
  return proto.io.StampImageConfig.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.io.StampImageConfig} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.io.StampImageConfig}
 */
proto.io.StampImageConfig.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setPadding(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setTotalstamps(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setStampimage(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setUnstampimage(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setBackgroundimage(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setBackgroundcolor(value);
      break;
    case 8:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setBackgroundopacity(value);
      break;
    case 9:
      var value = /** @type {string} */ (reader.readString());
      msg.setStampcolor(value);
      break;
    case 10:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setStampopacity(value);
      break;
    case 11:
      var value = /** @type {string} */ (reader.readString());
      msg.setUnstampcolor(value);
      break;
    case 12:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setUnstampopacity(value);
      break;
    case 13:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setPlaceholders(value);
      break;
    case 14:
      var value = /** @type {string} */ (reader.readString());
      msg.setPlaceholdercolor(value);
      break;
    case 15:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setPlaceholderopacity(value);
      break;
    case 16:
      var value = /** @type {string} */ (reader.readString());
      msg.setPlaceholderbordercolor(value);
      break;
    case 17:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setPlaceholderborderopacity(value);
      break;
    case 18:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setRewardplaceholders(value);
      break;
    case 19:
      var value = /** @type {string} */ (reader.readString());
      msg.setRewardbordercolor(value);
      break;
    case 20:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setRewardborderopacity(value);
      break;
    case 21:
      var value = /** @type {string} */ (reader.readString());
      msg.setRewardbackgroundcolor(value);
      break;
    case 22:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setRewardbackgroundopacity(value);
      break;
    case 23:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setRewardpositions(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.io.StampImageConfig.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.io.StampImageConfig.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.io.StampImageConfig} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.StampImageConfig.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getPadding();
  if (f !== 0.0) {
    writer.writeFloat(
      2,
      f
    );
  }
  f = message.getTotalstamps();
  if (f !== 0) {
    writer.writeUint32(
      3,
      f
    );
  }
  f = message.getStampimage();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getUnstampimage();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getBackgroundimage();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getBackgroundcolor();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
  f = message.getBackgroundopacity();
  if (f !== 0.0) {
    writer.writeFloat(
      8,
      f
    );
  }
  f = message.getStampcolor();
  if (f.length > 0) {
    writer.writeString(
      9,
      f
    );
  }
  f = message.getStampopacity();
  if (f !== 0.0) {
    writer.writeFloat(
      10,
      f
    );
  }
  f = message.getUnstampcolor();
  if (f.length > 0) {
    writer.writeString(
      11,
      f
    );
  }
  f = message.getUnstampopacity();
  if (f !== 0.0) {
    writer.writeFloat(
      12,
      f
    );
  }
  f = message.getPlaceholders();
  if (f) {
    writer.writeBool(
      13,
      f
    );
  }
  f = message.getPlaceholdercolor();
  if (f.length > 0) {
    writer.writeString(
      14,
      f
    );
  }
  f = message.getPlaceholderopacity();
  if (f !== 0.0) {
    writer.writeFloat(
      15,
      f
    );
  }
  f = message.getPlaceholderbordercolor();
  if (f.length > 0) {
    writer.writeString(
      16,
      f
    );
  }
  f = message.getPlaceholderborderopacity();
  if (f !== 0.0) {
    writer.writeFloat(
      17,
      f
    );
  }
  f = message.getRewardplaceholders();
  if (f) {
    writer.writeBool(
      18,
      f
    );
  }
  f = message.getRewardbordercolor();
  if (f.length > 0) {
    writer.writeString(
      19,
      f
    );
  }
  f = message.getRewardborderopacity();
  if (f !== 0.0) {
    writer.writeFloat(
      20,
      f
    );
  }
  f = message.getRewardbackgroundcolor();
  if (f.length > 0) {
    writer.writeString(
      21,
      f
    );
  }
  f = message.getRewardbackgroundopacity();
  if (f !== 0.0) {
    writer.writeFloat(
      22,
      f
    );
  }
  f = message.getRewardpositions();
  if (f !== 0) {
    writer.writeUint64(
      23,
      f
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.io.StampImageConfig.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.StampImageConfig} returns this
 */
proto.io.StampImageConfig.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional float padding = 2;
 * @return {number}
 */
proto.io.StampImageConfig.prototype.getPadding = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 2, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.io.StampImageConfig} returns this
 */
proto.io.StampImageConfig.prototype.setPadding = function(value) {
  return jspb.Message.setProto3FloatField(this, 2, value);
};


/**
 * optional uint32 totalStamps = 3;
 * @return {number}
 */
proto.io.StampImageConfig.prototype.getTotalstamps = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.io.StampImageConfig} returns this
 */
proto.io.StampImageConfig.prototype.setTotalstamps = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional string stampImage = 4;
 * @return {string}
 */
proto.io.StampImageConfig.prototype.getStampimage = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.StampImageConfig} returns this
 */
proto.io.StampImageConfig.prototype.setStampimage = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string unstampImage = 5;
 * @return {string}
 */
proto.io.StampImageConfig.prototype.getUnstampimage = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.StampImageConfig} returns this
 */
proto.io.StampImageConfig.prototype.setUnstampimage = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional string backgroundImage = 6;
 * @return {string}
 */
proto.io.StampImageConfig.prototype.getBackgroundimage = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.StampImageConfig} returns this
 */
proto.io.StampImageConfig.prototype.setBackgroundimage = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional string backgroundColor = 7;
 * @return {string}
 */
proto.io.StampImageConfig.prototype.getBackgroundcolor = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.StampImageConfig} returns this
 */
proto.io.StampImageConfig.prototype.setBackgroundcolor = function(value) {
  return jspb.Message.setProto3StringField(this, 7, value);
};


/**
 * optional float backgroundOpacity = 8;
 * @return {number}
 */
proto.io.StampImageConfig.prototype.getBackgroundopacity = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 8, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.io.StampImageConfig} returns this
 */
proto.io.StampImageConfig.prototype.setBackgroundopacity = function(value) {
  return jspb.Message.setProto3FloatField(this, 8, value);
};


/**
 * optional string stampColor = 9;
 * @return {string}
 */
proto.io.StampImageConfig.prototype.getStampcolor = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 9, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.StampImageConfig} returns this
 */
proto.io.StampImageConfig.prototype.setStampcolor = function(value) {
  return jspb.Message.setProto3StringField(this, 9, value);
};


/**
 * optional float stampOpacity = 10;
 * @return {number}
 */
proto.io.StampImageConfig.prototype.getStampopacity = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 10, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.io.StampImageConfig} returns this
 */
proto.io.StampImageConfig.prototype.setStampopacity = function(value) {
  return jspb.Message.setProto3FloatField(this, 10, value);
};


/**
 * optional string unstampColor = 11;
 * @return {string}
 */
proto.io.StampImageConfig.prototype.getUnstampcolor = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 11, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.StampImageConfig} returns this
 */
proto.io.StampImageConfig.prototype.setUnstampcolor = function(value) {
  return jspb.Message.setProto3StringField(this, 11, value);
};


/**
 * optional float unstampOpacity = 12;
 * @return {number}
 */
proto.io.StampImageConfig.prototype.getUnstampopacity = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 12, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.io.StampImageConfig} returns this
 */
proto.io.StampImageConfig.prototype.setUnstampopacity = function(value) {
  return jspb.Message.setProto3FloatField(this, 12, value);
};


/**
 * optional bool placeholders = 13;
 * @return {boolean}
 */
proto.io.StampImageConfig.prototype.getPlaceholders = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 13, false));
};


/**
 * @param {boolean} value
 * @return {!proto.io.StampImageConfig} returns this
 */
proto.io.StampImageConfig.prototype.setPlaceholders = function(value) {
  return jspb.Message.setProto3BooleanField(this, 13, value);
};


/**
 * optional string placeholderColor = 14;
 * @return {string}
 */
proto.io.StampImageConfig.prototype.getPlaceholdercolor = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 14, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.StampImageConfig} returns this
 */
proto.io.StampImageConfig.prototype.setPlaceholdercolor = function(value) {
  return jspb.Message.setProto3StringField(this, 14, value);
};


/**
 * optional float placeholderOpacity = 15;
 * @return {number}
 */
proto.io.StampImageConfig.prototype.getPlaceholderopacity = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 15, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.io.StampImageConfig} returns this
 */
proto.io.StampImageConfig.prototype.setPlaceholderopacity = function(value) {
  return jspb.Message.setProto3FloatField(this, 15, value);
};


/**
 * optional string placeholderBorderColor = 16;
 * @return {string}
 */
proto.io.StampImageConfig.prototype.getPlaceholderbordercolor = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 16, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.StampImageConfig} returns this
 */
proto.io.StampImageConfig.prototype.setPlaceholderbordercolor = function(value) {
  return jspb.Message.setProto3StringField(this, 16, value);
};


/**
 * optional float placeholderBorderOpacity = 17;
 * @return {number}
 */
proto.io.StampImageConfig.prototype.getPlaceholderborderopacity = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 17, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.io.StampImageConfig} returns this
 */
proto.io.StampImageConfig.prototype.setPlaceholderborderopacity = function(value) {
  return jspb.Message.setProto3FloatField(this, 17, value);
};


/**
 * optional bool rewardPlaceholders = 18;
 * @return {boolean}
 */
proto.io.StampImageConfig.prototype.getRewardplaceholders = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 18, false));
};


/**
 * @param {boolean} value
 * @return {!proto.io.StampImageConfig} returns this
 */
proto.io.StampImageConfig.prototype.setRewardplaceholders = function(value) {
  return jspb.Message.setProto3BooleanField(this, 18, value);
};


/**
 * optional string rewardBorderColor = 19;
 * @return {string}
 */
proto.io.StampImageConfig.prototype.getRewardbordercolor = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 19, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.StampImageConfig} returns this
 */
proto.io.StampImageConfig.prototype.setRewardbordercolor = function(value) {
  return jspb.Message.setProto3StringField(this, 19, value);
};


/**
 * optional float rewardBorderOpacity = 20;
 * @return {number}
 */
proto.io.StampImageConfig.prototype.getRewardborderopacity = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 20, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.io.StampImageConfig} returns this
 */
proto.io.StampImageConfig.prototype.setRewardborderopacity = function(value) {
  return jspb.Message.setProto3FloatField(this, 20, value);
};


/**
 * optional string rewardBackgroundColor = 21;
 * @return {string}
 */
proto.io.StampImageConfig.prototype.getRewardbackgroundcolor = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 21, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.StampImageConfig} returns this
 */
proto.io.StampImageConfig.prototype.setRewardbackgroundcolor = function(value) {
  return jspb.Message.setProto3StringField(this, 21, value);
};


/**
 * optional float rewardBackgroundOpacity = 22;
 * @return {number}
 */
proto.io.StampImageConfig.prototype.getRewardbackgroundopacity = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 22, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.io.StampImageConfig} returns this
 */
proto.io.StampImageConfig.prototype.setRewardbackgroundopacity = function(value) {
  return jspb.Message.setProto3FloatField(this, 22, value);
};


/**
 * optional uint64 rewardPositions = 23;
 * @return {number}
 */
proto.io.StampImageConfig.prototype.getRewardpositions = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 23, 0));
};


/**
 * @param {number} value
 * @return {!proto.io.StampImageConfig} returns this
 */
proto.io.StampImageConfig.prototype.setRewardpositions = function(value) {
  return jspb.Message.setProto3IntField(this, 23, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.io.StampImagePreviewRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.io.StampImagePreviewRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.io.StampImagePreviewRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.StampImagePreviewRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    stampimageconfig: (f = msg.getStampimageconfig()) && proto.io.StampImageConfig.toObject(includeInstance, f),
    status: jspb.Message.getFieldWithDefault(msg, 2, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.io.StampImagePreviewRequest}
 */
proto.io.StampImagePreviewRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.io.StampImagePreviewRequest;
  return proto.io.StampImagePreviewRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.io.StampImagePreviewRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.io.StampImagePreviewRequest}
 */
proto.io.StampImagePreviewRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.io.StampImageConfig;
      reader.readMessage(value,proto.io.StampImageConfig.deserializeBinaryFromReader);
      msg.setStampimageconfig(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setStatus(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.io.StampImagePreviewRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.io.StampImagePreviewRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.io.StampImagePreviewRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.StampImagePreviewRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getStampimageconfig();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.io.StampImageConfig.serializeBinaryToWriter
    );
  }
  f = message.getStatus();
  if (f !== 0) {
    writer.writeUint64(
      2,
      f
    );
  }
};


/**
 * optional StampImageConfig stampImageConfig = 1;
 * @return {?proto.io.StampImageConfig}
 */
proto.io.StampImagePreviewRequest.prototype.getStampimageconfig = function() {
  return /** @type{?proto.io.StampImageConfig} */ (
    jspb.Message.getWrapperField(this, proto.io.StampImageConfig, 1));
};


/**
 * @param {?proto.io.StampImageConfig|undefined} value
 * @return {!proto.io.StampImagePreviewRequest} returns this
*/
proto.io.StampImagePreviewRequest.prototype.setStampimageconfig = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.io.StampImagePreviewRequest} returns this
 */
proto.io.StampImagePreviewRequest.prototype.clearStampimageconfig = function() {
  return this.setStampimageconfig(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.io.StampImagePreviewRequest.prototype.hasStampimageconfig = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional uint64 status = 2;
 * @return {number}
 */
proto.io.StampImagePreviewRequest.prototype.getStatus = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.io.StampImagePreviewRequest} returns this
 */
proto.io.StampImagePreviewRequest.prototype.setStatus = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.io.StampImagePreview.prototype.toObject = function(opt_includeInstance) {
  return proto.io.StampImagePreview.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.io.StampImagePreview} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.StampImagePreview.toObject = function(includeInstance, msg) {
  var f, obj = {
    preview: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.io.StampImagePreview}
 */
proto.io.StampImagePreview.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.io.StampImagePreview;
  return proto.io.StampImagePreview.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.io.StampImagePreview} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.io.StampImagePreview}
 */
proto.io.StampImagePreview.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setPreview(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.io.StampImagePreview.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.io.StampImagePreview.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.io.StampImagePreview} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.StampImagePreview.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPreview();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string preview = 1;
 * @return {string}
 */
proto.io.StampImagePreview.prototype.getPreview = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.StampImagePreview} returns this
 */
proto.io.StampImagePreview.prototype.setPreview = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * @enum {number}
 */
proto.io.ImageUse = {
  ICON: 0,
  LOGO: 1,
  APPLELOGO: 2,
  HERO: 3,
  EVENTSTRIP: 4,
  STRIP: 5,
  THUMBNAIL: 6,
  BACKGROUND: 7,
  FOOTER: 8,
  SECURITY: 9,
  PRIVILEGE: 10,
  AIRLINEALLIANCE: 11,
  PERSONALIZATION: 12,
  BANNER: 13,
  MESSAGE: 14,
  PROFILE: 15,
  APPIMAGE: 16,
  STAMPEDIMAGE: 18,
  UNSTAMPEDIMAGE: 19,
  STAMPIMAGE: 20,
  WIDELOGO: 21,
  SECONDARYLOGO: 22,
  ARTWORK: 23,
  POSTERLOGO: 24,
  VENUEMAP: 25
};

goog.object.extend(exports, proto.io);
