// source: io/user/user.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global = (function() {
  if (this) { return this; }
  if (typeof window !== 'undefined') { return window; }
  if (typeof global !== 'undefined') { return global; }
  if (typeof self !== 'undefined') { return self; }
  return Function('return this')();
}.call(null));

var google_protobuf_timestamp_pb = require('google-protobuf/google/protobuf/timestamp_pb.js');
goog.object.extend(proto, google_protobuf_timestamp_pb);
var io_common_personal_pb = require('../../io/common/personal_pb.js');
goog.object.extend(proto, io_common_personal_pb);
var io_common_attributes_pb = require('../../io/common/attributes_pb.js');
goog.object.extend(proto, io_common_attributes_pb);
goog.exportSymbol('proto.io.AuditLog', null, global);
goog.exportSymbol('proto.io.AuditLogRequest', null, global);
goog.exportSymbol('proto.io.BillingMeta', null, global);
goog.exportSymbol('proto.io.CertificatesList', null, global);
goog.exportSymbol('proto.io.CompanyName', null, global);
goog.exportSymbol('proto.io.ConfirmEmailChangeInput', null, global);
goog.exportSymbol('proto.io.Credentials', null, global);
goog.exportSymbol('proto.io.DefaultCouponScanAction', null, global);
goog.exportSymbol('proto.io.DefaultMembershipScanAction', null, global);
goog.exportSymbol('proto.io.DeleteAccountRequest', null, global);
goog.exportSymbol('proto.io.Email', null, global);
goog.exportSymbol('proto.io.GetTeamMemberResponse', null, global);
goog.exportSymbol('proto.io.GetUserResponse', null, global);
goog.exportSymbol('proto.io.JWT', null, global);
goog.exportSymbol('proto.io.ListTeamMembersResponse', null, global);
goog.exportSymbol('proto.io.NewTeamMember', null, global);
goog.exportSymbol('proto.io.NewUser', null, global);
goog.exportSymbol('proto.io.NewUserResponse', null, global);
goog.exportSymbol('proto.io.OAuth2AuthorizationRequest', null, global);
goog.exportSymbol('proto.io.OAuth2Provider', null, global);
goog.exportSymbol('proto.io.PasswordResetInput', null, global);
goog.exportSymbol('proto.io.PermissionScope', null, global);
goog.exportSymbol('proto.io.ProjectsList', null, global);
goog.exportSymbol('proto.io.ProtocolList', null, global);
goog.exportSymbol('proto.io.Recaptcha', null, global);
goog.exportSymbol('proto.io.ResourcePermissions', null, global);
goog.exportSymbol('proto.io.ResourcePermissions.CertificatepermissionsCase', null, global);
goog.exportSymbol('proto.io.ResourcePermissions.MembershipprogrampermissionsCase', null, global);
goog.exportSymbol('proto.io.ResourcePermissions.ProjectpermissionsCase', null, global);
goog.exportSymbol('proto.io.ScannerConfiguration', null, global);
goog.exportSymbol('proto.io.ScannerCouponPermissions', null, global);
goog.exportSymbol('proto.io.ScannerMembershipPermissions', null, global);
goog.exportSymbol('proto.io.TeamMemberPermissions', null, global);
goog.exportSymbol('proto.io.TeamMemberStatus', null, global);
goog.exportSymbol('proto.io.Username', null, global);
goog.exportSymbol('proto.io.VerifyRequest', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.io.AuditLog = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.io.AuditLog, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.io.AuditLog.displayName = 'proto.io.AuditLog';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.io.AuditLogRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.io.AuditLogRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.io.AuditLogRequest.displayName = 'proto.io.AuditLogRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.io.NewUserResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.io.NewUserResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.io.NewUserResponse.displayName = 'proto.io.NewUserResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.io.NewUser = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.io.NewUser, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.io.NewUser.displayName = 'proto.io.NewUser';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.io.GetUserResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.io.GetUserResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.io.GetUserResponse.displayName = 'proto.io.GetUserResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.io.BillingMeta = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.io.BillingMeta, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.io.BillingMeta.displayName = 'proto.io.BillingMeta';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.io.Credentials = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.io.Credentials, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.io.Credentials.displayName = 'proto.io.Credentials';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.io.VerifyRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.io.VerifyRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.io.VerifyRequest.displayName = 'proto.io.VerifyRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.io.JWT = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.io.JWT, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.io.JWT.displayName = 'proto.io.JWT';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.io.PasswordResetInput = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.io.PasswordResetInput, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.io.PasswordResetInput.displayName = 'proto.io.PasswordResetInput';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.io.Username = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.io.Username, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.io.Username.displayName = 'proto.io.Username';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.io.OAuth2AuthorizationRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.io.OAuth2AuthorizationRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.io.OAuth2AuthorizationRequest.displayName = 'proto.io.OAuth2AuthorizationRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.io.ScannerConfiguration = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.io.ScannerConfiguration.repeatedFields_, null);
};
goog.inherits(proto.io.ScannerConfiguration, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.io.ScannerConfiguration.displayName = 'proto.io.ScannerConfiguration';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.io.Email = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.io.Email, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.io.Email.displayName = 'proto.io.Email';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.io.ConfirmEmailChangeInput = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.io.ConfirmEmailChangeInput, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.io.ConfirmEmailChangeInput.displayName = 'proto.io.ConfirmEmailChangeInput';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.io.CompanyName = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.io.CompanyName, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.io.CompanyName.displayName = 'proto.io.CompanyName';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.io.DeleteAccountRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.io.DeleteAccountRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.io.DeleteAccountRequest.displayName = 'proto.io.DeleteAccountRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.io.ProjectsList = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.io.ProjectsList.repeatedFields_, null);
};
goog.inherits(proto.io.ProjectsList, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.io.ProjectsList.displayName = 'proto.io.ProjectsList';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.io.CertificatesList = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.io.CertificatesList.repeatedFields_, null);
};
goog.inherits(proto.io.CertificatesList, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.io.CertificatesList.displayName = 'proto.io.CertificatesList';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.io.ProtocolList = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.io.ProtocolList.repeatedFields_, null);
};
goog.inherits(proto.io.ProtocolList, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.io.ProtocolList.displayName = 'proto.io.ProtocolList';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.io.ResourcePermissions = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.io.ResourcePermissions.oneofGroups_);
};
goog.inherits(proto.io.ResourcePermissions, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.io.ResourcePermissions.displayName = 'proto.io.ResourcePermissions';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.io.TeamMemberPermissions = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.io.TeamMemberPermissions, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.io.TeamMemberPermissions.displayName = 'proto.io.TeamMemberPermissions';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.io.NewTeamMember = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.io.NewTeamMember, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.io.NewTeamMember.displayName = 'proto.io.NewTeamMember';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.io.GetTeamMemberResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.io.GetTeamMemberResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.io.GetTeamMemberResponse.displayName = 'proto.io.GetTeamMemberResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.io.ListTeamMembersResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.io.ListTeamMembersResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.io.ListTeamMembersResponse.displayName = 'proto.io.ListTeamMembersResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.io.Recaptcha = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.io.Recaptcha, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.io.Recaptcha.displayName = 'proto.io.Recaptcha';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.io.AuditLog.prototype.toObject = function(opt_includeInstance) {
  return proto.io.AuditLog.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.io.AuditLog} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.AuditLog.toObject = function(includeInstance, msg) {
  var f, obj = {
    timestamp: (f = msg.getTimestamp()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
    companyid: jspb.Message.getFieldWithDefault(msg, 2, ""),
    username: jspb.Message.getFieldWithDefault(msg, 3, ""),
    usertype: jspb.Message.getFieldWithDefault(msg, 4, 0),
    authentication: jspb.Message.getFieldWithDefault(msg, 5, 0),
    channel: jspb.Message.getFieldWithDefault(msg, 6, 0),
    ipaddress: jspb.Message.getFieldWithDefault(msg, 7, ""),
    endpoint: jspb.Message.getFieldWithDefault(msg, 8, ""),
    payload: jspb.Message.getFieldWithDefault(msg, 9, ""),
    statuscode: jspb.Message.getFieldWithDefault(msg, 10, 0),
    status: jspb.Message.getFieldWithDefault(msg, 11, ""),
    response: jspb.Message.getFieldWithDefault(msg, 12, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.io.AuditLog}
 */
proto.io.AuditLog.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.io.AuditLog;
  return proto.io.AuditLog.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.io.AuditLog} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.io.AuditLog}
 */
proto.io.AuditLog.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setTimestamp(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setCompanyid(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setUsername(value);
      break;
    case 4:
      var value = /** @type {!proto.io.UserType} */ (reader.readEnum());
      msg.setUsertype(value);
      break;
    case 5:
      var value = /** @type {!proto.io.Authentication} */ (reader.readEnum());
      msg.setAuthentication(value);
      break;
    case 6:
      var value = /** @type {!proto.io.Channel} */ (reader.readEnum());
      msg.setChannel(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setIpaddress(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.setEndpoint(value);
      break;
    case 9:
      var value = /** @type {string} */ (reader.readString());
      msg.setPayload(value);
      break;
    case 10:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setStatuscode(value);
      break;
    case 11:
      var value = /** @type {string} */ (reader.readString());
      msg.setStatus(value);
      break;
    case 12:
      var value = /** @type {string} */ (reader.readString());
      msg.setResponse(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.io.AuditLog.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.io.AuditLog.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.io.AuditLog} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.AuditLog.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTimestamp();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getCompanyid();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getUsername();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getUsertype();
  if (f !== 0.0) {
    writer.writeEnum(
      4,
      f
    );
  }
  f = message.getAuthentication();
  if (f !== 0.0) {
    writer.writeEnum(
      5,
      f
    );
  }
  f = message.getChannel();
  if (f !== 0.0) {
    writer.writeEnum(
      6,
      f
    );
  }
  f = message.getIpaddress();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
  f = message.getEndpoint();
  if (f.length > 0) {
    writer.writeString(
      8,
      f
    );
  }
  f = message.getPayload();
  if (f.length > 0) {
    writer.writeString(
      9,
      f
    );
  }
  f = message.getStatuscode();
  if (f !== 0) {
    writer.writeUint32(
      10,
      f
    );
  }
  f = message.getStatus();
  if (f.length > 0) {
    writer.writeString(
      11,
      f
    );
  }
  f = message.getResponse();
  if (f.length > 0) {
    writer.writeString(
      12,
      f
    );
  }
};


/**
 * optional google.protobuf.Timestamp timestamp = 1;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.io.AuditLog.prototype.getTimestamp = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 1));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.io.AuditLog} returns this
*/
proto.io.AuditLog.prototype.setTimestamp = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.io.AuditLog} returns this
 */
proto.io.AuditLog.prototype.clearTimestamp = function() {
  return this.setTimestamp(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.io.AuditLog.prototype.hasTimestamp = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string companyId = 2;
 * @return {string}
 */
proto.io.AuditLog.prototype.getCompanyid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.AuditLog} returns this
 */
proto.io.AuditLog.prototype.setCompanyid = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string username = 3;
 * @return {string}
 */
proto.io.AuditLog.prototype.getUsername = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.AuditLog} returns this
 */
proto.io.AuditLog.prototype.setUsername = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional UserType userType = 4;
 * @return {!proto.io.UserType}
 */
proto.io.AuditLog.prototype.getUsertype = function() {
  return /** @type {!proto.io.UserType} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {!proto.io.UserType} value
 * @return {!proto.io.AuditLog} returns this
 */
proto.io.AuditLog.prototype.setUsertype = function(value) {
  return jspb.Message.setProto3EnumField(this, 4, value);
};


/**
 * optional Authentication authentication = 5;
 * @return {!proto.io.Authentication}
 */
proto.io.AuditLog.prototype.getAuthentication = function() {
  return /** @type {!proto.io.Authentication} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {!proto.io.Authentication} value
 * @return {!proto.io.AuditLog} returns this
 */
proto.io.AuditLog.prototype.setAuthentication = function(value) {
  return jspb.Message.setProto3EnumField(this, 5, value);
};


/**
 * optional Channel channel = 6;
 * @return {!proto.io.Channel}
 */
proto.io.AuditLog.prototype.getChannel = function() {
  return /** @type {!proto.io.Channel} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/**
 * @param {!proto.io.Channel} value
 * @return {!proto.io.AuditLog} returns this
 */
proto.io.AuditLog.prototype.setChannel = function(value) {
  return jspb.Message.setProto3EnumField(this, 6, value);
};


/**
 * optional string ipAddress = 7;
 * @return {string}
 */
proto.io.AuditLog.prototype.getIpaddress = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.AuditLog} returns this
 */
proto.io.AuditLog.prototype.setIpaddress = function(value) {
  return jspb.Message.setProto3StringField(this, 7, value);
};


/**
 * optional string endpoint = 8;
 * @return {string}
 */
proto.io.AuditLog.prototype.getEndpoint = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.AuditLog} returns this
 */
proto.io.AuditLog.prototype.setEndpoint = function(value) {
  return jspb.Message.setProto3StringField(this, 8, value);
};


/**
 * optional string payload = 9;
 * @return {string}
 */
proto.io.AuditLog.prototype.getPayload = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 9, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.AuditLog} returns this
 */
proto.io.AuditLog.prototype.setPayload = function(value) {
  return jspb.Message.setProto3StringField(this, 9, value);
};


/**
 * optional uint32 statusCode = 10;
 * @return {number}
 */
proto.io.AuditLog.prototype.getStatuscode = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 10, 0));
};


/**
 * @param {number} value
 * @return {!proto.io.AuditLog} returns this
 */
proto.io.AuditLog.prototype.setStatuscode = function(value) {
  return jspb.Message.setProto3IntField(this, 10, value);
};


/**
 * optional string status = 11;
 * @return {string}
 */
proto.io.AuditLog.prototype.getStatus = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 11, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.AuditLog} returns this
 */
proto.io.AuditLog.prototype.setStatus = function(value) {
  return jspb.Message.setProto3StringField(this, 11, value);
};


/**
 * optional string response = 12;
 * @return {string}
 */
proto.io.AuditLog.prototype.getResponse = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 12, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.AuditLog} returns this
 */
proto.io.AuditLog.prototype.setResponse = function(value) {
  return jspb.Message.setProto3StringField(this, 12, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.io.AuditLogRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.io.AuditLogRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.io.AuditLogRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.AuditLogRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    username: jspb.Message.getFieldWithDefault(msg, 1, ""),
    beforetime: (f = msg.getBeforetime()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
    limit: jspb.Message.getFieldWithDefault(msg, 3, 0),
    errorsonly: jspb.Message.getBooleanFieldWithDefault(msg, 4, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.io.AuditLogRequest}
 */
proto.io.AuditLogRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.io.AuditLogRequest;
  return proto.io.AuditLogRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.io.AuditLogRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.io.AuditLogRequest}
 */
proto.io.AuditLogRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setUsername(value);
      break;
    case 2:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setBeforetime(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setLimit(value);
      break;
    case 4:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setErrorsonly(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.io.AuditLogRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.io.AuditLogRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.io.AuditLogRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.AuditLogRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getUsername();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getBeforetime();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getLimit();
  if (f !== 0) {
    writer.writeUint32(
      3,
      f
    );
  }
  f = message.getErrorsonly();
  if (f) {
    writer.writeBool(
      4,
      f
    );
  }
};


/**
 * optional string username = 1;
 * @return {string}
 */
proto.io.AuditLogRequest.prototype.getUsername = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.AuditLogRequest} returns this
 */
proto.io.AuditLogRequest.prototype.setUsername = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional google.protobuf.Timestamp beforeTime = 2;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.io.AuditLogRequest.prototype.getBeforetime = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 2));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.io.AuditLogRequest} returns this
*/
proto.io.AuditLogRequest.prototype.setBeforetime = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.io.AuditLogRequest} returns this
 */
proto.io.AuditLogRequest.prototype.clearBeforetime = function() {
  return this.setBeforetime(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.io.AuditLogRequest.prototype.hasBeforetime = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional uint32 limit = 3;
 * @return {number}
 */
proto.io.AuditLogRequest.prototype.getLimit = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.io.AuditLogRequest} returns this
 */
proto.io.AuditLogRequest.prototype.setLimit = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional bool errorsOnly = 4;
 * @return {boolean}
 */
proto.io.AuditLogRequest.prototype.getErrorsonly = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 4, false));
};


/**
 * @param {boolean} value
 * @return {!proto.io.AuditLogRequest} returns this
 */
proto.io.AuditLogRequest.prototype.setErrorsonly = function(value) {
  return jspb.Message.setProto3BooleanField(this, 4, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.io.NewUserResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.io.NewUserResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.io.NewUserResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.NewUserResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    userid: jspb.Message.getFieldWithDefault(msg, 1, ""),
    companyid: jspb.Message.getFieldWithDefault(msg, 2, ""),
    username: jspb.Message.getFieldWithDefault(msg, 3, ""),
    emailaddress: jspb.Message.getFieldWithDefault(msg, 4, ""),
    secret: jspb.Message.getFieldWithDefault(msg, 5, ""),
    certificate: jspb.Message.getFieldWithDefault(msg, 6, ""),
    privatekey: jspb.Message.getFieldWithDefault(msg, 7, ""),
    javaprivatekey: jspb.Message.getFieldWithDefault(msg, 8, ""),
    expiresat: (f = msg.getExpiresat()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
    regionid: jspb.Message.getFieldWithDefault(msg, 10, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.io.NewUserResponse}
 */
proto.io.NewUserResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.io.NewUserResponse;
  return proto.io.NewUserResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.io.NewUserResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.io.NewUserResponse}
 */
proto.io.NewUserResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setUserid(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setCompanyid(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setUsername(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setEmailaddress(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setSecret(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setCertificate(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setPrivatekey(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.setJavaprivatekey(value);
      break;
    case 9:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setExpiresat(value);
      break;
    case 10:
      var value = /** @type {string} */ (reader.readString());
      msg.setRegionid(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.io.NewUserResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.io.NewUserResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.io.NewUserResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.NewUserResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getUserid();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getCompanyid();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getUsername();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getEmailaddress();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getSecret();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getCertificate();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getPrivatekey();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
  f = message.getJavaprivatekey();
  if (f.length > 0) {
    writer.writeString(
      8,
      f
    );
  }
  f = message.getExpiresat();
  if (f != null) {
    writer.writeMessage(
      9,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getRegionid();
  if (f.length > 0) {
    writer.writeString(
      10,
      f
    );
  }
};


/**
 * optional string userId = 1;
 * @return {string}
 */
proto.io.NewUserResponse.prototype.getUserid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.NewUserResponse} returns this
 */
proto.io.NewUserResponse.prototype.setUserid = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string companyId = 2;
 * @return {string}
 */
proto.io.NewUserResponse.prototype.getCompanyid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.NewUserResponse} returns this
 */
proto.io.NewUserResponse.prototype.setCompanyid = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string username = 3;
 * @return {string}
 */
proto.io.NewUserResponse.prototype.getUsername = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.NewUserResponse} returns this
 */
proto.io.NewUserResponse.prototype.setUsername = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string emailAddress = 4;
 * @return {string}
 */
proto.io.NewUserResponse.prototype.getEmailaddress = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.NewUserResponse} returns this
 */
proto.io.NewUserResponse.prototype.setEmailaddress = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string secret = 5;
 * @return {string}
 */
proto.io.NewUserResponse.prototype.getSecret = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.NewUserResponse} returns this
 */
proto.io.NewUserResponse.prototype.setSecret = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional string certificate = 6;
 * @return {string}
 */
proto.io.NewUserResponse.prototype.getCertificate = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.NewUserResponse} returns this
 */
proto.io.NewUserResponse.prototype.setCertificate = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional string privateKey = 7;
 * @return {string}
 */
proto.io.NewUserResponse.prototype.getPrivatekey = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.NewUserResponse} returns this
 */
proto.io.NewUserResponse.prototype.setPrivatekey = function(value) {
  return jspb.Message.setProto3StringField(this, 7, value);
};


/**
 * optional string javaPrivateKey = 8;
 * @return {string}
 */
proto.io.NewUserResponse.prototype.getJavaprivatekey = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.NewUserResponse} returns this
 */
proto.io.NewUserResponse.prototype.setJavaprivatekey = function(value) {
  return jspb.Message.setProto3StringField(this, 8, value);
};


/**
 * optional google.protobuf.Timestamp expiresAt = 9;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.io.NewUserResponse.prototype.getExpiresat = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 9));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.io.NewUserResponse} returns this
*/
proto.io.NewUserResponse.prototype.setExpiresat = function(value) {
  return jspb.Message.setWrapperField(this, 9, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.io.NewUserResponse} returns this
 */
proto.io.NewUserResponse.prototype.clearExpiresat = function() {
  return this.setExpiresat(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.io.NewUserResponse.prototype.hasExpiresat = function() {
  return jspb.Message.getField(this, 9) != null;
};


/**
 * optional string regionId = 10;
 * @return {string}
 */
proto.io.NewUserResponse.prototype.getRegionid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 10, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.NewUserResponse} returns this
 */
proto.io.NewUserResponse.prototype.setRegionid = function(value) {
  return jspb.Message.setProto3StringField(this, 10, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.io.NewUser.prototype.toObject = function(opt_includeInstance) {
  return proto.io.NewUser.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.io.NewUser} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.NewUser.toObject = function(includeInstance, msg) {
  var f, obj = {
    username: jspb.Message.getFieldWithDefault(msg, 1, ""),
    password: jspb.Message.getFieldWithDefault(msg, 2, ""),
    emailaddress: jspb.Message.getFieldWithDefault(msg, 3, ""),
    sendemail: jspb.Message.getBooleanFieldWithDefault(msg, 4, false),
    companyname: jspb.Message.getFieldWithDefault(msg, 5, ""),
    mobilenumber: jspb.Message.getFieldWithDefault(msg, 6, ""),
    twofactorauth: jspb.Message.getBooleanFieldWithDefault(msg, 7, false),
    isowner: jspb.Message.getBooleanFieldWithDefault(msg, 8, false),
    readonly: jspb.Message.getBooleanFieldWithDefault(msg, 9, false),
    teammember: jspb.Message.getBooleanFieldWithDefault(msg, 10, false),
    token: jspb.Message.getFieldWithDefault(msg, 11, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.io.NewUser}
 */
proto.io.NewUser.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.io.NewUser;
  return proto.io.NewUser.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.io.NewUser} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.io.NewUser}
 */
proto.io.NewUser.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setUsername(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setPassword(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setEmailaddress(value);
      break;
    case 4:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setSendemail(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setCompanyname(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setMobilenumber(value);
      break;
    case 7:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setTwofactorauth(value);
      break;
    case 8:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsowner(value);
      break;
    case 9:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setReadonly(value);
      break;
    case 10:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setTeammember(value);
      break;
    case 11:
      var value = /** @type {string} */ (reader.readString());
      msg.setToken(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.io.NewUser.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.io.NewUser.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.io.NewUser} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.NewUser.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getUsername();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getPassword();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getEmailaddress();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getSendemail();
  if (f) {
    writer.writeBool(
      4,
      f
    );
  }
  f = message.getCompanyname();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getMobilenumber();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getTwofactorauth();
  if (f) {
    writer.writeBool(
      7,
      f
    );
  }
  f = message.getIsowner();
  if (f) {
    writer.writeBool(
      8,
      f
    );
  }
  f = message.getReadonly();
  if (f) {
    writer.writeBool(
      9,
      f
    );
  }
  f = message.getTeammember();
  if (f) {
    writer.writeBool(
      10,
      f
    );
  }
  f = message.getToken();
  if (f.length > 0) {
    writer.writeString(
      11,
      f
    );
  }
};


/**
 * optional string username = 1;
 * @return {string}
 */
proto.io.NewUser.prototype.getUsername = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.NewUser} returns this
 */
proto.io.NewUser.prototype.setUsername = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string password = 2;
 * @return {string}
 */
proto.io.NewUser.prototype.getPassword = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.NewUser} returns this
 */
proto.io.NewUser.prototype.setPassword = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string emailAddress = 3;
 * @return {string}
 */
proto.io.NewUser.prototype.getEmailaddress = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.NewUser} returns this
 */
proto.io.NewUser.prototype.setEmailaddress = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional bool sendEmail = 4;
 * @return {boolean}
 */
proto.io.NewUser.prototype.getSendemail = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 4, false));
};


/**
 * @param {boolean} value
 * @return {!proto.io.NewUser} returns this
 */
proto.io.NewUser.prototype.setSendemail = function(value) {
  return jspb.Message.setProto3BooleanField(this, 4, value);
};


/**
 * optional string companyName = 5;
 * @return {string}
 */
proto.io.NewUser.prototype.getCompanyname = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.NewUser} returns this
 */
proto.io.NewUser.prototype.setCompanyname = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional string mobileNumber = 6;
 * @return {string}
 */
proto.io.NewUser.prototype.getMobilenumber = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.NewUser} returns this
 */
proto.io.NewUser.prototype.setMobilenumber = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional bool twoFactorAuth = 7;
 * @return {boolean}
 */
proto.io.NewUser.prototype.getTwofactorauth = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 7, false));
};


/**
 * @param {boolean} value
 * @return {!proto.io.NewUser} returns this
 */
proto.io.NewUser.prototype.setTwofactorauth = function(value) {
  return jspb.Message.setProto3BooleanField(this, 7, value);
};


/**
 * optional bool isOwner = 8;
 * @return {boolean}
 */
proto.io.NewUser.prototype.getIsowner = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 8, false));
};


/**
 * @param {boolean} value
 * @return {!proto.io.NewUser} returns this
 */
proto.io.NewUser.prototype.setIsowner = function(value) {
  return jspb.Message.setProto3BooleanField(this, 8, value);
};


/**
 * optional bool readOnly = 9;
 * @return {boolean}
 */
proto.io.NewUser.prototype.getReadonly = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 9, false));
};


/**
 * @param {boolean} value
 * @return {!proto.io.NewUser} returns this
 */
proto.io.NewUser.prototype.setReadonly = function(value) {
  return jspb.Message.setProto3BooleanField(this, 9, value);
};


/**
 * optional bool teamMember = 10;
 * @return {boolean}
 */
proto.io.NewUser.prototype.getTeammember = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 10, false));
};


/**
 * @param {boolean} value
 * @return {!proto.io.NewUser} returns this
 */
proto.io.NewUser.prototype.setTeammember = function(value) {
  return jspb.Message.setProto3BooleanField(this, 10, value);
};


/**
 * optional string token = 11;
 * @return {string}
 */
proto.io.NewUser.prototype.getToken = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 11, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.NewUser} returns this
 */
proto.io.NewUser.prototype.setToken = function(value) {
  return jspb.Message.setProto3StringField(this, 11, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.io.GetUserResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.io.GetUserResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.io.GetUserResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.GetUserResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    email: jspb.Message.getFieldWithDefault(msg, 1, ""),
    username: jspb.Message.getFieldWithDefault(msg, 2, ""),
    companyid: jspb.Message.getFieldWithDefault(msg, 3, ""),
    companyname: jspb.Message.getFieldWithDefault(msg, 4, ""),
    companystatus: jspb.Message.getFieldWithDefault(msg, 5, 0),
    createdat: (f = msg.getCreatedat()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
    expiresat: (f = msg.getExpiresat()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
    regionid: jspb.Message.getFieldWithDefault(msg, 8, ""),
    userstatus: jspb.Message.getFieldWithDefault(msg, 9, 0),
    userpermissions: jspb.Message.getFieldWithDefault(msg, 10, 0),
    userid: jspb.Message.getFieldWithDefault(msg, 11, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.io.GetUserResponse}
 */
proto.io.GetUserResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.io.GetUserResponse;
  return proto.io.GetUserResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.io.GetUserResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.io.GetUserResponse}
 */
proto.io.GetUserResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setEmail(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setUsername(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setCompanyid(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setCompanyname(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setCompanystatus(value);
      break;
    case 6:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setCreatedat(value);
      break;
    case 7:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setExpiresat(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.setRegionid(value);
      break;
    case 9:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setUserstatus(value);
      break;
    case 10:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setUserpermissions(value);
      break;
    case 11:
      var value = /** @type {string} */ (reader.readString());
      msg.setUserid(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.io.GetUserResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.io.GetUserResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.io.GetUserResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.GetUserResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getEmail();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getUsername();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getCompanyid();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getCompanyname();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getCompanystatus();
  if (f !== 0) {
    writer.writeUint64(
      5,
      f
    );
  }
  f = message.getCreatedat();
  if (f != null) {
    writer.writeMessage(
      6,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getExpiresat();
  if (f != null) {
    writer.writeMessage(
      7,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getRegionid();
  if (f.length > 0) {
    writer.writeString(
      8,
      f
    );
  }
  f = message.getUserstatus();
  if (f !== 0) {
    writer.writeUint64(
      9,
      f
    );
  }
  f = message.getUserpermissions();
  if (f !== 0) {
    writer.writeUint64(
      10,
      f
    );
  }
  f = message.getUserid();
  if (f.length > 0) {
    writer.writeString(
      11,
      f
    );
  }
};


/**
 * optional string email = 1;
 * @return {string}
 */
proto.io.GetUserResponse.prototype.getEmail = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.GetUserResponse} returns this
 */
proto.io.GetUserResponse.prototype.setEmail = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string username = 2;
 * @return {string}
 */
proto.io.GetUserResponse.prototype.getUsername = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.GetUserResponse} returns this
 */
proto.io.GetUserResponse.prototype.setUsername = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string companyId = 3;
 * @return {string}
 */
proto.io.GetUserResponse.prototype.getCompanyid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.GetUserResponse} returns this
 */
proto.io.GetUserResponse.prototype.setCompanyid = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string companyName = 4;
 * @return {string}
 */
proto.io.GetUserResponse.prototype.getCompanyname = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.GetUserResponse} returns this
 */
proto.io.GetUserResponse.prototype.setCompanyname = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional uint64 companyStatus = 5;
 * @return {number}
 */
proto.io.GetUserResponse.prototype.getCompanystatus = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {number} value
 * @return {!proto.io.GetUserResponse} returns this
 */
proto.io.GetUserResponse.prototype.setCompanystatus = function(value) {
  return jspb.Message.setProto3IntField(this, 5, value);
};


/**
 * optional google.protobuf.Timestamp createdAt = 6;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.io.GetUserResponse.prototype.getCreatedat = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 6));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.io.GetUserResponse} returns this
*/
proto.io.GetUserResponse.prototype.setCreatedat = function(value) {
  return jspb.Message.setWrapperField(this, 6, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.io.GetUserResponse} returns this
 */
proto.io.GetUserResponse.prototype.clearCreatedat = function() {
  return this.setCreatedat(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.io.GetUserResponse.prototype.hasCreatedat = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional google.protobuf.Timestamp expiresAt = 7;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.io.GetUserResponse.prototype.getExpiresat = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 7));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.io.GetUserResponse} returns this
*/
proto.io.GetUserResponse.prototype.setExpiresat = function(value) {
  return jspb.Message.setWrapperField(this, 7, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.io.GetUserResponse} returns this
 */
proto.io.GetUserResponse.prototype.clearExpiresat = function() {
  return this.setExpiresat(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.io.GetUserResponse.prototype.hasExpiresat = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * optional string regionId = 8;
 * @return {string}
 */
proto.io.GetUserResponse.prototype.getRegionid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.GetUserResponse} returns this
 */
proto.io.GetUserResponse.prototype.setRegionid = function(value) {
  return jspb.Message.setProto3StringField(this, 8, value);
};


/**
 * optional uint64 userStatus = 9;
 * @return {number}
 */
proto.io.GetUserResponse.prototype.getUserstatus = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 9, 0));
};


/**
 * @param {number} value
 * @return {!proto.io.GetUserResponse} returns this
 */
proto.io.GetUserResponse.prototype.setUserstatus = function(value) {
  return jspb.Message.setProto3IntField(this, 9, value);
};


/**
 * optional uint64 userPermissions = 10;
 * @return {number}
 */
proto.io.GetUserResponse.prototype.getUserpermissions = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 10, 0));
};


/**
 * @param {number} value
 * @return {!proto.io.GetUserResponse} returns this
 */
proto.io.GetUserResponse.prototype.setUserpermissions = function(value) {
  return jspb.Message.setProto3IntField(this, 10, value);
};


/**
 * optional string userId = 11;
 * @return {string}
 */
proto.io.GetUserResponse.prototype.getUserid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 11, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.GetUserResponse} returns this
 */
proto.io.GetUserResponse.prototype.setUserid = function(value) {
  return jspb.Message.setProto3StringField(this, 11, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.io.BillingMeta.prototype.toObject = function(opt_includeInstance) {
  return proto.io.BillingMeta.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.io.BillingMeta} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.BillingMeta.toObject = function(includeInstance, msg) {
  var f, obj = {
    companyname: jspb.Message.getFieldWithDefault(msg, 1, ""),
    taxid: jspb.Message.getFieldWithDefault(msg, 2, ""),
    reference: jspb.Message.getFieldWithDefault(msg, 3, ""),
    billingaddress: (f = msg.getBillingaddress()) && io_common_personal_pb.Address.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.io.BillingMeta}
 */
proto.io.BillingMeta.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.io.BillingMeta;
  return proto.io.BillingMeta.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.io.BillingMeta} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.io.BillingMeta}
 */
proto.io.BillingMeta.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setCompanyname(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setTaxid(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setReference(value);
      break;
    case 4:
      var value = new io_common_personal_pb.Address;
      reader.readMessage(value,io_common_personal_pb.Address.deserializeBinaryFromReader);
      msg.setBillingaddress(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.io.BillingMeta.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.io.BillingMeta.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.io.BillingMeta} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.BillingMeta.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCompanyname();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getTaxid();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getReference();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getBillingaddress();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      io_common_personal_pb.Address.serializeBinaryToWriter
    );
  }
};


/**
 * optional string companyName = 1;
 * @return {string}
 */
proto.io.BillingMeta.prototype.getCompanyname = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.BillingMeta} returns this
 */
proto.io.BillingMeta.prototype.setCompanyname = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string taxId = 2;
 * @return {string}
 */
proto.io.BillingMeta.prototype.getTaxid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.BillingMeta} returns this
 */
proto.io.BillingMeta.prototype.setTaxid = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string reference = 3;
 * @return {string}
 */
proto.io.BillingMeta.prototype.getReference = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.BillingMeta} returns this
 */
proto.io.BillingMeta.prototype.setReference = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional Address billingAddress = 4;
 * @return {?proto.io.Address}
 */
proto.io.BillingMeta.prototype.getBillingaddress = function() {
  return /** @type{?proto.io.Address} */ (
    jspb.Message.getWrapperField(this, io_common_personal_pb.Address, 4));
};


/**
 * @param {?proto.io.Address|undefined} value
 * @return {!proto.io.BillingMeta} returns this
*/
proto.io.BillingMeta.prototype.setBillingaddress = function(value) {
  return jspb.Message.setWrapperField(this, 4, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.io.BillingMeta} returns this
 */
proto.io.BillingMeta.prototype.clearBillingaddress = function() {
  return this.setBillingaddress(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.io.BillingMeta.prototype.hasBillingaddress = function() {
  return jspb.Message.getField(this, 4) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.io.Credentials.prototype.toObject = function(opt_includeInstance) {
  return proto.io.Credentials.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.io.Credentials} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.Credentials.toObject = function(includeInstance, msg) {
  var f, obj = {
    username: jspb.Message.getFieldWithDefault(msg, 1, ""),
    password: jspb.Message.getFieldWithDefault(msg, 2, ""),
    twofatoken: jspb.Message.getFieldWithDefault(msg, 3, ""),
    twofacode: jspb.Message.getFieldWithDefault(msg, 4, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.io.Credentials}
 */
proto.io.Credentials.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.io.Credentials;
  return proto.io.Credentials.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.io.Credentials} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.io.Credentials}
 */
proto.io.Credentials.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setUsername(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setPassword(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setTwofatoken(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setTwofacode(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.io.Credentials.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.io.Credentials.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.io.Credentials} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.Credentials.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getUsername();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getPassword();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getTwofatoken();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getTwofacode();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
};


/**
 * optional string username = 1;
 * @return {string}
 */
proto.io.Credentials.prototype.getUsername = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.Credentials} returns this
 */
proto.io.Credentials.prototype.setUsername = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string password = 2;
 * @return {string}
 */
proto.io.Credentials.prototype.getPassword = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.Credentials} returns this
 */
proto.io.Credentials.prototype.setPassword = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string twoFAToken = 3;
 * @return {string}
 */
proto.io.Credentials.prototype.getTwofatoken = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.Credentials} returns this
 */
proto.io.Credentials.prototype.setTwofatoken = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string twoFACode = 4;
 * @return {string}
 */
proto.io.Credentials.prototype.getTwofacode = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.Credentials} returns this
 */
proto.io.Credentials.prototype.setTwofacode = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.io.VerifyRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.io.VerifyRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.io.VerifyRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.VerifyRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    uid: jspb.Message.getFieldWithDefault(msg, 1, ""),
    token: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.io.VerifyRequest}
 */
proto.io.VerifyRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.io.VerifyRequest;
  return proto.io.VerifyRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.io.VerifyRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.io.VerifyRequest}
 */
proto.io.VerifyRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setUid(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setToken(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.io.VerifyRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.io.VerifyRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.io.VerifyRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.VerifyRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getUid();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getToken();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional string uid = 1;
 * @return {string}
 */
proto.io.VerifyRequest.prototype.getUid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.VerifyRequest} returns this
 */
proto.io.VerifyRequest.prototype.setUid = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string token = 2;
 * @return {string}
 */
proto.io.VerifyRequest.prototype.getToken = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.VerifyRequest} returns this
 */
proto.io.VerifyRequest.prototype.setToken = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.io.JWT.prototype.toObject = function(opt_includeInstance) {
  return proto.io.JWT.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.io.JWT} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.JWT.toObject = function(includeInstance, msg) {
  var f, obj = {
    token: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.io.JWT}
 */
proto.io.JWT.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.io.JWT;
  return proto.io.JWT.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.io.JWT} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.io.JWT}
 */
proto.io.JWT.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setToken(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.io.JWT.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.io.JWT.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.io.JWT} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.JWT.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getToken();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string token = 1;
 * @return {string}
 */
proto.io.JWT.prototype.getToken = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.JWT} returns this
 */
proto.io.JWT.prototype.setToken = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.io.PasswordResetInput.prototype.toObject = function(opt_includeInstance) {
  return proto.io.PasswordResetInput.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.io.PasswordResetInput} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.PasswordResetInput.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, ""),
    registeredemail: jspb.Message.getFieldWithDefault(msg, 2, ""),
    newpassword: jspb.Message.getFieldWithDefault(msg, 3, ""),
    confirmnewpassword: jspb.Message.getFieldWithDefault(msg, 4, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.io.PasswordResetInput}
 */
proto.io.PasswordResetInput.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.io.PasswordResetInput;
  return proto.io.PasswordResetInput.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.io.PasswordResetInput} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.io.PasswordResetInput}
 */
proto.io.PasswordResetInput.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setRegisteredemail(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setNewpassword(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setConfirmnewpassword(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.io.PasswordResetInput.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.io.PasswordResetInput.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.io.PasswordResetInput} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.PasswordResetInput.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getRegisteredemail();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getNewpassword();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getConfirmnewpassword();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.io.PasswordResetInput.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.PasswordResetInput} returns this
 */
proto.io.PasswordResetInput.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string registeredEmail = 2;
 * @return {string}
 */
proto.io.PasswordResetInput.prototype.getRegisteredemail = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.PasswordResetInput} returns this
 */
proto.io.PasswordResetInput.prototype.setRegisteredemail = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string newPassword = 3;
 * @return {string}
 */
proto.io.PasswordResetInput.prototype.getNewpassword = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.PasswordResetInput} returns this
 */
proto.io.PasswordResetInput.prototype.setNewpassword = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string confirmNewPassword = 4;
 * @return {string}
 */
proto.io.PasswordResetInput.prototype.getConfirmnewpassword = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.PasswordResetInput} returns this
 */
proto.io.PasswordResetInput.prototype.setConfirmnewpassword = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.io.Username.prototype.toObject = function(opt_includeInstance) {
  return proto.io.Username.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.io.Username} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.Username.toObject = function(includeInstance, msg) {
  var f, obj = {
    username: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.io.Username}
 */
proto.io.Username.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.io.Username;
  return proto.io.Username.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.io.Username} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.io.Username}
 */
proto.io.Username.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setUsername(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.io.Username.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.io.Username.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.io.Username} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.Username.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getUsername();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string username = 1;
 * @return {string}
 */
proto.io.Username.prototype.getUsername = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.Username} returns this
 */
proto.io.Username.prototype.setUsername = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.io.OAuth2AuthorizationRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.io.OAuth2AuthorizationRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.io.OAuth2AuthorizationRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.OAuth2AuthorizationRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    clientcode: jspb.Message.getFieldWithDefault(msg, 1, ""),
    provider: jspb.Message.getFieldWithDefault(msg, 2, 0),
    redirecturi: jspb.Message.getFieldWithDefault(msg, 3, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.io.OAuth2AuthorizationRequest}
 */
proto.io.OAuth2AuthorizationRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.io.OAuth2AuthorizationRequest;
  return proto.io.OAuth2AuthorizationRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.io.OAuth2AuthorizationRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.io.OAuth2AuthorizationRequest}
 */
proto.io.OAuth2AuthorizationRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setClientcode(value);
      break;
    case 2:
      var value = /** @type {!proto.io.OAuth2Provider} */ (reader.readEnum());
      msg.setProvider(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setRedirecturi(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.io.OAuth2AuthorizationRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.io.OAuth2AuthorizationRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.io.OAuth2AuthorizationRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.OAuth2AuthorizationRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getClientcode();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getProvider();
  if (f !== 0.0) {
    writer.writeEnum(
      2,
      f
    );
  }
  f = message.getRedirecturi();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
};


/**
 * optional string clientCode = 1;
 * @return {string}
 */
proto.io.OAuth2AuthorizationRequest.prototype.getClientcode = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.OAuth2AuthorizationRequest} returns this
 */
proto.io.OAuth2AuthorizationRequest.prototype.setClientcode = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional OAuth2Provider provider = 2;
 * @return {!proto.io.OAuth2Provider}
 */
proto.io.OAuth2AuthorizationRequest.prototype.getProvider = function() {
  return /** @type {!proto.io.OAuth2Provider} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {!proto.io.OAuth2Provider} value
 * @return {!proto.io.OAuth2AuthorizationRequest} returns this
 */
proto.io.OAuth2AuthorizationRequest.prototype.setProvider = function(value) {
  return jspb.Message.setProto3EnumField(this, 2, value);
};


/**
 * optional string redirectUri = 3;
 * @return {string}
 */
proto.io.OAuth2AuthorizationRequest.prototype.getRedirecturi = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.OAuth2AuthorizationRequest} returns this
 */
proto.io.OAuth2AuthorizationRequest.prototype.setRedirecturi = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.io.ScannerConfiguration.repeatedFields_ = [1,2,3,4];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.io.ScannerConfiguration.prototype.toObject = function(opt_includeInstance) {
  return proto.io.ScannerConfiguration.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.io.ScannerConfiguration} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.ScannerConfiguration.toObject = function(includeInstance, msg) {
  var f, obj = {
    membershippermissionsList: (f = jspb.Message.getRepeatedField(msg, 1)) == null ? undefined : f,
    couponpermissionsList: (f = jspb.Message.getRepeatedField(msg, 2)) == null ? undefined : f,
    defaultmembershipactionList: (f = jspb.Message.getRepeatedField(msg, 3)) == null ? undefined : f,
    defaultcouponactionList: (f = jspb.Message.getRepeatedField(msg, 4)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.io.ScannerConfiguration}
 */
proto.io.ScannerConfiguration.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.io.ScannerConfiguration;
  return proto.io.ScannerConfiguration.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.io.ScannerConfiguration} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.io.ScannerConfiguration}
 */
proto.io.ScannerConfiguration.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var values = /** @type {!Array<!proto.io.ScannerMembershipPermissions>} */ (reader.isDelimited() ? reader.readPackedEnum() : [reader.readEnum()]);
      for (var i = 0; i < values.length; i++) {
        msg.addMembershippermissions(values[i]);
      }
      break;
    case 2:
      var values = /** @type {!Array<!proto.io.ScannerCouponPermissions>} */ (reader.isDelimited() ? reader.readPackedEnum() : [reader.readEnum()]);
      for (var i = 0; i < values.length; i++) {
        msg.addCouponpermissions(values[i]);
      }
      break;
    case 3:
      var values = /** @type {!Array<!proto.io.DefaultMembershipScanAction>} */ (reader.isDelimited() ? reader.readPackedEnum() : [reader.readEnum()]);
      for (var i = 0; i < values.length; i++) {
        msg.addDefaultmembershipaction(values[i]);
      }
      break;
    case 4:
      var values = /** @type {!Array<!proto.io.DefaultCouponScanAction>} */ (reader.isDelimited() ? reader.readPackedEnum() : [reader.readEnum()]);
      for (var i = 0; i < values.length; i++) {
        msg.addDefaultcouponaction(values[i]);
      }
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.io.ScannerConfiguration.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.io.ScannerConfiguration.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.io.ScannerConfiguration} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.ScannerConfiguration.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getMembershippermissionsList();
  if (f.length > 0) {
    writer.writePackedEnum(
      1,
      f
    );
  }
  f = message.getCouponpermissionsList();
  if (f.length > 0) {
    writer.writePackedEnum(
      2,
      f
    );
  }
  f = message.getDefaultmembershipactionList();
  if (f.length > 0) {
    writer.writePackedEnum(
      3,
      f
    );
  }
  f = message.getDefaultcouponactionList();
  if (f.length > 0) {
    writer.writePackedEnum(
      4,
      f
    );
  }
};


/**
 * repeated ScannerMembershipPermissions membershipPermissions = 1;
 * @return {!Array<!proto.io.ScannerMembershipPermissions>}
 */
proto.io.ScannerConfiguration.prototype.getMembershippermissionsList = function() {
  return /** @type {!Array<!proto.io.ScannerMembershipPermissions>} */ (jspb.Message.getRepeatedField(this, 1));
};


/**
 * @param {!Array<!proto.io.ScannerMembershipPermissions>} value
 * @return {!proto.io.ScannerConfiguration} returns this
 */
proto.io.ScannerConfiguration.prototype.setMembershippermissionsList = function(value) {
  return jspb.Message.setField(this, 1, value || []);
};


/**
 * @param {!proto.io.ScannerMembershipPermissions} value
 * @param {number=} opt_index
 * @return {!proto.io.ScannerConfiguration} returns this
 */
proto.io.ScannerConfiguration.prototype.addMembershippermissions = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 1, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.io.ScannerConfiguration} returns this
 */
proto.io.ScannerConfiguration.prototype.clearMembershippermissionsList = function() {
  return this.setMembershippermissionsList([]);
};


/**
 * repeated ScannerCouponPermissions couponPermissions = 2;
 * @return {!Array<!proto.io.ScannerCouponPermissions>}
 */
proto.io.ScannerConfiguration.prototype.getCouponpermissionsList = function() {
  return /** @type {!Array<!proto.io.ScannerCouponPermissions>} */ (jspb.Message.getRepeatedField(this, 2));
};


/**
 * @param {!Array<!proto.io.ScannerCouponPermissions>} value
 * @return {!proto.io.ScannerConfiguration} returns this
 */
proto.io.ScannerConfiguration.prototype.setCouponpermissionsList = function(value) {
  return jspb.Message.setField(this, 2, value || []);
};


/**
 * @param {!proto.io.ScannerCouponPermissions} value
 * @param {number=} opt_index
 * @return {!proto.io.ScannerConfiguration} returns this
 */
proto.io.ScannerConfiguration.prototype.addCouponpermissions = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 2, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.io.ScannerConfiguration} returns this
 */
proto.io.ScannerConfiguration.prototype.clearCouponpermissionsList = function() {
  return this.setCouponpermissionsList([]);
};


/**
 * repeated DefaultMembershipScanAction defaultMembershipAction = 3;
 * @return {!Array<!proto.io.DefaultMembershipScanAction>}
 */
proto.io.ScannerConfiguration.prototype.getDefaultmembershipactionList = function() {
  return /** @type {!Array<!proto.io.DefaultMembershipScanAction>} */ (jspb.Message.getRepeatedField(this, 3));
};


/**
 * @param {!Array<!proto.io.DefaultMembershipScanAction>} value
 * @return {!proto.io.ScannerConfiguration} returns this
 */
proto.io.ScannerConfiguration.prototype.setDefaultmembershipactionList = function(value) {
  return jspb.Message.setField(this, 3, value || []);
};


/**
 * @param {!proto.io.DefaultMembershipScanAction} value
 * @param {number=} opt_index
 * @return {!proto.io.ScannerConfiguration} returns this
 */
proto.io.ScannerConfiguration.prototype.addDefaultmembershipaction = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 3, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.io.ScannerConfiguration} returns this
 */
proto.io.ScannerConfiguration.prototype.clearDefaultmembershipactionList = function() {
  return this.setDefaultmembershipactionList([]);
};


/**
 * repeated DefaultCouponScanAction defaultCouponAction = 4;
 * @return {!Array<!proto.io.DefaultCouponScanAction>}
 */
proto.io.ScannerConfiguration.prototype.getDefaultcouponactionList = function() {
  return /** @type {!Array<!proto.io.DefaultCouponScanAction>} */ (jspb.Message.getRepeatedField(this, 4));
};


/**
 * @param {!Array<!proto.io.DefaultCouponScanAction>} value
 * @return {!proto.io.ScannerConfiguration} returns this
 */
proto.io.ScannerConfiguration.prototype.setDefaultcouponactionList = function(value) {
  return jspb.Message.setField(this, 4, value || []);
};


/**
 * @param {!proto.io.DefaultCouponScanAction} value
 * @param {number=} opt_index
 * @return {!proto.io.ScannerConfiguration} returns this
 */
proto.io.ScannerConfiguration.prototype.addDefaultcouponaction = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 4, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.io.ScannerConfiguration} returns this
 */
proto.io.ScannerConfiguration.prototype.clearDefaultcouponactionList = function() {
  return this.setDefaultcouponactionList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.io.Email.prototype.toObject = function(opt_includeInstance) {
  return proto.io.Email.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.io.Email} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.Email.toObject = function(includeInstance, msg) {
  var f, obj = {
    email: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.io.Email}
 */
proto.io.Email.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.io.Email;
  return proto.io.Email.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.io.Email} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.io.Email}
 */
proto.io.Email.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setEmail(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.io.Email.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.io.Email.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.io.Email} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.Email.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getEmail();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string email = 1;
 * @return {string}
 */
proto.io.Email.prototype.getEmail = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.Email} returns this
 */
proto.io.Email.prototype.setEmail = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.io.ConfirmEmailChangeInput.prototype.toObject = function(opt_includeInstance) {
  return proto.io.ConfirmEmailChangeInput.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.io.ConfirmEmailChangeInput} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.ConfirmEmailChangeInput.toObject = function(includeInstance, msg) {
  var f, obj = {
    username: jspb.Message.getFieldWithDefault(msg, 1, ""),
    password: jspb.Message.getFieldWithDefault(msg, 2, ""),
    token: jspb.Message.getFieldWithDefault(msg, 3, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.io.ConfirmEmailChangeInput}
 */
proto.io.ConfirmEmailChangeInput.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.io.ConfirmEmailChangeInput;
  return proto.io.ConfirmEmailChangeInput.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.io.ConfirmEmailChangeInput} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.io.ConfirmEmailChangeInput}
 */
proto.io.ConfirmEmailChangeInput.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setUsername(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setPassword(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setToken(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.io.ConfirmEmailChangeInput.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.io.ConfirmEmailChangeInput.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.io.ConfirmEmailChangeInput} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.ConfirmEmailChangeInput.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getUsername();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getPassword();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getToken();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
};


/**
 * optional string username = 1;
 * @return {string}
 */
proto.io.ConfirmEmailChangeInput.prototype.getUsername = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.ConfirmEmailChangeInput} returns this
 */
proto.io.ConfirmEmailChangeInput.prototype.setUsername = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string password = 2;
 * @return {string}
 */
proto.io.ConfirmEmailChangeInput.prototype.getPassword = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.ConfirmEmailChangeInput} returns this
 */
proto.io.ConfirmEmailChangeInput.prototype.setPassword = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string token = 3;
 * @return {string}
 */
proto.io.ConfirmEmailChangeInput.prototype.getToken = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.ConfirmEmailChangeInput} returns this
 */
proto.io.ConfirmEmailChangeInput.prototype.setToken = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.io.CompanyName.prototype.toObject = function(opt_includeInstance) {
  return proto.io.CompanyName.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.io.CompanyName} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.CompanyName.toObject = function(includeInstance, msg) {
  var f, obj = {
    companyname: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.io.CompanyName}
 */
proto.io.CompanyName.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.io.CompanyName;
  return proto.io.CompanyName.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.io.CompanyName} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.io.CompanyName}
 */
proto.io.CompanyName.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setCompanyname(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.io.CompanyName.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.io.CompanyName.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.io.CompanyName} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.CompanyName.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCompanyname();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string companyName = 1;
 * @return {string}
 */
proto.io.CompanyName.prototype.getCompanyname = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.CompanyName} returns this
 */
proto.io.CompanyName.prototype.setCompanyname = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.io.DeleteAccountRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.io.DeleteAccountRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.io.DeleteAccountRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.DeleteAccountRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    username: jspb.Message.getFieldWithDefault(msg, 1, ""),
    password: jspb.Message.getFieldWithDefault(msg, 2, ""),
    confirmpermanentdelete: jspb.Message.getBooleanFieldWithDefault(msg, 3, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.io.DeleteAccountRequest}
 */
proto.io.DeleteAccountRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.io.DeleteAccountRequest;
  return proto.io.DeleteAccountRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.io.DeleteAccountRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.io.DeleteAccountRequest}
 */
proto.io.DeleteAccountRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setUsername(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setPassword(value);
      break;
    case 3:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setConfirmpermanentdelete(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.io.DeleteAccountRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.io.DeleteAccountRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.io.DeleteAccountRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.DeleteAccountRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getUsername();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getPassword();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getConfirmpermanentdelete();
  if (f) {
    writer.writeBool(
      3,
      f
    );
  }
};


/**
 * optional string username = 1;
 * @return {string}
 */
proto.io.DeleteAccountRequest.prototype.getUsername = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.DeleteAccountRequest} returns this
 */
proto.io.DeleteAccountRequest.prototype.setUsername = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string password = 2;
 * @return {string}
 */
proto.io.DeleteAccountRequest.prototype.getPassword = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.DeleteAccountRequest} returns this
 */
proto.io.DeleteAccountRequest.prototype.setPassword = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional bool confirmPermanentDelete = 3;
 * @return {boolean}
 */
proto.io.DeleteAccountRequest.prototype.getConfirmpermanentdelete = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 3, false));
};


/**
 * @param {boolean} value
 * @return {!proto.io.DeleteAccountRequest} returns this
 */
proto.io.DeleteAccountRequest.prototype.setConfirmpermanentdelete = function(value) {
  return jspb.Message.setProto3BooleanField(this, 3, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.io.ProjectsList.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.io.ProjectsList.prototype.toObject = function(opt_includeInstance) {
  return proto.io.ProjectsList.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.io.ProjectsList} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.ProjectsList.toObject = function(includeInstance, msg) {
  var f, obj = {
    projectsList: (f = jspb.Message.getRepeatedField(msg, 1)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.io.ProjectsList}
 */
proto.io.ProjectsList.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.io.ProjectsList;
  return proto.io.ProjectsList.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.io.ProjectsList} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.io.ProjectsList}
 */
proto.io.ProjectsList.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.addProjects(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.io.ProjectsList.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.io.ProjectsList.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.io.ProjectsList} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.ProjectsList.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getProjectsList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      1,
      f
    );
  }
};


/**
 * repeated string projects = 1;
 * @return {!Array<string>}
 */
proto.io.ProjectsList.prototype.getProjectsList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 1));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.io.ProjectsList} returns this
 */
proto.io.ProjectsList.prototype.setProjectsList = function(value) {
  return jspb.Message.setField(this, 1, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.io.ProjectsList} returns this
 */
proto.io.ProjectsList.prototype.addProjects = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 1, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.io.ProjectsList} returns this
 */
proto.io.ProjectsList.prototype.clearProjectsList = function() {
  return this.setProjectsList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.io.CertificatesList.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.io.CertificatesList.prototype.toObject = function(opt_includeInstance) {
  return proto.io.CertificatesList.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.io.CertificatesList} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.CertificatesList.toObject = function(includeInstance, msg) {
  var f, obj = {
    certificatesList: (f = jspb.Message.getRepeatedField(msg, 1)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.io.CertificatesList}
 */
proto.io.CertificatesList.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.io.CertificatesList;
  return proto.io.CertificatesList.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.io.CertificatesList} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.io.CertificatesList}
 */
proto.io.CertificatesList.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.addCertificates(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.io.CertificatesList.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.io.CertificatesList.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.io.CertificatesList} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.CertificatesList.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCertificatesList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      1,
      f
    );
  }
};


/**
 * repeated string certificates = 1;
 * @return {!Array<string>}
 */
proto.io.CertificatesList.prototype.getCertificatesList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 1));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.io.CertificatesList} returns this
 */
proto.io.CertificatesList.prototype.setCertificatesList = function(value) {
  return jspb.Message.setField(this, 1, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.io.CertificatesList} returns this
 */
proto.io.CertificatesList.prototype.addCertificates = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 1, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.io.CertificatesList} returns this
 */
proto.io.CertificatesList.prototype.clearCertificatesList = function() {
  return this.setCertificatesList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.io.ProtocolList.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.io.ProtocolList.prototype.toObject = function(opt_includeInstance) {
  return proto.io.ProtocolList.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.io.ProtocolList} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.ProtocolList.toObject = function(includeInstance, msg) {
  var f, obj = {
    classidsList: (f = jspb.Message.getRepeatedField(msg, 1)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.io.ProtocolList}
 */
proto.io.ProtocolList.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.io.ProtocolList;
  return proto.io.ProtocolList.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.io.ProtocolList} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.io.ProtocolList}
 */
proto.io.ProtocolList.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.addClassids(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.io.ProtocolList.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.io.ProtocolList.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.io.ProtocolList} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.ProtocolList.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getClassidsList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      1,
      f
    );
  }
};


/**
 * repeated string classIds = 1;
 * @return {!Array<string>}
 */
proto.io.ProtocolList.prototype.getClassidsList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 1));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.io.ProtocolList} returns this
 */
proto.io.ProtocolList.prototype.setClassidsList = function(value) {
  return jspb.Message.setField(this, 1, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.io.ProtocolList} returns this
 */
proto.io.ProtocolList.prototype.addClassids = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 1, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.io.ProtocolList} returns this
 */
proto.io.ProtocolList.prototype.clearClassidsList = function() {
  return this.setClassidsList([]);
};



/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.io.ResourcePermissions.oneofGroups_ = [[1,2],[3,4],[5,6]];

/**
 * @enum {number}
 */
proto.io.ResourcePermissions.ProjectpermissionsCase = {
  PROJECTPERMISSIONS_NOT_SET: 0,
  ALLOWEDPROJECTS: 1,
  DISALLOWEDPROJECTS: 2
};

/**
 * @return {proto.io.ResourcePermissions.ProjectpermissionsCase}
 */
proto.io.ResourcePermissions.prototype.getProjectpermissionsCase = function() {
  return /** @type {proto.io.ResourcePermissions.ProjectpermissionsCase} */(jspb.Message.computeOneofCase(this, proto.io.ResourcePermissions.oneofGroups_[0]));
};

/**
 * @enum {number}
 */
proto.io.ResourcePermissions.CertificatepermissionsCase = {
  CERTIFICATEPERMISSIONS_NOT_SET: 0,
  ALLOWEDCERTIFICATES: 3,
  DISALLOWEDCERTIFICATES: 4
};

/**
 * @return {proto.io.ResourcePermissions.CertificatepermissionsCase}
 */
proto.io.ResourcePermissions.prototype.getCertificatepermissionsCase = function() {
  return /** @type {proto.io.ResourcePermissions.CertificatepermissionsCase} */(jspb.Message.computeOneofCase(this, proto.io.ResourcePermissions.oneofGroups_[1]));
};

/**
 * @enum {number}
 */
proto.io.ResourcePermissions.MembershipprogrampermissionsCase = {
  MEMBERSHIPPROGRAMPERMISSIONS_NOT_SET: 0,
  ALLOWEDPROGRAMS: 5,
  DISALLOWEDPROGRAMS: 6
};

/**
 * @return {proto.io.ResourcePermissions.MembershipprogrampermissionsCase}
 */
proto.io.ResourcePermissions.prototype.getMembershipprogrampermissionsCase = function() {
  return /** @type {proto.io.ResourcePermissions.MembershipprogrampermissionsCase} */(jspb.Message.computeOneofCase(this, proto.io.ResourcePermissions.oneofGroups_[2]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.io.ResourcePermissions.prototype.toObject = function(opt_includeInstance) {
  return proto.io.ResourcePermissions.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.io.ResourcePermissions} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.ResourcePermissions.toObject = function(includeInstance, msg) {
  var f, obj = {
    allowedprojects: (f = msg.getAllowedprojects()) && proto.io.ProjectsList.toObject(includeInstance, f),
    disallowedprojects: (f = msg.getDisallowedprojects()) && proto.io.ProjectsList.toObject(includeInstance, f),
    allowedcertificates: (f = msg.getAllowedcertificates()) && proto.io.CertificatesList.toObject(includeInstance, f),
    disallowedcertificates: (f = msg.getDisallowedcertificates()) && proto.io.CertificatesList.toObject(includeInstance, f),
    allowedprograms: (f = msg.getAllowedprograms()) && proto.io.ProtocolList.toObject(includeInstance, f),
    disallowedprograms: (f = msg.getDisallowedprograms()) && proto.io.ProtocolList.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.io.ResourcePermissions}
 */
proto.io.ResourcePermissions.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.io.ResourcePermissions;
  return proto.io.ResourcePermissions.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.io.ResourcePermissions} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.io.ResourcePermissions}
 */
proto.io.ResourcePermissions.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.io.ProjectsList;
      reader.readMessage(value,proto.io.ProjectsList.deserializeBinaryFromReader);
      msg.setAllowedprojects(value);
      break;
    case 2:
      var value = new proto.io.ProjectsList;
      reader.readMessage(value,proto.io.ProjectsList.deserializeBinaryFromReader);
      msg.setDisallowedprojects(value);
      break;
    case 3:
      var value = new proto.io.CertificatesList;
      reader.readMessage(value,proto.io.CertificatesList.deserializeBinaryFromReader);
      msg.setAllowedcertificates(value);
      break;
    case 4:
      var value = new proto.io.CertificatesList;
      reader.readMessage(value,proto.io.CertificatesList.deserializeBinaryFromReader);
      msg.setDisallowedcertificates(value);
      break;
    case 5:
      var value = new proto.io.ProtocolList;
      reader.readMessage(value,proto.io.ProtocolList.deserializeBinaryFromReader);
      msg.setAllowedprograms(value);
      break;
    case 6:
      var value = new proto.io.ProtocolList;
      reader.readMessage(value,proto.io.ProtocolList.deserializeBinaryFromReader);
      msg.setDisallowedprograms(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.io.ResourcePermissions.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.io.ResourcePermissions.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.io.ResourcePermissions} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.ResourcePermissions.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getAllowedprojects();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.io.ProjectsList.serializeBinaryToWriter
    );
  }
  f = message.getDisallowedprojects();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.io.ProjectsList.serializeBinaryToWriter
    );
  }
  f = message.getAllowedcertificates();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.io.CertificatesList.serializeBinaryToWriter
    );
  }
  f = message.getDisallowedcertificates();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      proto.io.CertificatesList.serializeBinaryToWriter
    );
  }
  f = message.getAllowedprograms();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      proto.io.ProtocolList.serializeBinaryToWriter
    );
  }
  f = message.getDisallowedprograms();
  if (f != null) {
    writer.writeMessage(
      6,
      f,
      proto.io.ProtocolList.serializeBinaryToWriter
    );
  }
};


/**
 * optional ProjectsList allowedProjects = 1;
 * @return {?proto.io.ProjectsList}
 */
proto.io.ResourcePermissions.prototype.getAllowedprojects = function() {
  return /** @type{?proto.io.ProjectsList} */ (
    jspb.Message.getWrapperField(this, proto.io.ProjectsList, 1));
};


/**
 * @param {?proto.io.ProjectsList|undefined} value
 * @return {!proto.io.ResourcePermissions} returns this
*/
proto.io.ResourcePermissions.prototype.setAllowedprojects = function(value) {
  return jspb.Message.setOneofWrapperField(this, 1, proto.io.ResourcePermissions.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.io.ResourcePermissions} returns this
 */
proto.io.ResourcePermissions.prototype.clearAllowedprojects = function() {
  return this.setAllowedprojects(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.io.ResourcePermissions.prototype.hasAllowedprojects = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional ProjectsList disallowedProjects = 2;
 * @return {?proto.io.ProjectsList}
 */
proto.io.ResourcePermissions.prototype.getDisallowedprojects = function() {
  return /** @type{?proto.io.ProjectsList} */ (
    jspb.Message.getWrapperField(this, proto.io.ProjectsList, 2));
};


/**
 * @param {?proto.io.ProjectsList|undefined} value
 * @return {!proto.io.ResourcePermissions} returns this
*/
proto.io.ResourcePermissions.prototype.setDisallowedprojects = function(value) {
  return jspb.Message.setOneofWrapperField(this, 2, proto.io.ResourcePermissions.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.io.ResourcePermissions} returns this
 */
proto.io.ResourcePermissions.prototype.clearDisallowedprojects = function() {
  return this.setDisallowedprojects(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.io.ResourcePermissions.prototype.hasDisallowedprojects = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional CertificatesList allowedCertificates = 3;
 * @return {?proto.io.CertificatesList}
 */
proto.io.ResourcePermissions.prototype.getAllowedcertificates = function() {
  return /** @type{?proto.io.CertificatesList} */ (
    jspb.Message.getWrapperField(this, proto.io.CertificatesList, 3));
};


/**
 * @param {?proto.io.CertificatesList|undefined} value
 * @return {!proto.io.ResourcePermissions} returns this
*/
proto.io.ResourcePermissions.prototype.setAllowedcertificates = function(value) {
  return jspb.Message.setOneofWrapperField(this, 3, proto.io.ResourcePermissions.oneofGroups_[1], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.io.ResourcePermissions} returns this
 */
proto.io.ResourcePermissions.prototype.clearAllowedcertificates = function() {
  return this.setAllowedcertificates(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.io.ResourcePermissions.prototype.hasAllowedcertificates = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional CertificatesList disallowedCertificates = 4;
 * @return {?proto.io.CertificatesList}
 */
proto.io.ResourcePermissions.prototype.getDisallowedcertificates = function() {
  return /** @type{?proto.io.CertificatesList} */ (
    jspb.Message.getWrapperField(this, proto.io.CertificatesList, 4));
};


/**
 * @param {?proto.io.CertificatesList|undefined} value
 * @return {!proto.io.ResourcePermissions} returns this
*/
proto.io.ResourcePermissions.prototype.setDisallowedcertificates = function(value) {
  return jspb.Message.setOneofWrapperField(this, 4, proto.io.ResourcePermissions.oneofGroups_[1], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.io.ResourcePermissions} returns this
 */
proto.io.ResourcePermissions.prototype.clearDisallowedcertificates = function() {
  return this.setDisallowedcertificates(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.io.ResourcePermissions.prototype.hasDisallowedcertificates = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional ProtocolList allowedPrograms = 5;
 * @return {?proto.io.ProtocolList}
 */
proto.io.ResourcePermissions.prototype.getAllowedprograms = function() {
  return /** @type{?proto.io.ProtocolList} */ (
    jspb.Message.getWrapperField(this, proto.io.ProtocolList, 5));
};


/**
 * @param {?proto.io.ProtocolList|undefined} value
 * @return {!proto.io.ResourcePermissions} returns this
*/
proto.io.ResourcePermissions.prototype.setAllowedprograms = function(value) {
  return jspb.Message.setOneofWrapperField(this, 5, proto.io.ResourcePermissions.oneofGroups_[2], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.io.ResourcePermissions} returns this
 */
proto.io.ResourcePermissions.prototype.clearAllowedprograms = function() {
  return this.setAllowedprograms(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.io.ResourcePermissions.prototype.hasAllowedprograms = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional ProtocolList disallowedPrograms = 6;
 * @return {?proto.io.ProtocolList}
 */
proto.io.ResourcePermissions.prototype.getDisallowedprograms = function() {
  return /** @type{?proto.io.ProtocolList} */ (
    jspb.Message.getWrapperField(this, proto.io.ProtocolList, 6));
};


/**
 * @param {?proto.io.ProtocolList|undefined} value
 * @return {!proto.io.ResourcePermissions} returns this
*/
proto.io.ResourcePermissions.prototype.setDisallowedprograms = function(value) {
  return jspb.Message.setOneofWrapperField(this, 6, proto.io.ResourcePermissions.oneofGroups_[2], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.io.ResourcePermissions} returns this
 */
proto.io.ResourcePermissions.prototype.clearDisallowedprograms = function() {
  return this.setDisallowedprograms(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.io.ResourcePermissions.prototype.hasDisallowedprograms = function() {
  return jspb.Message.getField(this, 6) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.io.TeamMemberPermissions.prototype.toObject = function(opt_includeInstance) {
  return proto.io.TeamMemberPermissions.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.io.TeamMemberPermissions} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.TeamMemberPermissions.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, ""),
    userid: jspb.Message.getFieldWithDefault(msg, 2, ""),
    permissionscope: jspb.Message.getFieldWithDefault(msg, 3, 0),
    status: jspb.Message.getFieldWithDefault(msg, 4, 0),
    resourcepermissions: (f = msg.getResourcepermissions()) && proto.io.ResourcePermissions.toObject(includeInstance, f),
    created: (f = msg.getCreated()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
    updated: (f = msg.getUpdated()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.io.TeamMemberPermissions}
 */
proto.io.TeamMemberPermissions.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.io.TeamMemberPermissions;
  return proto.io.TeamMemberPermissions.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.io.TeamMemberPermissions} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.io.TeamMemberPermissions}
 */
proto.io.TeamMemberPermissions.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setUserid(value);
      break;
    case 3:
      var value = /** @type {!proto.io.PermissionScope} */ (reader.readEnum());
      msg.setPermissionscope(value);
      break;
    case 4:
      var value = /** @type {!proto.io.TeamMemberStatus} */ (reader.readEnum());
      msg.setStatus(value);
      break;
    case 5:
      var value = new proto.io.ResourcePermissions;
      reader.readMessage(value,proto.io.ResourcePermissions.deserializeBinaryFromReader);
      msg.setResourcepermissions(value);
      break;
    case 6:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setCreated(value);
      break;
    case 7:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setUpdated(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.io.TeamMemberPermissions.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.io.TeamMemberPermissions.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.io.TeamMemberPermissions} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.TeamMemberPermissions.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getUserid();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getPermissionscope();
  if (f !== 0.0) {
    writer.writeEnum(
      3,
      f
    );
  }
  f = message.getStatus();
  if (f !== 0.0) {
    writer.writeEnum(
      4,
      f
    );
  }
  f = message.getResourcepermissions();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      proto.io.ResourcePermissions.serializeBinaryToWriter
    );
  }
  f = message.getCreated();
  if (f != null) {
    writer.writeMessage(
      6,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getUpdated();
  if (f != null) {
    writer.writeMessage(
      7,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.io.TeamMemberPermissions.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.TeamMemberPermissions} returns this
 */
proto.io.TeamMemberPermissions.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string userId = 2;
 * @return {string}
 */
proto.io.TeamMemberPermissions.prototype.getUserid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.TeamMemberPermissions} returns this
 */
proto.io.TeamMemberPermissions.prototype.setUserid = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional PermissionScope permissionScope = 3;
 * @return {!proto.io.PermissionScope}
 */
proto.io.TeamMemberPermissions.prototype.getPermissionscope = function() {
  return /** @type {!proto.io.PermissionScope} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {!proto.io.PermissionScope} value
 * @return {!proto.io.TeamMemberPermissions} returns this
 */
proto.io.TeamMemberPermissions.prototype.setPermissionscope = function(value) {
  return jspb.Message.setProto3EnumField(this, 3, value);
};


/**
 * optional TeamMemberStatus status = 4;
 * @return {!proto.io.TeamMemberStatus}
 */
proto.io.TeamMemberPermissions.prototype.getStatus = function() {
  return /** @type {!proto.io.TeamMemberStatus} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {!proto.io.TeamMemberStatus} value
 * @return {!proto.io.TeamMemberPermissions} returns this
 */
proto.io.TeamMemberPermissions.prototype.setStatus = function(value) {
  return jspb.Message.setProto3EnumField(this, 4, value);
};


/**
 * optional ResourcePermissions resourcePermissions = 5;
 * @return {?proto.io.ResourcePermissions}
 */
proto.io.TeamMemberPermissions.prototype.getResourcepermissions = function() {
  return /** @type{?proto.io.ResourcePermissions} */ (
    jspb.Message.getWrapperField(this, proto.io.ResourcePermissions, 5));
};


/**
 * @param {?proto.io.ResourcePermissions|undefined} value
 * @return {!proto.io.TeamMemberPermissions} returns this
*/
proto.io.TeamMemberPermissions.prototype.setResourcepermissions = function(value) {
  return jspb.Message.setWrapperField(this, 5, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.io.TeamMemberPermissions} returns this
 */
proto.io.TeamMemberPermissions.prototype.clearResourcepermissions = function() {
  return this.setResourcepermissions(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.io.TeamMemberPermissions.prototype.hasResourcepermissions = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional google.protobuf.Timestamp created = 6;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.io.TeamMemberPermissions.prototype.getCreated = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 6));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.io.TeamMemberPermissions} returns this
*/
proto.io.TeamMemberPermissions.prototype.setCreated = function(value) {
  return jspb.Message.setWrapperField(this, 6, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.io.TeamMemberPermissions} returns this
 */
proto.io.TeamMemberPermissions.prototype.clearCreated = function() {
  return this.setCreated(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.io.TeamMemberPermissions.prototype.hasCreated = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional google.protobuf.Timestamp updated = 7;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.io.TeamMemberPermissions.prototype.getUpdated = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 7));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.io.TeamMemberPermissions} returns this
*/
proto.io.TeamMemberPermissions.prototype.setUpdated = function(value) {
  return jspb.Message.setWrapperField(this, 7, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.io.TeamMemberPermissions} returns this
 */
proto.io.TeamMemberPermissions.prototype.clearUpdated = function() {
  return this.setUpdated(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.io.TeamMemberPermissions.prototype.hasUpdated = function() {
  return jspb.Message.getField(this, 7) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.io.NewTeamMember.prototype.toObject = function(opt_includeInstance) {
  return proto.io.NewTeamMember.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.io.NewTeamMember} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.NewTeamMember.toObject = function(includeInstance, msg) {
  var f, obj = {
    user: (f = msg.getUser()) && proto.io.NewUser.toObject(includeInstance, f),
    permissions: (f = msg.getPermissions()) && proto.io.TeamMemberPermissions.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.io.NewTeamMember}
 */
proto.io.NewTeamMember.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.io.NewTeamMember;
  return proto.io.NewTeamMember.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.io.NewTeamMember} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.io.NewTeamMember}
 */
proto.io.NewTeamMember.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.io.NewUser;
      reader.readMessage(value,proto.io.NewUser.deserializeBinaryFromReader);
      msg.setUser(value);
      break;
    case 2:
      var value = new proto.io.TeamMemberPermissions;
      reader.readMessage(value,proto.io.TeamMemberPermissions.deserializeBinaryFromReader);
      msg.setPermissions(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.io.NewTeamMember.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.io.NewTeamMember.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.io.NewTeamMember} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.NewTeamMember.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getUser();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.io.NewUser.serializeBinaryToWriter
    );
  }
  f = message.getPermissions();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.io.TeamMemberPermissions.serializeBinaryToWriter
    );
  }
};


/**
 * optional NewUser user = 1;
 * @return {?proto.io.NewUser}
 */
proto.io.NewTeamMember.prototype.getUser = function() {
  return /** @type{?proto.io.NewUser} */ (
    jspb.Message.getWrapperField(this, proto.io.NewUser, 1));
};


/**
 * @param {?proto.io.NewUser|undefined} value
 * @return {!proto.io.NewTeamMember} returns this
*/
proto.io.NewTeamMember.prototype.setUser = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.io.NewTeamMember} returns this
 */
proto.io.NewTeamMember.prototype.clearUser = function() {
  return this.setUser(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.io.NewTeamMember.prototype.hasUser = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional TeamMemberPermissions permissions = 2;
 * @return {?proto.io.TeamMemberPermissions}
 */
proto.io.NewTeamMember.prototype.getPermissions = function() {
  return /** @type{?proto.io.TeamMemberPermissions} */ (
    jspb.Message.getWrapperField(this, proto.io.TeamMemberPermissions, 2));
};


/**
 * @param {?proto.io.TeamMemberPermissions|undefined} value
 * @return {!proto.io.NewTeamMember} returns this
*/
proto.io.NewTeamMember.prototype.setPermissions = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.io.NewTeamMember} returns this
 */
proto.io.NewTeamMember.prototype.clearPermissions = function() {
  return this.setPermissions(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.io.NewTeamMember.prototype.hasPermissions = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.io.GetTeamMemberResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.io.GetTeamMemberResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.io.GetTeamMemberResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.GetTeamMemberResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    user: (f = msg.getUser()) && proto.io.GetUserResponse.toObject(includeInstance, f),
    permissions: (f = msg.getPermissions()) && proto.io.TeamMemberPermissions.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.io.GetTeamMemberResponse}
 */
proto.io.GetTeamMemberResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.io.GetTeamMemberResponse;
  return proto.io.GetTeamMemberResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.io.GetTeamMemberResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.io.GetTeamMemberResponse}
 */
proto.io.GetTeamMemberResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.io.GetUserResponse;
      reader.readMessage(value,proto.io.GetUserResponse.deserializeBinaryFromReader);
      msg.setUser(value);
      break;
    case 2:
      var value = new proto.io.TeamMemberPermissions;
      reader.readMessage(value,proto.io.TeamMemberPermissions.deserializeBinaryFromReader);
      msg.setPermissions(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.io.GetTeamMemberResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.io.GetTeamMemberResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.io.GetTeamMemberResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.GetTeamMemberResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getUser();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.io.GetUserResponse.serializeBinaryToWriter
    );
  }
  f = message.getPermissions();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.io.TeamMemberPermissions.serializeBinaryToWriter
    );
  }
};


/**
 * optional GetUserResponse user = 1;
 * @return {?proto.io.GetUserResponse}
 */
proto.io.GetTeamMemberResponse.prototype.getUser = function() {
  return /** @type{?proto.io.GetUserResponse} */ (
    jspb.Message.getWrapperField(this, proto.io.GetUserResponse, 1));
};


/**
 * @param {?proto.io.GetUserResponse|undefined} value
 * @return {!proto.io.GetTeamMemberResponse} returns this
*/
proto.io.GetTeamMemberResponse.prototype.setUser = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.io.GetTeamMemberResponse} returns this
 */
proto.io.GetTeamMemberResponse.prototype.clearUser = function() {
  return this.setUser(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.io.GetTeamMemberResponse.prototype.hasUser = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional TeamMemberPermissions permissions = 2;
 * @return {?proto.io.TeamMemberPermissions}
 */
proto.io.GetTeamMemberResponse.prototype.getPermissions = function() {
  return /** @type{?proto.io.TeamMemberPermissions} */ (
    jspb.Message.getWrapperField(this, proto.io.TeamMemberPermissions, 2));
};


/**
 * @param {?proto.io.TeamMemberPermissions|undefined} value
 * @return {!proto.io.GetTeamMemberResponse} returns this
*/
proto.io.GetTeamMemberResponse.prototype.setPermissions = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.io.GetTeamMemberResponse} returns this
 */
proto.io.GetTeamMemberResponse.prototype.clearPermissions = function() {
  return this.setPermissions(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.io.GetTeamMemberResponse.prototype.hasPermissions = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.io.ListTeamMembersResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.io.ListTeamMembersResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.io.ListTeamMembersResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.ListTeamMembersResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    uid: jspb.Message.getFieldWithDefault(msg, 1, ""),
    email: jspb.Message.getFieldWithDefault(msg, 2, ""),
    status: jspb.Message.getFieldWithDefault(msg, 3, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.io.ListTeamMembersResponse}
 */
proto.io.ListTeamMembersResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.io.ListTeamMembersResponse;
  return proto.io.ListTeamMembersResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.io.ListTeamMembersResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.io.ListTeamMembersResponse}
 */
proto.io.ListTeamMembersResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setUid(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setEmail(value);
      break;
    case 3:
      var value = /** @type {!proto.io.TeamMemberStatus} */ (reader.readEnum());
      msg.setStatus(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.io.ListTeamMembersResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.io.ListTeamMembersResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.io.ListTeamMembersResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.ListTeamMembersResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getUid();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getEmail();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getStatus();
  if (f !== 0.0) {
    writer.writeEnum(
      3,
      f
    );
  }
};


/**
 * optional string uid = 1;
 * @return {string}
 */
proto.io.ListTeamMembersResponse.prototype.getUid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.ListTeamMembersResponse} returns this
 */
proto.io.ListTeamMembersResponse.prototype.setUid = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string email = 2;
 * @return {string}
 */
proto.io.ListTeamMembersResponse.prototype.getEmail = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.ListTeamMembersResponse} returns this
 */
proto.io.ListTeamMembersResponse.prototype.setEmail = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional TeamMemberStatus status = 3;
 * @return {!proto.io.TeamMemberStatus}
 */
proto.io.ListTeamMembersResponse.prototype.getStatus = function() {
  return /** @type {!proto.io.TeamMemberStatus} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {!proto.io.TeamMemberStatus} value
 * @return {!proto.io.ListTeamMembersResponse} returns this
 */
proto.io.ListTeamMembersResponse.prototype.setStatus = function(value) {
  return jspb.Message.setProto3EnumField(this, 3, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.io.Recaptcha.prototype.toObject = function(opt_includeInstance) {
  return proto.io.Recaptcha.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.io.Recaptcha} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.Recaptcha.toObject = function(includeInstance, msg) {
  var f, obj = {
    token: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.io.Recaptcha}
 */
proto.io.Recaptcha.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.io.Recaptcha;
  return proto.io.Recaptcha.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.io.Recaptcha} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.io.Recaptcha}
 */
proto.io.Recaptcha.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setToken(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.io.Recaptcha.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.io.Recaptcha.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.io.Recaptcha} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.Recaptcha.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getToken();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string token = 1;
 * @return {string}
 */
proto.io.Recaptcha.prototype.getToken = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.Recaptcha} returns this
 */
proto.io.Recaptcha.prototype.setToken = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * @enum {number}
 */
proto.io.OAuth2Provider = {
  OAUTH_DO_NOT_USE: 0,
  OAUTH_PATREON: 10,
  OAUTH_SPROUT: 50,
  OAUTH_MAILCHIMP: 100,
  OAUTH_XERO: 150
};

/**
 * @enum {number}
 */
proto.io.ScannerMembershipPermissions = {
  MEMBERSHIP_PERMISSION_NONE: 0,
  MEMBERSHIP_PERMISSION_VIEW_MEMBER: 1,
  MEMBERSHIP_PERMISSION_EDIT_MEMBER: 2,
  MEMBERSHIP_PERMISSION_EARN_POINTS: 4,
  MEMBERSHIP_PERMISSION_BURN_POINTS: 8,
  MEMBERSHIP_PERMISSION_SET_POINTS: 16,
  MEMBERSHIP_PERMISSION_CHANGE_TIER: 32,
  MEMBERSHIP_PERMISSION_VIEW_EVENTS: 64,
  MEMBERSHIP_PERMISSION_CHANGE_EXPIRY: 128,
  MEMBERSHIP_PERMISSION_CHECK_IN_OUT: 256,
  MEMBERSHIP_PERMISSION_VALIDATE: 512
};

/**
 * @enum {number}
 */
proto.io.ScannerCouponPermissions = {
  COUPON_PERMISSION_NONE: 0,
  COUPON_PERMISSION_VIEW_COUPON: 1,
  COUPON_PERMISSION_EDIT_COUPON: 2,
  COUPON_PERMISSION_REDEEM: 4,
  COUPON_PERMISSION_VIEW_EVENTS: 8,
  COUPON_PERMISSION_CHANGE_EXPIRY: 16,
  COUPON_PERMISSION_VALIDATE: 32
};

/**
 * @enum {number}
 */
proto.io.DefaultMembershipScanAction = {
  MEMBERSHIP_DEFAULT_NONE: 0,
  MEMBERSHIP_DEFAULT_EARN_POINTS: 1,
  MEMBERSHIP_DEFAULT_BURN_POINTS: 2,
  MEMBERSHIP_DEFAULT_CHECK_IN_OUT: 4,
  MEMBERSHIP_DEFAULT_VALIDATE: 8
};

/**
 * @enum {number}
 */
proto.io.DefaultCouponScanAction = {
  COUPON_DEFAULT_NONE: 0,
  COUPON_DEFAULT_REDEEM: 1,
  COUPON_DEFAULT_VALIDATE: 2
};

/**
 * @enum {number}
 */
proto.io.PermissionScope = {
  PERMISSION_NONE: 0,
  WEB_ACCESS: 1,
  APP_ACCESS: 2,
  ALL_PROJECTS: 4,
  ALL_CERTIFICATES: 8,
  BILLING_ACCESS: 16,
  CERTIFICATES_ACCESS: 32,
  MEMBERS_ACCESS: 64,
  COUPONS_ACCESS: 128,
  EVENTS_ACCESS: 256,
  FLIGHTS_ACCESS: 512
};

/**
 * @enum {number}
 */
proto.io.TeamMemberStatus = {
  STATUS_NONE: 0,
  TEAM_MEMBER_ACTIVE: 1,
  TEAM_MEMBER_DISABLED: 2,
  TEAM_MEMBER_EXPIRED: 4,
  TEAM_MEMBER_PENDING: 8
};

goog.object.extend(exports, proto.io);
