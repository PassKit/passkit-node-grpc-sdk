// source: io/event_tickets/venue.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global = (function() {
  if (this) { return this; }
  if (typeof window !== 'undefined') { return window; }
  if (typeof global !== 'undefined') { return global; }
  if (typeof self !== 'undefined') { return self; }
  return Function('return this')();
}.call(null));

var google_protobuf_timestamp_pb = require('google-protobuf/google/protobuf/timestamp_pb.js');
goog.object.extend(proto, google_protobuf_timestamp_pb);
var io_common_localization_pb = require('../../io/common/localization_pb.js');
goog.object.extend(proto, io_common_localization_pb);
var io_common_proximity_pb = require('../../io/common/proximity_pb.js');
goog.object.extend(proto, io_common_proximity_pb);
goog.exportSymbol('proto.event_tickets.EventUrls', null, global);
goog.exportSymbol('proto.event_tickets.Venue', null, global);
goog.exportSymbol('proto.event_tickets.VenueLimitedFieldsResponse', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.event_tickets.Venue = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.event_tickets.Venue.repeatedFields_, null);
};
goog.inherits(proto.event_tickets.Venue, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.event_tickets.Venue.displayName = 'proto.event_tickets.Venue';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.event_tickets.EventUrls = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.event_tickets.EventUrls, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.event_tickets.EventUrls.displayName = 'proto.event_tickets.EventUrls';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.event_tickets.VenueLimitedFieldsResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.event_tickets.VenueLimitedFieldsResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.event_tickets.VenueLimitedFieldsResponse.displayName = 'proto.event_tickets.VenueLimitedFieldsResponse';
}

/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.event_tickets.Venue.repeatedFields_ = [8];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.event_tickets.Venue.prototype.toObject = function(opt_includeInstance) {
  return proto.event_tickets.Venue.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.event_tickets.Venue} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.event_tickets.Venue.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, ""),
    uid: jspb.Message.getFieldWithDefault(msg, 2, ""),
    name: jspb.Message.getFieldWithDefault(msg, 3, ""),
    localizedname: (f = msg.getLocalizedname()) && io_common_localization_pb.LocalizedString.toObject(includeInstance, f),
    address: jspb.Message.getFieldWithDefault(msg, 5, ""),
    localizedaddress: (f = msg.getLocalizedaddress()) && io_common_localization_pb.LocalizedString.toObject(includeInstance, f),
    timezone: jspb.Message.getFieldWithDefault(msg, 7, ""),
    gpscoordsList: jspb.Message.toObjectList(msg.getGpscoordsList(),
    io_common_proximity_pb.GPSLocation.toObject, includeInstance),
    eventurls: (f = msg.getEventurls()) && proto.event_tickets.EventUrls.toObject(includeInstance, f),
    room: jspb.Message.getFieldWithDefault(msg, 12, ""),
    created: (f = msg.getCreated()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
    updated: (f = msg.getUpdated()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.event_tickets.Venue}
 */
proto.event_tickets.Venue.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.event_tickets.Venue;
  return proto.event_tickets.Venue.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.event_tickets.Venue} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.event_tickets.Venue}
 */
proto.event_tickets.Venue.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setUid(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 4:
      var value = new io_common_localization_pb.LocalizedString;
      reader.readMessage(value,io_common_localization_pb.LocalizedString.deserializeBinaryFromReader);
      msg.setLocalizedname(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setAddress(value);
      break;
    case 6:
      var value = new io_common_localization_pb.LocalizedString;
      reader.readMessage(value,io_common_localization_pb.LocalizedString.deserializeBinaryFromReader);
      msg.setLocalizedaddress(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setTimezone(value);
      break;
    case 8:
      var value = new io_common_proximity_pb.GPSLocation;
      reader.readMessage(value,io_common_proximity_pb.GPSLocation.deserializeBinaryFromReader);
      msg.addGpscoords(value);
      break;
    case 11:
      var value = new proto.event_tickets.EventUrls;
      reader.readMessage(value,proto.event_tickets.EventUrls.deserializeBinaryFromReader);
      msg.setEventurls(value);
      break;
    case 12:
      var value = /** @type {string} */ (reader.readString());
      msg.setRoom(value);
      break;
    case 9:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setCreated(value);
      break;
    case 10:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setUpdated(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.event_tickets.Venue.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.event_tickets.Venue.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.event_tickets.Venue} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.event_tickets.Venue.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getUid();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getLocalizedname();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      io_common_localization_pb.LocalizedString.serializeBinaryToWriter
    );
  }
  f = message.getAddress();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getLocalizedaddress();
  if (f != null) {
    writer.writeMessage(
      6,
      f,
      io_common_localization_pb.LocalizedString.serializeBinaryToWriter
    );
  }
  f = message.getTimezone();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
  f = message.getGpscoordsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      8,
      f,
      io_common_proximity_pb.GPSLocation.serializeBinaryToWriter
    );
  }
  f = message.getEventurls();
  if (f != null) {
    writer.writeMessage(
      11,
      f,
      proto.event_tickets.EventUrls.serializeBinaryToWriter
    );
  }
  f = message.getRoom();
  if (f.length > 0) {
    writer.writeString(
      12,
      f
    );
  }
  f = message.getCreated();
  if (f != null) {
    writer.writeMessage(
      9,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getUpdated();
  if (f != null) {
    writer.writeMessage(
      10,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.event_tickets.Venue.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.event_tickets.Venue} returns this
 */
proto.event_tickets.Venue.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string uid = 2;
 * @return {string}
 */
proto.event_tickets.Venue.prototype.getUid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.event_tickets.Venue} returns this
 */
proto.event_tickets.Venue.prototype.setUid = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string name = 3;
 * @return {string}
 */
proto.event_tickets.Venue.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.event_tickets.Venue} returns this
 */
proto.event_tickets.Venue.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional io.LocalizedString localizedName = 4;
 * @return {?proto.io.LocalizedString}
 */
proto.event_tickets.Venue.prototype.getLocalizedname = function() {
  return /** @type{?proto.io.LocalizedString} */ (
    jspb.Message.getWrapperField(this, io_common_localization_pb.LocalizedString, 4));
};


/**
 * @param {?proto.io.LocalizedString|undefined} value
 * @return {!proto.event_tickets.Venue} returns this
*/
proto.event_tickets.Venue.prototype.setLocalizedname = function(value) {
  return jspb.Message.setWrapperField(this, 4, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.event_tickets.Venue} returns this
 */
proto.event_tickets.Venue.prototype.clearLocalizedname = function() {
  return this.setLocalizedname(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.event_tickets.Venue.prototype.hasLocalizedname = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional string address = 5;
 * @return {string}
 */
proto.event_tickets.Venue.prototype.getAddress = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.event_tickets.Venue} returns this
 */
proto.event_tickets.Venue.prototype.setAddress = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional io.LocalizedString localizedAddress = 6;
 * @return {?proto.io.LocalizedString}
 */
proto.event_tickets.Venue.prototype.getLocalizedaddress = function() {
  return /** @type{?proto.io.LocalizedString} */ (
    jspb.Message.getWrapperField(this, io_common_localization_pb.LocalizedString, 6));
};


/**
 * @param {?proto.io.LocalizedString|undefined} value
 * @return {!proto.event_tickets.Venue} returns this
*/
proto.event_tickets.Venue.prototype.setLocalizedaddress = function(value) {
  return jspb.Message.setWrapperField(this, 6, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.event_tickets.Venue} returns this
 */
proto.event_tickets.Venue.prototype.clearLocalizedaddress = function() {
  return this.setLocalizedaddress(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.event_tickets.Venue.prototype.hasLocalizedaddress = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional string timezone = 7;
 * @return {string}
 */
proto.event_tickets.Venue.prototype.getTimezone = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.event_tickets.Venue} returns this
 */
proto.event_tickets.Venue.prototype.setTimezone = function(value) {
  return jspb.Message.setProto3StringField(this, 7, value);
};


/**
 * repeated io.GPSLocation gpsCoords = 8;
 * @return {!Array<!proto.io.GPSLocation>}
 */
proto.event_tickets.Venue.prototype.getGpscoordsList = function() {
  return /** @type{!Array<!proto.io.GPSLocation>} */ (
    jspb.Message.getRepeatedWrapperField(this, io_common_proximity_pb.GPSLocation, 8));
};


/**
 * @param {!Array<!proto.io.GPSLocation>} value
 * @return {!proto.event_tickets.Venue} returns this
*/
proto.event_tickets.Venue.prototype.setGpscoordsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 8, value);
};


/**
 * @param {!proto.io.GPSLocation=} opt_value
 * @param {number=} opt_index
 * @return {!proto.io.GPSLocation}
 */
proto.event_tickets.Venue.prototype.addGpscoords = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 8, opt_value, proto.io.GPSLocation, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.event_tickets.Venue} returns this
 */
proto.event_tickets.Venue.prototype.clearGpscoordsList = function() {
  return this.setGpscoordsList([]);
};


/**
 * optional EventUrls eventUrls = 11;
 * @return {?proto.event_tickets.EventUrls}
 */
proto.event_tickets.Venue.prototype.getEventurls = function() {
  return /** @type{?proto.event_tickets.EventUrls} */ (
    jspb.Message.getWrapperField(this, proto.event_tickets.EventUrls, 11));
};


/**
 * @param {?proto.event_tickets.EventUrls|undefined} value
 * @return {!proto.event_tickets.Venue} returns this
*/
proto.event_tickets.Venue.prototype.setEventurls = function(value) {
  return jspb.Message.setWrapperField(this, 11, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.event_tickets.Venue} returns this
 */
proto.event_tickets.Venue.prototype.clearEventurls = function() {
  return this.setEventurls(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.event_tickets.Venue.prototype.hasEventurls = function() {
  return jspb.Message.getField(this, 11) != null;
};


/**
 * optional string room = 12;
 * @return {string}
 */
proto.event_tickets.Venue.prototype.getRoom = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 12, ""));
};


/**
 * @param {string} value
 * @return {!proto.event_tickets.Venue} returns this
 */
proto.event_tickets.Venue.prototype.setRoom = function(value) {
  return jspb.Message.setProto3StringField(this, 12, value);
};


/**
 * optional google.protobuf.Timestamp created = 9;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.event_tickets.Venue.prototype.getCreated = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 9));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.event_tickets.Venue} returns this
*/
proto.event_tickets.Venue.prototype.setCreated = function(value) {
  return jspb.Message.setWrapperField(this, 9, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.event_tickets.Venue} returns this
 */
proto.event_tickets.Venue.prototype.clearCreated = function() {
  return this.setCreated(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.event_tickets.Venue.prototype.hasCreated = function() {
  return jspb.Message.getField(this, 9) != null;
};


/**
 * optional google.protobuf.Timestamp updated = 10;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.event_tickets.Venue.prototype.getUpdated = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 10));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.event_tickets.Venue} returns this
*/
proto.event_tickets.Venue.prototype.setUpdated = function(value) {
  return jspb.Message.setWrapperField(this, 10, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.event_tickets.Venue} returns this
 */
proto.event_tickets.Venue.prototype.clearUpdated = function() {
  return this.setUpdated(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.event_tickets.Venue.prototype.hasUpdated = function() {
  return jspb.Message.getField(this, 10) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.event_tickets.EventUrls.prototype.toObject = function(opt_includeInstance) {
  return proto.event_tickets.EventUrls.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.event_tickets.EventUrls} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.event_tickets.EventUrls.toObject = function(includeInstance, msg) {
  var f, obj = {
    sellurl: jspb.Message.getFieldWithDefault(msg, 1, ""),
    transferurl: jspb.Message.getFieldWithDefault(msg, 2, ""),
    bagpolicyurl: jspb.Message.getFieldWithDefault(msg, 3, ""),
    orderfoodurl: jspb.Message.getFieldWithDefault(msg, 4, ""),
    merchandiseurl: jspb.Message.getFieldWithDefault(msg, 5, ""),
    transitinformationurl: jspb.Message.getFieldWithDefault(msg, 6, ""),
    parkinginformationurl: jspb.Message.getFieldWithDefault(msg, 7, ""),
    directionsinformationurl: jspb.Message.getFieldWithDefault(msg, 8, ""),
    accessibilityurl: jspb.Message.getFieldWithDefault(msg, 9, ""),
    purchaseparkingurl: jspb.Message.getFieldWithDefault(msg, 10, ""),
    addonurl: jspb.Message.getFieldWithDefault(msg, 11, ""),
    contactvenueemail: jspb.Message.getFieldWithDefault(msg, 12, ""),
    contactvenuewebsite: jspb.Message.getFieldWithDefault(msg, 13, ""),
    contactvenuephonenumber: jspb.Message.getFieldWithDefault(msg, 14, ""),
    portalurl: jspb.Message.getFieldWithDefault(msg, 15, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.event_tickets.EventUrls}
 */
proto.event_tickets.EventUrls.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.event_tickets.EventUrls;
  return proto.event_tickets.EventUrls.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.event_tickets.EventUrls} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.event_tickets.EventUrls}
 */
proto.event_tickets.EventUrls.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setSellurl(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setTransferurl(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setBagpolicyurl(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setOrderfoodurl(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setMerchandiseurl(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setTransitinformationurl(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setParkinginformationurl(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.setDirectionsinformationurl(value);
      break;
    case 9:
      var value = /** @type {string} */ (reader.readString());
      msg.setAccessibilityurl(value);
      break;
    case 10:
      var value = /** @type {string} */ (reader.readString());
      msg.setPurchaseparkingurl(value);
      break;
    case 11:
      var value = /** @type {string} */ (reader.readString());
      msg.setAddonurl(value);
      break;
    case 12:
      var value = /** @type {string} */ (reader.readString());
      msg.setContactvenueemail(value);
      break;
    case 13:
      var value = /** @type {string} */ (reader.readString());
      msg.setContactvenuewebsite(value);
      break;
    case 14:
      var value = /** @type {string} */ (reader.readString());
      msg.setContactvenuephonenumber(value);
      break;
    case 15:
      var value = /** @type {string} */ (reader.readString());
      msg.setPortalurl(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.event_tickets.EventUrls.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.event_tickets.EventUrls.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.event_tickets.EventUrls} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.event_tickets.EventUrls.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSellurl();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getTransferurl();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getBagpolicyurl();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getOrderfoodurl();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getMerchandiseurl();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getTransitinformationurl();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getParkinginformationurl();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
  f = message.getDirectionsinformationurl();
  if (f.length > 0) {
    writer.writeString(
      8,
      f
    );
  }
  f = message.getAccessibilityurl();
  if (f.length > 0) {
    writer.writeString(
      9,
      f
    );
  }
  f = message.getPurchaseparkingurl();
  if (f.length > 0) {
    writer.writeString(
      10,
      f
    );
  }
  f = message.getAddonurl();
  if (f.length > 0) {
    writer.writeString(
      11,
      f
    );
  }
  f = message.getContactvenueemail();
  if (f.length > 0) {
    writer.writeString(
      12,
      f
    );
  }
  f = message.getContactvenuewebsite();
  if (f.length > 0) {
    writer.writeString(
      13,
      f
    );
  }
  f = message.getContactvenuephonenumber();
  if (f.length > 0) {
    writer.writeString(
      14,
      f
    );
  }
  f = message.getPortalurl();
  if (f.length > 0) {
    writer.writeString(
      15,
      f
    );
  }
};


/**
 * optional string sellURL = 1;
 * @return {string}
 */
proto.event_tickets.EventUrls.prototype.getSellurl = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.event_tickets.EventUrls} returns this
 */
proto.event_tickets.EventUrls.prototype.setSellurl = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string transferURL = 2;
 * @return {string}
 */
proto.event_tickets.EventUrls.prototype.getTransferurl = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.event_tickets.EventUrls} returns this
 */
proto.event_tickets.EventUrls.prototype.setTransferurl = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string bagPolicyURL = 3;
 * @return {string}
 */
proto.event_tickets.EventUrls.prototype.getBagpolicyurl = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.event_tickets.EventUrls} returns this
 */
proto.event_tickets.EventUrls.prototype.setBagpolicyurl = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string orderFoodURL = 4;
 * @return {string}
 */
proto.event_tickets.EventUrls.prototype.getOrderfoodurl = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.event_tickets.EventUrls} returns this
 */
proto.event_tickets.EventUrls.prototype.setOrderfoodurl = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string merchandiseURL = 5;
 * @return {string}
 */
proto.event_tickets.EventUrls.prototype.getMerchandiseurl = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.event_tickets.EventUrls} returns this
 */
proto.event_tickets.EventUrls.prototype.setMerchandiseurl = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional string transitInformationURL = 6;
 * @return {string}
 */
proto.event_tickets.EventUrls.prototype.getTransitinformationurl = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.event_tickets.EventUrls} returns this
 */
proto.event_tickets.EventUrls.prototype.setTransitinformationurl = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional string parkingInformationURL = 7;
 * @return {string}
 */
proto.event_tickets.EventUrls.prototype.getParkinginformationurl = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.event_tickets.EventUrls} returns this
 */
proto.event_tickets.EventUrls.prototype.setParkinginformationurl = function(value) {
  return jspb.Message.setProto3StringField(this, 7, value);
};


/**
 * optional string directionsInformationURL = 8;
 * @return {string}
 */
proto.event_tickets.EventUrls.prototype.getDirectionsinformationurl = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, ""));
};


/**
 * @param {string} value
 * @return {!proto.event_tickets.EventUrls} returns this
 */
proto.event_tickets.EventUrls.prototype.setDirectionsinformationurl = function(value) {
  return jspb.Message.setProto3StringField(this, 8, value);
};


/**
 * optional string accessibilityURL = 9;
 * @return {string}
 */
proto.event_tickets.EventUrls.prototype.getAccessibilityurl = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 9, ""));
};


/**
 * @param {string} value
 * @return {!proto.event_tickets.EventUrls} returns this
 */
proto.event_tickets.EventUrls.prototype.setAccessibilityurl = function(value) {
  return jspb.Message.setProto3StringField(this, 9, value);
};


/**
 * optional string purchaseParkingURL = 10;
 * @return {string}
 */
proto.event_tickets.EventUrls.prototype.getPurchaseparkingurl = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 10, ""));
};


/**
 * @param {string} value
 * @return {!proto.event_tickets.EventUrls} returns this
 */
proto.event_tickets.EventUrls.prototype.setPurchaseparkingurl = function(value) {
  return jspb.Message.setProto3StringField(this, 10, value);
};


/**
 * optional string addOnURL = 11;
 * @return {string}
 */
proto.event_tickets.EventUrls.prototype.getAddonurl = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 11, ""));
};


/**
 * @param {string} value
 * @return {!proto.event_tickets.EventUrls} returns this
 */
proto.event_tickets.EventUrls.prototype.setAddonurl = function(value) {
  return jspb.Message.setProto3StringField(this, 11, value);
};


/**
 * optional string contactVenueEmail = 12;
 * @return {string}
 */
proto.event_tickets.EventUrls.prototype.getContactvenueemail = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 12, ""));
};


/**
 * @param {string} value
 * @return {!proto.event_tickets.EventUrls} returns this
 */
proto.event_tickets.EventUrls.prototype.setContactvenueemail = function(value) {
  return jspb.Message.setProto3StringField(this, 12, value);
};


/**
 * optional string contactVenueWebsite = 13;
 * @return {string}
 */
proto.event_tickets.EventUrls.prototype.getContactvenuewebsite = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 13, ""));
};


/**
 * @param {string} value
 * @return {!proto.event_tickets.EventUrls} returns this
 */
proto.event_tickets.EventUrls.prototype.setContactvenuewebsite = function(value) {
  return jspb.Message.setProto3StringField(this, 13, value);
};


/**
 * optional string contactVenuePhoneNumber = 14;
 * @return {string}
 */
proto.event_tickets.EventUrls.prototype.getContactvenuephonenumber = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 14, ""));
};


/**
 * @param {string} value
 * @return {!proto.event_tickets.EventUrls} returns this
 */
proto.event_tickets.EventUrls.prototype.setContactvenuephonenumber = function(value) {
  return jspb.Message.setProto3StringField(this, 14, value);
};


/**
 * optional string portalUrl = 15;
 * @return {string}
 */
proto.event_tickets.EventUrls.prototype.getPortalurl = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 15, ""));
};


/**
 * @param {string} value
 * @return {!proto.event_tickets.EventUrls} returns this
 */
proto.event_tickets.EventUrls.prototype.setPortalurl = function(value) {
  return jspb.Message.setProto3StringField(this, 15, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.event_tickets.VenueLimitedFieldsResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.event_tickets.VenueLimitedFieldsResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.event_tickets.VenueLimitedFieldsResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.event_tickets.VenueLimitedFieldsResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, ""),
    uid: jspb.Message.getFieldWithDefault(msg, 2, ""),
    name: jspb.Message.getFieldWithDefault(msg, 3, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.event_tickets.VenueLimitedFieldsResponse}
 */
proto.event_tickets.VenueLimitedFieldsResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.event_tickets.VenueLimitedFieldsResponse;
  return proto.event_tickets.VenueLimitedFieldsResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.event_tickets.VenueLimitedFieldsResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.event_tickets.VenueLimitedFieldsResponse}
 */
proto.event_tickets.VenueLimitedFieldsResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setUid(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.event_tickets.VenueLimitedFieldsResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.event_tickets.VenueLimitedFieldsResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.event_tickets.VenueLimitedFieldsResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.event_tickets.VenueLimitedFieldsResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getUid();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.event_tickets.VenueLimitedFieldsResponse.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.event_tickets.VenueLimitedFieldsResponse} returns this
 */
proto.event_tickets.VenueLimitedFieldsResponse.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string uid = 2;
 * @return {string}
 */
proto.event_tickets.VenueLimitedFieldsResponse.prototype.getUid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.event_tickets.VenueLimitedFieldsResponse} returns this
 */
proto.event_tickets.VenueLimitedFieldsResponse.prototype.setUid = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string name = 3;
 * @return {string}
 */
proto.event_tickets.VenueLimitedFieldsResponse.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.event_tickets.VenueLimitedFieldsResponse} returns this
 */
proto.event_tickets.VenueLimitedFieldsResponse.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


goog.object.extend(exports, proto.event_tickets);
