// source: io/event_tickets/ticket.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global = (function() {
  if (this) { return this; }
  if (typeof window !== 'undefined') { return window; }
  if (typeof global !== 'undefined') { return global; }
  if (typeof self !== 'undefined') { return self; }
  return Function('return this')();
}.call(null));

var google_protobuf_timestamp_pb = require('google-protobuf/google/protobuf/timestamp_pb.js');
goog.object.extend(proto, google_protobuf_timestamp_pb);
var io_common_localization_pb = require('../../io/common/localization_pb.js');
goog.object.extend(proto, io_common_localization_pb);
var io_common_metrics_pb = require('../../io/common/metrics_pb.js');
goog.object.extend(proto, io_common_metrics_pb);
var io_common_common_objects_pb = require('../../io/common/common_objects_pb.js');
goog.object.extend(proto, io_common_common_objects_pb);
var io_common_pass_pb = require('../../io/common/pass_pb.js');
goog.object.extend(proto, io_common_pass_pb);
var io_common_personal_pb = require('../../io/common/personal_pb.js');
goog.object.extend(proto, io_common_personal_pb);
var io_common_filter_pb = require('../../io/common/filter_pb.js');
goog.object.extend(proto, io_common_filter_pb);
var io_event_tickets_venue_pb = require('../../io/event_tickets/venue_pb.js');
goog.object.extend(proto, io_event_tickets_venue_pb);
var io_event_tickets_event_pb = require('../../io/event_tickets/event_pb.js');
goog.object.extend(proto, io_event_tickets_event_pb);
var io_event_tickets_ticket_type_pb = require('../../io/event_tickets/ticket_type_pb.js');
goog.object.extend(proto, io_event_tickets_ticket_type_pb);
var io_event_tickets_production_pb = require('../../io/event_tickets/production_pb.js');
goog.object.extend(proto, io_event_tickets_production_pb);
goog.exportSymbol('proto.event_tickets.EventFilterByVenueAndStart', null, global);
goog.exportSymbol('proto.event_tickets.EventTicketPassRequest', null, global);
goog.exportSymbol('proto.event_tickets.EventTicketPassRequest.RequestCase', null, global);
goog.exportSymbol('proto.event_tickets.EventTicketPerson', null, global);
goog.exportSymbol('proto.event_tickets.EventTicketPerson.RequestCase', null, global);
goog.exportSymbol('proto.event_tickets.FaceValue', null, global);
goog.exportSymbol('proto.event_tickets.IssueTicketRequest', null, global);
goog.exportSymbol('proto.event_tickets.IssueTicketRequest.EventinfoCase', null, global);
goog.exportSymbol('proto.event_tickets.IssueTicketResponseIds', null, global);
goog.exportSymbol('proto.event_tickets.OrderNumberRequest', null, global);
goog.exportSymbol('proto.event_tickets.RedeemByOrderNumber', null, global);
goog.exportSymbol('proto.event_tickets.RedeemTicketRequest', null, global);
goog.exportSymbol('proto.event_tickets.RedemptionDetails', null, global);
goog.exportSymbol('proto.event_tickets.Seat', null, global);
goog.exportSymbol('proto.event_tickets.Ticket', null, global);
goog.exportSymbol('proto.event_tickets.TicketId', null, global);
goog.exportSymbol('proto.event_tickets.TicketId.IdCase', null, global);
goog.exportSymbol('proto.event_tickets.TicketLimitedFields', null, global);
goog.exportSymbol('proto.event_tickets.TicketListRequest', null, global);
goog.exportSymbol('proto.event_tickets.TicketListRequest.EventCase', null, global);
goog.exportSymbol('proto.event_tickets.TicketListRequest.ProductionCase', null, global);
goog.exportSymbol('proto.event_tickets.TicketListRequest.TickettypeCase', null, global);
goog.exportSymbol('proto.event_tickets.TicketNumber', null, global);
goog.exportSymbol('proto.event_tickets.TicketNumberRequest', null, global);
goog.exportSymbol('proto.event_tickets.TicketPassBundles', null, global);
goog.exportSymbol('proto.event_tickets.TicketStatus', null, global);
goog.exportSymbol('proto.event_tickets.Tickets', null, global);
goog.exportSymbol('proto.event_tickets.ValidateDetails', null, global);
goog.exportSymbol('proto.event_tickets.ValidateTicketRequest', null, global);
goog.exportSymbol('proto.event_tickets.ValidateTicketResponse', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.event_tickets.TicketId = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.event_tickets.TicketId.oneofGroups_);
};
goog.inherits(proto.event_tickets.TicketId, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.event_tickets.TicketId.displayName = 'proto.event_tickets.TicketId';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.event_tickets.TicketNumber = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.event_tickets.TicketNumber, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.event_tickets.TicketNumber.displayName = 'proto.event_tickets.TicketNumber';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.event_tickets.Ticket = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.event_tickets.Ticket.repeatedFields_, null);
};
goog.inherits(proto.event_tickets.Ticket, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.event_tickets.Ticket.displayName = 'proto.event_tickets.Ticket';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.event_tickets.ValidateDetails = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.event_tickets.ValidateDetails, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.event_tickets.ValidateDetails.displayName = 'proto.event_tickets.ValidateDetails';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.event_tickets.RedemptionDetails = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.event_tickets.RedemptionDetails, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.event_tickets.RedemptionDetails.displayName = 'proto.event_tickets.RedemptionDetails';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.event_tickets.FaceValue = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.event_tickets.FaceValue, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.event_tickets.FaceValue.displayName = 'proto.event_tickets.FaceValue';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.event_tickets.Seat = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.event_tickets.Seat, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.event_tickets.Seat.displayName = 'proto.event_tickets.Seat';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.event_tickets.TicketListRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.event_tickets.TicketListRequest.oneofGroups_);
};
goog.inherits(proto.event_tickets.TicketListRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.event_tickets.TicketListRequest.displayName = 'proto.event_tickets.TicketListRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.event_tickets.EventFilterByVenueAndStart = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.event_tickets.EventFilterByVenueAndStart, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.event_tickets.EventFilterByVenueAndStart.displayName = 'proto.event_tickets.EventFilterByVenueAndStart';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.event_tickets.TicketNumberRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.event_tickets.TicketNumberRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.event_tickets.TicketNumberRequest.displayName = 'proto.event_tickets.TicketNumberRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.event_tickets.OrderNumberRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.event_tickets.OrderNumberRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.event_tickets.OrderNumberRequest.displayName = 'proto.event_tickets.OrderNumberRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.event_tickets.RedeemByOrderNumber = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.event_tickets.RedeemByOrderNumber, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.event_tickets.RedeemByOrderNumber.displayName = 'proto.event_tickets.RedeemByOrderNumber';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.event_tickets.Tickets = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.event_tickets.Tickets.repeatedFields_, null);
};
goog.inherits(proto.event_tickets.Tickets, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.event_tickets.Tickets.displayName = 'proto.event_tickets.Tickets';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.event_tickets.TicketPassBundles = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.event_tickets.TicketPassBundles.repeatedFields_, null);
};
goog.inherits(proto.event_tickets.TicketPassBundles, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.event_tickets.TicketPassBundles.displayName = 'proto.event_tickets.TicketPassBundles';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.event_tickets.ValidateTicketRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.event_tickets.ValidateTicketRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.event_tickets.ValidateTicketRequest.displayName = 'proto.event_tickets.ValidateTicketRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.event_tickets.ValidateTicketResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.event_tickets.ValidateTicketResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.event_tickets.ValidateTicketResponse.displayName = 'proto.event_tickets.ValidateTicketResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.event_tickets.RedeemTicketRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.event_tickets.RedeemTicketRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.event_tickets.RedeemTicketRequest.displayName = 'proto.event_tickets.RedeemTicketRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.event_tickets.TicketLimitedFields = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.event_tickets.TicketLimitedFields.repeatedFields_, null);
};
goog.inherits(proto.event_tickets.TicketLimitedFields, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.event_tickets.TicketLimitedFields.displayName = 'proto.event_tickets.TicketLimitedFields';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.event_tickets.IssueTicketRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.event_tickets.IssueTicketRequest.repeatedFields_, proto.event_tickets.IssueTicketRequest.oneofGroups_);
};
goog.inherits(proto.event_tickets.IssueTicketRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.event_tickets.IssueTicketRequest.displayName = 'proto.event_tickets.IssueTicketRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.event_tickets.IssueTicketResponseIds = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.event_tickets.IssueTicketResponseIds, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.event_tickets.IssueTicketResponseIds.displayName = 'proto.event_tickets.IssueTicketResponseIds';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.event_tickets.EventTicketPassRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.event_tickets.EventTicketPassRequest.repeatedFields_, proto.event_tickets.EventTicketPassRequest.oneofGroups_);
};
goog.inherits(proto.event_tickets.EventTicketPassRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.event_tickets.EventTicketPassRequest.displayName = 'proto.event_tickets.EventTicketPassRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.event_tickets.EventTicketPerson = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.event_tickets.EventTicketPerson.oneofGroups_);
};
goog.inherits(proto.event_tickets.EventTicketPerson, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.event_tickets.EventTicketPerson.displayName = 'proto.event_tickets.EventTicketPerson';
}

/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.event_tickets.TicketId.oneofGroups_ = [[1,2]];

/**
 * @enum {number}
 */
proto.event_tickets.TicketId.IdCase = {
  ID_NOT_SET: 0,
  TICKETID: 1,
  TICKETNUMBER: 2
};

/**
 * @return {proto.event_tickets.TicketId.IdCase}
 */
proto.event_tickets.TicketId.prototype.getIdCase = function() {
  return /** @type {proto.event_tickets.TicketId.IdCase} */(jspb.Message.computeOneofCase(this, proto.event_tickets.TicketId.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.event_tickets.TicketId.prototype.toObject = function(opt_includeInstance) {
  return proto.event_tickets.TicketId.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.event_tickets.TicketId} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.event_tickets.TicketId.toObject = function(includeInstance, msg) {
  var f, obj = {
    ticketid: jspb.Message.getFieldWithDefault(msg, 1, ""),
    ticketnumber: (f = msg.getTicketnumber()) && proto.event_tickets.TicketNumber.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.event_tickets.TicketId}
 */
proto.event_tickets.TicketId.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.event_tickets.TicketId;
  return proto.event_tickets.TicketId.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.event_tickets.TicketId} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.event_tickets.TicketId}
 */
proto.event_tickets.TicketId.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setTicketid(value);
      break;
    case 2:
      var value = new proto.event_tickets.TicketNumber;
      reader.readMessage(value,proto.event_tickets.TicketNumber.deserializeBinaryFromReader);
      msg.setTicketnumber(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.event_tickets.TicketId.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.event_tickets.TicketId.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.event_tickets.TicketId} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.event_tickets.TicketId.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {string} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getTicketnumber();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.event_tickets.TicketNumber.serializeBinaryToWriter
    );
  }
};


/**
 * optional string ticketId = 1;
 * @return {string}
 */
proto.event_tickets.TicketId.prototype.getTicketid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.event_tickets.TicketId} returns this
 */
proto.event_tickets.TicketId.prototype.setTicketid = function(value) {
  return jspb.Message.setOneofField(this, 1, proto.event_tickets.TicketId.oneofGroups_[0], value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.event_tickets.TicketId} returns this
 */
proto.event_tickets.TicketId.prototype.clearTicketid = function() {
  return jspb.Message.setOneofField(this, 1, proto.event_tickets.TicketId.oneofGroups_[0], undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.event_tickets.TicketId.prototype.hasTicketid = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional TicketNumber ticketNumber = 2;
 * @return {?proto.event_tickets.TicketNumber}
 */
proto.event_tickets.TicketId.prototype.getTicketnumber = function() {
  return /** @type{?proto.event_tickets.TicketNumber} */ (
    jspb.Message.getWrapperField(this, proto.event_tickets.TicketNumber, 2));
};


/**
 * @param {?proto.event_tickets.TicketNumber|undefined} value
 * @return {!proto.event_tickets.TicketId} returns this
*/
proto.event_tickets.TicketId.prototype.setTicketnumber = function(value) {
  return jspb.Message.setOneofWrapperField(this, 2, proto.event_tickets.TicketId.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.event_tickets.TicketId} returns this
 */
proto.event_tickets.TicketId.prototype.clearTicketnumber = function() {
  return this.setTicketnumber(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.event_tickets.TicketId.prototype.hasTicketnumber = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.event_tickets.TicketNumber.prototype.toObject = function(opt_includeInstance) {
  return proto.event_tickets.TicketNumber.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.event_tickets.TicketNumber} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.event_tickets.TicketNumber.toObject = function(includeInstance, msg) {
  var f, obj = {
    productionid: jspb.Message.getFieldWithDefault(msg, 1, ""),
    ticketnumber: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.event_tickets.TicketNumber}
 */
proto.event_tickets.TicketNumber.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.event_tickets.TicketNumber;
  return proto.event_tickets.TicketNumber.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.event_tickets.TicketNumber} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.event_tickets.TicketNumber}
 */
proto.event_tickets.TicketNumber.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setProductionid(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setTicketnumber(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.event_tickets.TicketNumber.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.event_tickets.TicketNumber.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.event_tickets.TicketNumber} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.event_tickets.TicketNumber.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getProductionid();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getTicketnumber();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional string productionId = 1;
 * @return {string}
 */
proto.event_tickets.TicketNumber.prototype.getProductionid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.event_tickets.TicketNumber} returns this
 */
proto.event_tickets.TicketNumber.prototype.setProductionid = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string ticketNumber = 2;
 * @return {string}
 */
proto.event_tickets.TicketNumber.prototype.getTicketnumber = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.event_tickets.TicketNumber} returns this
 */
proto.event_tickets.TicketNumber.prototype.setTicketnumber = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.event_tickets.Ticket.repeatedFields_ = [16];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.event_tickets.Ticket.prototype.toObject = function(opt_includeInstance) {
  return proto.event_tickets.Ticket.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.event_tickets.Ticket} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.event_tickets.Ticket.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, ""),
    ticketnumber: jspb.Message.getFieldWithDefault(msg, 2, ""),
    event: (f = msg.getEvent()) && io_event_tickets_event_pb.Event.toObject(includeInstance, f),
    tickettype: (f = msg.getTickettype()) && io_event_tickets_ticket_type_pb.TicketType.toObject(includeInstance, f),
    ordernumber: jspb.Message.getFieldWithDefault(msg, 5, ""),
    groupingid: jspb.Message.getFieldWithDefault(msg, 6, ""),
    barcodecontents: jspb.Message.getFieldWithDefault(msg, 7, ""),
    seatinfo: (f = msg.getSeatinfo()) && proto.event_tickets.Seat.toObject(includeInstance, f),
    facevalue: (f = msg.getFacevalue()) && proto.event_tickets.FaceValue.toObject(includeInstance, f),
    person: (f = msg.getPerson()) && io_common_personal_pb.Person.toObject(includeInstance, f),
    metadataMap: (f = msg.getMetadataMap()) ? f.toObject(includeInstance, undefined) : [],
    optout: jspb.Message.getFieldWithDefault(msg, 12, 0),
    status: jspb.Message.getFieldWithDefault(msg, 13, 0),
    expirydate: (f = msg.getExpirydate()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
    redemptiondetails: (f = msg.getRedemptiondetails()) && proto.event_tickets.RedemptionDetails.toObject(includeInstance, f),
    validatedetailsList: jspb.Message.toObjectList(msg.getValidatedetailsList(),
    proto.event_tickets.ValidateDetails.toObject, includeInstance),
    passoverrides: (f = msg.getPassoverrides()) && io_common_pass_pb.PassOverrides.toObject(includeInstance, f),
    passmetadata: (f = msg.getPassmetadata()) && io_common_metrics_pb.Metadata.toObject(includeInstance, f),
    created: (f = msg.getCreated()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
    updated: (f = msg.getUpdated()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.event_tickets.Ticket}
 */
proto.event_tickets.Ticket.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.event_tickets.Ticket;
  return proto.event_tickets.Ticket.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.event_tickets.Ticket} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.event_tickets.Ticket}
 */
proto.event_tickets.Ticket.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setTicketnumber(value);
      break;
    case 3:
      var value = new io_event_tickets_event_pb.Event;
      reader.readMessage(value,io_event_tickets_event_pb.Event.deserializeBinaryFromReader);
      msg.setEvent(value);
      break;
    case 4:
      var value = new io_event_tickets_ticket_type_pb.TicketType;
      reader.readMessage(value,io_event_tickets_ticket_type_pb.TicketType.deserializeBinaryFromReader);
      msg.setTickettype(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setOrdernumber(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setGroupingid(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setBarcodecontents(value);
      break;
    case 8:
      var value = new proto.event_tickets.Seat;
      reader.readMessage(value,proto.event_tickets.Seat.deserializeBinaryFromReader);
      msg.setSeatinfo(value);
      break;
    case 9:
      var value = new proto.event_tickets.FaceValue;
      reader.readMessage(value,proto.event_tickets.FaceValue.deserializeBinaryFromReader);
      msg.setFacevalue(value);
      break;
    case 10:
      var value = new io_common_personal_pb.Person;
      reader.readMessage(value,io_common_personal_pb.Person.deserializeBinaryFromReader);
      msg.setPerson(value);
      break;
    case 11:
      var value = msg.getMetadataMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readString, null, "", "");
         });
      break;
    case 12:
      var value = /** @type {!proto.io.Toggle} */ (reader.readEnum());
      msg.setOptout(value);
      break;
    case 13:
      var value = /** @type {!proto.event_tickets.TicketStatus} */ (reader.readEnum());
      msg.setStatus(value);
      break;
    case 14:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setExpirydate(value);
      break;
    case 15:
      var value = new proto.event_tickets.RedemptionDetails;
      reader.readMessage(value,proto.event_tickets.RedemptionDetails.deserializeBinaryFromReader);
      msg.setRedemptiondetails(value);
      break;
    case 16:
      var value = new proto.event_tickets.ValidateDetails;
      reader.readMessage(value,proto.event_tickets.ValidateDetails.deserializeBinaryFromReader);
      msg.addValidatedetails(value);
      break;
    case 17:
      var value = new io_common_pass_pb.PassOverrides;
      reader.readMessage(value,io_common_pass_pb.PassOverrides.deserializeBinaryFromReader);
      msg.setPassoverrides(value);
      break;
    case 18:
      var value = new io_common_metrics_pb.Metadata;
      reader.readMessage(value,io_common_metrics_pb.Metadata.deserializeBinaryFromReader);
      msg.setPassmetadata(value);
      break;
    case 19:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setCreated(value);
      break;
    case 20:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setUpdated(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.event_tickets.Ticket.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.event_tickets.Ticket.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.event_tickets.Ticket} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.event_tickets.Ticket.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getTicketnumber();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getEvent();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      io_event_tickets_event_pb.Event.serializeBinaryToWriter
    );
  }
  f = message.getTickettype();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      io_event_tickets_ticket_type_pb.TicketType.serializeBinaryToWriter
    );
  }
  f = message.getOrdernumber();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getGroupingid();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getBarcodecontents();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
  f = message.getSeatinfo();
  if (f != null) {
    writer.writeMessage(
      8,
      f,
      proto.event_tickets.Seat.serializeBinaryToWriter
    );
  }
  f = message.getFacevalue();
  if (f != null) {
    writer.writeMessage(
      9,
      f,
      proto.event_tickets.FaceValue.serializeBinaryToWriter
    );
  }
  f = message.getPerson();
  if (f != null) {
    writer.writeMessage(
      10,
      f,
      io_common_personal_pb.Person.serializeBinaryToWriter
    );
  }
  f = message.getMetadataMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(11, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeString);
  }
  f = message.getOptout();
  if (f !== 0.0) {
    writer.writeEnum(
      12,
      f
    );
  }
  f = message.getStatus();
  if (f !== 0.0) {
    writer.writeEnum(
      13,
      f
    );
  }
  f = message.getExpirydate();
  if (f != null) {
    writer.writeMessage(
      14,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getRedemptiondetails();
  if (f != null) {
    writer.writeMessage(
      15,
      f,
      proto.event_tickets.RedemptionDetails.serializeBinaryToWriter
    );
  }
  f = message.getValidatedetailsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      16,
      f,
      proto.event_tickets.ValidateDetails.serializeBinaryToWriter
    );
  }
  f = message.getPassoverrides();
  if (f != null) {
    writer.writeMessage(
      17,
      f,
      io_common_pass_pb.PassOverrides.serializeBinaryToWriter
    );
  }
  f = message.getPassmetadata();
  if (f != null) {
    writer.writeMessage(
      18,
      f,
      io_common_metrics_pb.Metadata.serializeBinaryToWriter
    );
  }
  f = message.getCreated();
  if (f != null) {
    writer.writeMessage(
      19,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getUpdated();
  if (f != null) {
    writer.writeMessage(
      20,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.event_tickets.Ticket.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.event_tickets.Ticket} returns this
 */
proto.event_tickets.Ticket.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string ticketNumber = 2;
 * @return {string}
 */
proto.event_tickets.Ticket.prototype.getTicketnumber = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.event_tickets.Ticket} returns this
 */
proto.event_tickets.Ticket.prototype.setTicketnumber = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional Event event = 3;
 * @return {?proto.event_tickets.Event}
 */
proto.event_tickets.Ticket.prototype.getEvent = function() {
  return /** @type{?proto.event_tickets.Event} */ (
    jspb.Message.getWrapperField(this, io_event_tickets_event_pb.Event, 3));
};


/**
 * @param {?proto.event_tickets.Event|undefined} value
 * @return {!proto.event_tickets.Ticket} returns this
*/
proto.event_tickets.Ticket.prototype.setEvent = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.event_tickets.Ticket} returns this
 */
proto.event_tickets.Ticket.prototype.clearEvent = function() {
  return this.setEvent(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.event_tickets.Ticket.prototype.hasEvent = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional TicketType ticketType = 4;
 * @return {?proto.event_tickets.TicketType}
 */
proto.event_tickets.Ticket.prototype.getTickettype = function() {
  return /** @type{?proto.event_tickets.TicketType} */ (
    jspb.Message.getWrapperField(this, io_event_tickets_ticket_type_pb.TicketType, 4));
};


/**
 * @param {?proto.event_tickets.TicketType|undefined} value
 * @return {!proto.event_tickets.Ticket} returns this
*/
proto.event_tickets.Ticket.prototype.setTickettype = function(value) {
  return jspb.Message.setWrapperField(this, 4, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.event_tickets.Ticket} returns this
 */
proto.event_tickets.Ticket.prototype.clearTickettype = function() {
  return this.setTickettype(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.event_tickets.Ticket.prototype.hasTickettype = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional string orderNumber = 5;
 * @return {string}
 */
proto.event_tickets.Ticket.prototype.getOrdernumber = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.event_tickets.Ticket} returns this
 */
proto.event_tickets.Ticket.prototype.setOrdernumber = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional string groupingId = 6;
 * @return {string}
 */
proto.event_tickets.Ticket.prototype.getGroupingid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.event_tickets.Ticket} returns this
 */
proto.event_tickets.Ticket.prototype.setGroupingid = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional string barcodeContents = 7;
 * @return {string}
 */
proto.event_tickets.Ticket.prototype.getBarcodecontents = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.event_tickets.Ticket} returns this
 */
proto.event_tickets.Ticket.prototype.setBarcodecontents = function(value) {
  return jspb.Message.setProto3StringField(this, 7, value);
};


/**
 * optional Seat seatInfo = 8;
 * @return {?proto.event_tickets.Seat}
 */
proto.event_tickets.Ticket.prototype.getSeatinfo = function() {
  return /** @type{?proto.event_tickets.Seat} */ (
    jspb.Message.getWrapperField(this, proto.event_tickets.Seat, 8));
};


/**
 * @param {?proto.event_tickets.Seat|undefined} value
 * @return {!proto.event_tickets.Ticket} returns this
*/
proto.event_tickets.Ticket.prototype.setSeatinfo = function(value) {
  return jspb.Message.setWrapperField(this, 8, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.event_tickets.Ticket} returns this
 */
proto.event_tickets.Ticket.prototype.clearSeatinfo = function() {
  return this.setSeatinfo(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.event_tickets.Ticket.prototype.hasSeatinfo = function() {
  return jspb.Message.getField(this, 8) != null;
};


/**
 * optional FaceValue faceValue = 9;
 * @return {?proto.event_tickets.FaceValue}
 */
proto.event_tickets.Ticket.prototype.getFacevalue = function() {
  return /** @type{?proto.event_tickets.FaceValue} */ (
    jspb.Message.getWrapperField(this, proto.event_tickets.FaceValue, 9));
};


/**
 * @param {?proto.event_tickets.FaceValue|undefined} value
 * @return {!proto.event_tickets.Ticket} returns this
*/
proto.event_tickets.Ticket.prototype.setFacevalue = function(value) {
  return jspb.Message.setWrapperField(this, 9, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.event_tickets.Ticket} returns this
 */
proto.event_tickets.Ticket.prototype.clearFacevalue = function() {
  return this.setFacevalue(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.event_tickets.Ticket.prototype.hasFacevalue = function() {
  return jspb.Message.getField(this, 9) != null;
};


/**
 * optional io.Person person = 10;
 * @return {?proto.io.Person}
 */
proto.event_tickets.Ticket.prototype.getPerson = function() {
  return /** @type{?proto.io.Person} */ (
    jspb.Message.getWrapperField(this, io_common_personal_pb.Person, 10));
};


/**
 * @param {?proto.io.Person|undefined} value
 * @return {!proto.event_tickets.Ticket} returns this
*/
proto.event_tickets.Ticket.prototype.setPerson = function(value) {
  return jspb.Message.setWrapperField(this, 10, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.event_tickets.Ticket} returns this
 */
proto.event_tickets.Ticket.prototype.clearPerson = function() {
  return this.setPerson(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.event_tickets.Ticket.prototype.hasPerson = function() {
  return jspb.Message.getField(this, 10) != null;
};


/**
 * map<string, string> metaData = 11;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<string,string>}
 */
proto.event_tickets.Ticket.prototype.getMetadataMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<string,string>} */ (
      jspb.Message.getMapField(this, 11, opt_noLazyCreate,
      null));
};


/**
 * Clears values from the map. The map will be non-null.
 * @return {!proto.event_tickets.Ticket} returns this
 */
proto.event_tickets.Ticket.prototype.clearMetadataMap = function() {
  this.getMetadataMap().clear();
  return this;};


/**
 * optional io.Toggle optOut = 12;
 * @return {!proto.io.Toggle}
 */
proto.event_tickets.Ticket.prototype.getOptout = function() {
  return /** @type {!proto.io.Toggle} */ (jspb.Message.getFieldWithDefault(this, 12, 0));
};


/**
 * @param {!proto.io.Toggle} value
 * @return {!proto.event_tickets.Ticket} returns this
 */
proto.event_tickets.Ticket.prototype.setOptout = function(value) {
  return jspb.Message.setProto3EnumField(this, 12, value);
};


/**
 * optional TicketStatus status = 13;
 * @return {!proto.event_tickets.TicketStatus}
 */
proto.event_tickets.Ticket.prototype.getStatus = function() {
  return /** @type {!proto.event_tickets.TicketStatus} */ (jspb.Message.getFieldWithDefault(this, 13, 0));
};


/**
 * @param {!proto.event_tickets.TicketStatus} value
 * @return {!proto.event_tickets.Ticket} returns this
 */
proto.event_tickets.Ticket.prototype.setStatus = function(value) {
  return jspb.Message.setProto3EnumField(this, 13, value);
};


/**
 * optional google.protobuf.Timestamp expiryDate = 14;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.event_tickets.Ticket.prototype.getExpirydate = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 14));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.event_tickets.Ticket} returns this
*/
proto.event_tickets.Ticket.prototype.setExpirydate = function(value) {
  return jspb.Message.setWrapperField(this, 14, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.event_tickets.Ticket} returns this
 */
proto.event_tickets.Ticket.prototype.clearExpirydate = function() {
  return this.setExpirydate(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.event_tickets.Ticket.prototype.hasExpirydate = function() {
  return jspb.Message.getField(this, 14) != null;
};


/**
 * optional RedemptionDetails redemptionDetails = 15;
 * @return {?proto.event_tickets.RedemptionDetails}
 */
proto.event_tickets.Ticket.prototype.getRedemptiondetails = function() {
  return /** @type{?proto.event_tickets.RedemptionDetails} */ (
    jspb.Message.getWrapperField(this, proto.event_tickets.RedemptionDetails, 15));
};


/**
 * @param {?proto.event_tickets.RedemptionDetails|undefined} value
 * @return {!proto.event_tickets.Ticket} returns this
*/
proto.event_tickets.Ticket.prototype.setRedemptiondetails = function(value) {
  return jspb.Message.setWrapperField(this, 15, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.event_tickets.Ticket} returns this
 */
proto.event_tickets.Ticket.prototype.clearRedemptiondetails = function() {
  return this.setRedemptiondetails(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.event_tickets.Ticket.prototype.hasRedemptiondetails = function() {
  return jspb.Message.getField(this, 15) != null;
};


/**
 * repeated ValidateDetails validateDetails = 16;
 * @return {!Array<!proto.event_tickets.ValidateDetails>}
 */
proto.event_tickets.Ticket.prototype.getValidatedetailsList = function() {
  return /** @type{!Array<!proto.event_tickets.ValidateDetails>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.event_tickets.ValidateDetails, 16));
};


/**
 * @param {!Array<!proto.event_tickets.ValidateDetails>} value
 * @return {!proto.event_tickets.Ticket} returns this
*/
proto.event_tickets.Ticket.prototype.setValidatedetailsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 16, value);
};


/**
 * @param {!proto.event_tickets.ValidateDetails=} opt_value
 * @param {number=} opt_index
 * @return {!proto.event_tickets.ValidateDetails}
 */
proto.event_tickets.Ticket.prototype.addValidatedetails = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 16, opt_value, proto.event_tickets.ValidateDetails, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.event_tickets.Ticket} returns this
 */
proto.event_tickets.Ticket.prototype.clearValidatedetailsList = function() {
  return this.setValidatedetailsList([]);
};


/**
 * optional io.PassOverrides passOverrides = 17;
 * @return {?proto.io.PassOverrides}
 */
proto.event_tickets.Ticket.prototype.getPassoverrides = function() {
  return /** @type{?proto.io.PassOverrides} */ (
    jspb.Message.getWrapperField(this, io_common_pass_pb.PassOverrides, 17));
};


/**
 * @param {?proto.io.PassOverrides|undefined} value
 * @return {!proto.event_tickets.Ticket} returns this
*/
proto.event_tickets.Ticket.prototype.setPassoverrides = function(value) {
  return jspb.Message.setWrapperField(this, 17, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.event_tickets.Ticket} returns this
 */
proto.event_tickets.Ticket.prototype.clearPassoverrides = function() {
  return this.setPassoverrides(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.event_tickets.Ticket.prototype.hasPassoverrides = function() {
  return jspb.Message.getField(this, 17) != null;
};


/**
 * optional io.Metadata passMetaData = 18;
 * @return {?proto.io.Metadata}
 */
proto.event_tickets.Ticket.prototype.getPassmetadata = function() {
  return /** @type{?proto.io.Metadata} */ (
    jspb.Message.getWrapperField(this, io_common_metrics_pb.Metadata, 18));
};


/**
 * @param {?proto.io.Metadata|undefined} value
 * @return {!proto.event_tickets.Ticket} returns this
*/
proto.event_tickets.Ticket.prototype.setPassmetadata = function(value) {
  return jspb.Message.setWrapperField(this, 18, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.event_tickets.Ticket} returns this
 */
proto.event_tickets.Ticket.prototype.clearPassmetadata = function() {
  return this.setPassmetadata(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.event_tickets.Ticket.prototype.hasPassmetadata = function() {
  return jspb.Message.getField(this, 18) != null;
};


/**
 * optional google.protobuf.Timestamp created = 19;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.event_tickets.Ticket.prototype.getCreated = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 19));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.event_tickets.Ticket} returns this
*/
proto.event_tickets.Ticket.prototype.setCreated = function(value) {
  return jspb.Message.setWrapperField(this, 19, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.event_tickets.Ticket} returns this
 */
proto.event_tickets.Ticket.prototype.clearCreated = function() {
  return this.setCreated(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.event_tickets.Ticket.prototype.hasCreated = function() {
  return jspb.Message.getField(this, 19) != null;
};


/**
 * optional google.protobuf.Timestamp updated = 20;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.event_tickets.Ticket.prototype.getUpdated = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 20));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.event_tickets.Ticket} returns this
*/
proto.event_tickets.Ticket.prototype.setUpdated = function(value) {
  return jspb.Message.setWrapperField(this, 20, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.event_tickets.Ticket} returns this
 */
proto.event_tickets.Ticket.prototype.clearUpdated = function() {
  return this.setUpdated(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.event_tickets.Ticket.prototype.hasUpdated = function() {
  return jspb.Message.getField(this, 20) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.event_tickets.ValidateDetails.prototype.toObject = function(opt_includeInstance) {
  return proto.event_tickets.ValidateDetails.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.event_tickets.ValidateDetails} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.event_tickets.ValidateDetails.toObject = function(includeInstance, msg) {
  var f, obj = {
    validatedate: (f = msg.getValidatedate()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
    lat: jspb.Message.getFloatingPointFieldWithDefault(msg, 2, 0.0),
    lon: jspb.Message.getFloatingPointFieldWithDefault(msg, 3, 0.0),
    alt: jspb.Message.getFieldWithDefault(msg, 4, 0),
    validatesource: jspb.Message.getFieldWithDefault(msg, 6, ""),
    validatereference: jspb.Message.getFieldWithDefault(msg, 7, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.event_tickets.ValidateDetails}
 */
proto.event_tickets.ValidateDetails.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.event_tickets.ValidateDetails;
  return proto.event_tickets.ValidateDetails.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.event_tickets.ValidateDetails} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.event_tickets.ValidateDetails}
 */
proto.event_tickets.ValidateDetails.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setValidatedate(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setLat(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setLon(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setAlt(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setValidatesource(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setValidatereference(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.event_tickets.ValidateDetails.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.event_tickets.ValidateDetails.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.event_tickets.ValidateDetails} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.event_tickets.ValidateDetails.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getValidatedate();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getLat();
  if (f !== 0.0) {
    writer.writeDouble(
      2,
      f
    );
  }
  f = message.getLon();
  if (f !== 0.0) {
    writer.writeDouble(
      3,
      f
    );
  }
  f = message.getAlt();
  if (f !== 0) {
    writer.writeInt32(
      4,
      f
    );
  }
  f = message.getValidatesource();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getValidatereference();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
};


/**
 * optional google.protobuf.Timestamp validateDate = 1;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.event_tickets.ValidateDetails.prototype.getValidatedate = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 1));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.event_tickets.ValidateDetails} returns this
*/
proto.event_tickets.ValidateDetails.prototype.setValidatedate = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.event_tickets.ValidateDetails} returns this
 */
proto.event_tickets.ValidateDetails.prototype.clearValidatedate = function() {
  return this.setValidatedate(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.event_tickets.ValidateDetails.prototype.hasValidatedate = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional double lat = 2;
 * @return {number}
 */
proto.event_tickets.ValidateDetails.prototype.getLat = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 2, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.event_tickets.ValidateDetails} returns this
 */
proto.event_tickets.ValidateDetails.prototype.setLat = function(value) {
  return jspb.Message.setProto3FloatField(this, 2, value);
};


/**
 * optional double lon = 3;
 * @return {number}
 */
proto.event_tickets.ValidateDetails.prototype.getLon = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 3, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.event_tickets.ValidateDetails} returns this
 */
proto.event_tickets.ValidateDetails.prototype.setLon = function(value) {
  return jspb.Message.setProto3FloatField(this, 3, value);
};


/**
 * optional int32 alt = 4;
 * @return {number}
 */
proto.event_tickets.ValidateDetails.prototype.getAlt = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.event_tickets.ValidateDetails} returns this
 */
proto.event_tickets.ValidateDetails.prototype.setAlt = function(value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};


/**
 * optional string validateSource = 6;
 * @return {string}
 */
proto.event_tickets.ValidateDetails.prototype.getValidatesource = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.event_tickets.ValidateDetails} returns this
 */
proto.event_tickets.ValidateDetails.prototype.setValidatesource = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional string validateReference = 7;
 * @return {string}
 */
proto.event_tickets.ValidateDetails.prototype.getValidatereference = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.event_tickets.ValidateDetails} returns this
 */
proto.event_tickets.ValidateDetails.prototype.setValidatereference = function(value) {
  return jspb.Message.setProto3StringField(this, 7, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.event_tickets.RedemptionDetails.prototype.toObject = function(opt_includeInstance) {
  return proto.event_tickets.RedemptionDetails.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.event_tickets.RedemptionDetails} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.event_tickets.RedemptionDetails.toObject = function(includeInstance, msg) {
  var f, obj = {
    redemptiondate: (f = msg.getRedemptiondate()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
    lat: jspb.Message.getFloatingPointFieldWithDefault(msg, 2, 0.0),
    lon: jspb.Message.getFloatingPointFieldWithDefault(msg, 3, 0.0),
    alt: jspb.Message.getFieldWithDefault(msg, 4, 0),
    redemptionsource: jspb.Message.getFieldWithDefault(msg, 6, ""),
    redemptionreference: jspb.Message.getFieldWithDefault(msg, 7, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.event_tickets.RedemptionDetails}
 */
proto.event_tickets.RedemptionDetails.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.event_tickets.RedemptionDetails;
  return proto.event_tickets.RedemptionDetails.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.event_tickets.RedemptionDetails} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.event_tickets.RedemptionDetails}
 */
proto.event_tickets.RedemptionDetails.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setRedemptiondate(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setLat(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setLon(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setAlt(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setRedemptionsource(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setRedemptionreference(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.event_tickets.RedemptionDetails.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.event_tickets.RedemptionDetails.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.event_tickets.RedemptionDetails} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.event_tickets.RedemptionDetails.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getRedemptiondate();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getLat();
  if (f !== 0.0) {
    writer.writeDouble(
      2,
      f
    );
  }
  f = message.getLon();
  if (f !== 0.0) {
    writer.writeDouble(
      3,
      f
    );
  }
  f = message.getAlt();
  if (f !== 0) {
    writer.writeInt32(
      4,
      f
    );
  }
  f = message.getRedemptionsource();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getRedemptionreference();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
};


/**
 * optional google.protobuf.Timestamp redemptionDate = 1;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.event_tickets.RedemptionDetails.prototype.getRedemptiondate = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 1));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.event_tickets.RedemptionDetails} returns this
*/
proto.event_tickets.RedemptionDetails.prototype.setRedemptiondate = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.event_tickets.RedemptionDetails} returns this
 */
proto.event_tickets.RedemptionDetails.prototype.clearRedemptiondate = function() {
  return this.setRedemptiondate(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.event_tickets.RedemptionDetails.prototype.hasRedemptiondate = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional double lat = 2;
 * @return {number}
 */
proto.event_tickets.RedemptionDetails.prototype.getLat = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 2, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.event_tickets.RedemptionDetails} returns this
 */
proto.event_tickets.RedemptionDetails.prototype.setLat = function(value) {
  return jspb.Message.setProto3FloatField(this, 2, value);
};


/**
 * optional double lon = 3;
 * @return {number}
 */
proto.event_tickets.RedemptionDetails.prototype.getLon = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 3, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.event_tickets.RedemptionDetails} returns this
 */
proto.event_tickets.RedemptionDetails.prototype.setLon = function(value) {
  return jspb.Message.setProto3FloatField(this, 3, value);
};


/**
 * optional int32 alt = 4;
 * @return {number}
 */
proto.event_tickets.RedemptionDetails.prototype.getAlt = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.event_tickets.RedemptionDetails} returns this
 */
proto.event_tickets.RedemptionDetails.prototype.setAlt = function(value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};


/**
 * optional string redemptionSource = 6;
 * @return {string}
 */
proto.event_tickets.RedemptionDetails.prototype.getRedemptionsource = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.event_tickets.RedemptionDetails} returns this
 */
proto.event_tickets.RedemptionDetails.prototype.setRedemptionsource = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional string redemptionReference = 7;
 * @return {string}
 */
proto.event_tickets.RedemptionDetails.prototype.getRedemptionreference = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.event_tickets.RedemptionDetails} returns this
 */
proto.event_tickets.RedemptionDetails.prototype.setRedemptionreference = function(value) {
  return jspb.Message.setProto3StringField(this, 7, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.event_tickets.FaceValue.prototype.toObject = function(opt_includeInstance) {
  return proto.event_tickets.FaceValue.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.event_tickets.FaceValue} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.event_tickets.FaceValue.toObject = function(includeInstance, msg) {
  var f, obj = {
    amount: jspb.Message.getFloatingPointFieldWithDefault(msg, 1, 0.0),
    currency: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.event_tickets.FaceValue}
 */
proto.event_tickets.FaceValue.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.event_tickets.FaceValue;
  return proto.event_tickets.FaceValue.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.event_tickets.FaceValue} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.event_tickets.FaceValue}
 */
proto.event_tickets.FaceValue.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setAmount(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setCurrency(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.event_tickets.FaceValue.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.event_tickets.FaceValue.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.event_tickets.FaceValue} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.event_tickets.FaceValue.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getAmount();
  if (f !== 0.0) {
    writer.writeFloat(
      1,
      f
    );
  }
  f = message.getCurrency();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional float amount = 1;
 * @return {number}
 */
proto.event_tickets.FaceValue.prototype.getAmount = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 1, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.event_tickets.FaceValue} returns this
 */
proto.event_tickets.FaceValue.prototype.setAmount = function(value) {
  return jspb.Message.setProto3FloatField(this, 1, value);
};


/**
 * optional string currency = 2;
 * @return {string}
 */
proto.event_tickets.FaceValue.prototype.getCurrency = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.event_tickets.FaceValue} returns this
 */
proto.event_tickets.FaceValue.prototype.setCurrency = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.event_tickets.Seat.prototype.toObject = function(opt_includeInstance) {
  return proto.event_tickets.Seat.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.event_tickets.Seat} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.event_tickets.Seat.toObject = function(includeInstance, msg) {
  var f, obj = {
    seat: jspb.Message.getFieldWithDefault(msg, 1, ""),
    localizedseat: (f = msg.getLocalizedseat()) && io_common_localization_pb.LocalizedString.toObject(includeInstance, f),
    row: jspb.Message.getFieldWithDefault(msg, 3, ""),
    localizedrow: (f = msg.getLocalizedrow()) && io_common_localization_pb.LocalizedString.toObject(includeInstance, f),
    section: jspb.Message.getFieldWithDefault(msg, 5, ""),
    localizedsection: (f = msg.getLocalizedsection()) && io_common_localization_pb.LocalizedString.toObject(includeInstance, f),
    gate: jspb.Message.getFieldWithDefault(msg, 7, ""),
    localizedgate: (f = msg.getLocalizedgate()) && io_common_localization_pb.LocalizedString.toObject(includeInstance, f),
    identifier: jspb.Message.getFieldWithDefault(msg, 9, ""),
    localizedidentifier: (f = msg.getLocalizedidentifier()) && io_common_localization_pb.LocalizedString.toObject(includeInstance, f),
    description: jspb.Message.getFieldWithDefault(msg, 11, ""),
    localizeddescription: (f = msg.getLocalizeddescription()) && io_common_localization_pb.LocalizedString.toObject(includeInstance, f),
    type: jspb.Message.getFieldWithDefault(msg, 13, ""),
    localizedtype: (f = msg.getLocalizedtype()) && io_common_localization_pb.LocalizedString.toObject(includeInstance, f),
    level: jspb.Message.getFieldWithDefault(msg, 15, ""),
    localizedlevel: (f = msg.getLocalizedlevel()) && io_common_localization_pb.LocalizedString.toObject(includeInstance, f),
    aisle: jspb.Message.getFieldWithDefault(msg, 17, ""),
    localizedaisle: (f = msg.getLocalizedaisle()) && io_common_localization_pb.LocalizedString.toObject(includeInstance, f),
    door: jspb.Message.getFieldWithDefault(msg, 19, ""),
    localizeddoor: (f = msg.getLocalizeddoor()) && io_common_localization_pb.LocalizedString.toObject(includeInstance, f),
    sectioncolor: jspb.Message.getFieldWithDefault(msg, 21, ""),
    portalurl: jspb.Message.getFieldWithDefault(msg, 22, ""),
    localizedportalurl: (f = msg.getLocalizedportalurl()) && io_common_localization_pb.LocalizedString.toObject(includeInstance, f),
    venueentrance: jspb.Message.getFieldWithDefault(msg, 24, ""),
    localizedvenueentrance: (f = msg.getLocalizedvenueentrance()) && io_common_localization_pb.LocalizedString.toObject(includeInstance, f),
    admissionlevel: jspb.Message.getFieldWithDefault(msg, 26, ""),
    localizedadmissionlevel: (f = msg.getLocalizedadmissionlevel()) && io_common_localization_pb.LocalizedString.toObject(includeInstance, f),
    admissionlevelabbreviation: jspb.Message.getFieldWithDefault(msg, 28, ""),
    localizedadmissionlevelabbreviation: (f = msg.getLocalizedadmissionlevelabbreviation()) && io_common_localization_pb.LocalizedString.toObject(includeInstance, f),
    entrancedescription: jspb.Message.getFieldWithDefault(msg, 30, ""),
    localizedentrancedescription: (f = msg.getLocalizedentrancedescription()) && io_common_localization_pb.LocalizedString.toObject(includeInstance, f),
    room: jspb.Message.getFieldWithDefault(msg, 32, ""),
    localizedroom: (f = msg.getLocalizedroom()) && io_common_localization_pb.LocalizedString.toObject(includeInstance, f),
    additionalticketattributes: jspb.Message.getFieldWithDefault(msg, 34, ""),
    localizedadditionalticketattributes: (f = msg.getLocalizedadditionalticketattributes()) && io_common_localization_pb.LocalizedString.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.event_tickets.Seat}
 */
proto.event_tickets.Seat.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.event_tickets.Seat;
  return proto.event_tickets.Seat.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.event_tickets.Seat} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.event_tickets.Seat}
 */
proto.event_tickets.Seat.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setSeat(value);
      break;
    case 2:
      var value = new io_common_localization_pb.LocalizedString;
      reader.readMessage(value,io_common_localization_pb.LocalizedString.deserializeBinaryFromReader);
      msg.setLocalizedseat(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setRow(value);
      break;
    case 4:
      var value = new io_common_localization_pb.LocalizedString;
      reader.readMessage(value,io_common_localization_pb.LocalizedString.deserializeBinaryFromReader);
      msg.setLocalizedrow(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setSection(value);
      break;
    case 6:
      var value = new io_common_localization_pb.LocalizedString;
      reader.readMessage(value,io_common_localization_pb.LocalizedString.deserializeBinaryFromReader);
      msg.setLocalizedsection(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setGate(value);
      break;
    case 8:
      var value = new io_common_localization_pb.LocalizedString;
      reader.readMessage(value,io_common_localization_pb.LocalizedString.deserializeBinaryFromReader);
      msg.setLocalizedgate(value);
      break;
    case 9:
      var value = /** @type {string} */ (reader.readString());
      msg.setIdentifier(value);
      break;
    case 10:
      var value = new io_common_localization_pb.LocalizedString;
      reader.readMessage(value,io_common_localization_pb.LocalizedString.deserializeBinaryFromReader);
      msg.setLocalizedidentifier(value);
      break;
    case 11:
      var value = /** @type {string} */ (reader.readString());
      msg.setDescription(value);
      break;
    case 12:
      var value = new io_common_localization_pb.LocalizedString;
      reader.readMessage(value,io_common_localization_pb.LocalizedString.deserializeBinaryFromReader);
      msg.setLocalizeddescription(value);
      break;
    case 13:
      var value = /** @type {string} */ (reader.readString());
      msg.setType(value);
      break;
    case 14:
      var value = new io_common_localization_pb.LocalizedString;
      reader.readMessage(value,io_common_localization_pb.LocalizedString.deserializeBinaryFromReader);
      msg.setLocalizedtype(value);
      break;
    case 15:
      var value = /** @type {string} */ (reader.readString());
      msg.setLevel(value);
      break;
    case 16:
      var value = new io_common_localization_pb.LocalizedString;
      reader.readMessage(value,io_common_localization_pb.LocalizedString.deserializeBinaryFromReader);
      msg.setLocalizedlevel(value);
      break;
    case 17:
      var value = /** @type {string} */ (reader.readString());
      msg.setAisle(value);
      break;
    case 18:
      var value = new io_common_localization_pb.LocalizedString;
      reader.readMessage(value,io_common_localization_pb.LocalizedString.deserializeBinaryFromReader);
      msg.setLocalizedaisle(value);
      break;
    case 19:
      var value = /** @type {string} */ (reader.readString());
      msg.setDoor(value);
      break;
    case 20:
      var value = new io_common_localization_pb.LocalizedString;
      reader.readMessage(value,io_common_localization_pb.LocalizedString.deserializeBinaryFromReader);
      msg.setLocalizeddoor(value);
      break;
    case 21:
      var value = /** @type {string} */ (reader.readString());
      msg.setSectioncolor(value);
      break;
    case 22:
      var value = /** @type {string} */ (reader.readString());
      msg.setPortalurl(value);
      break;
    case 23:
      var value = new io_common_localization_pb.LocalizedString;
      reader.readMessage(value,io_common_localization_pb.LocalizedString.deserializeBinaryFromReader);
      msg.setLocalizedportalurl(value);
      break;
    case 24:
      var value = /** @type {string} */ (reader.readString());
      msg.setVenueentrance(value);
      break;
    case 25:
      var value = new io_common_localization_pb.LocalizedString;
      reader.readMessage(value,io_common_localization_pb.LocalizedString.deserializeBinaryFromReader);
      msg.setLocalizedvenueentrance(value);
      break;
    case 26:
      var value = /** @type {string} */ (reader.readString());
      msg.setAdmissionlevel(value);
      break;
    case 27:
      var value = new io_common_localization_pb.LocalizedString;
      reader.readMessage(value,io_common_localization_pb.LocalizedString.deserializeBinaryFromReader);
      msg.setLocalizedadmissionlevel(value);
      break;
    case 28:
      var value = /** @type {string} */ (reader.readString());
      msg.setAdmissionlevelabbreviation(value);
      break;
    case 29:
      var value = new io_common_localization_pb.LocalizedString;
      reader.readMessage(value,io_common_localization_pb.LocalizedString.deserializeBinaryFromReader);
      msg.setLocalizedadmissionlevelabbreviation(value);
      break;
    case 30:
      var value = /** @type {string} */ (reader.readString());
      msg.setEntrancedescription(value);
      break;
    case 31:
      var value = new io_common_localization_pb.LocalizedString;
      reader.readMessage(value,io_common_localization_pb.LocalizedString.deserializeBinaryFromReader);
      msg.setLocalizedentrancedescription(value);
      break;
    case 32:
      var value = /** @type {string} */ (reader.readString());
      msg.setRoom(value);
      break;
    case 33:
      var value = new io_common_localization_pb.LocalizedString;
      reader.readMessage(value,io_common_localization_pb.LocalizedString.deserializeBinaryFromReader);
      msg.setLocalizedroom(value);
      break;
    case 34:
      var value = /** @type {string} */ (reader.readString());
      msg.setAdditionalticketattributes(value);
      break;
    case 35:
      var value = new io_common_localization_pb.LocalizedString;
      reader.readMessage(value,io_common_localization_pb.LocalizedString.deserializeBinaryFromReader);
      msg.setLocalizedadditionalticketattributes(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.event_tickets.Seat.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.event_tickets.Seat.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.event_tickets.Seat} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.event_tickets.Seat.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSeat();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getLocalizedseat();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      io_common_localization_pb.LocalizedString.serializeBinaryToWriter
    );
  }
  f = message.getRow();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getLocalizedrow();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      io_common_localization_pb.LocalizedString.serializeBinaryToWriter
    );
  }
  f = message.getSection();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getLocalizedsection();
  if (f != null) {
    writer.writeMessage(
      6,
      f,
      io_common_localization_pb.LocalizedString.serializeBinaryToWriter
    );
  }
  f = message.getGate();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
  f = message.getLocalizedgate();
  if (f != null) {
    writer.writeMessage(
      8,
      f,
      io_common_localization_pb.LocalizedString.serializeBinaryToWriter
    );
  }
  f = message.getIdentifier();
  if (f.length > 0) {
    writer.writeString(
      9,
      f
    );
  }
  f = message.getLocalizedidentifier();
  if (f != null) {
    writer.writeMessage(
      10,
      f,
      io_common_localization_pb.LocalizedString.serializeBinaryToWriter
    );
  }
  f = message.getDescription();
  if (f.length > 0) {
    writer.writeString(
      11,
      f
    );
  }
  f = message.getLocalizeddescription();
  if (f != null) {
    writer.writeMessage(
      12,
      f,
      io_common_localization_pb.LocalizedString.serializeBinaryToWriter
    );
  }
  f = message.getType();
  if (f.length > 0) {
    writer.writeString(
      13,
      f
    );
  }
  f = message.getLocalizedtype();
  if (f != null) {
    writer.writeMessage(
      14,
      f,
      io_common_localization_pb.LocalizedString.serializeBinaryToWriter
    );
  }
  f = message.getLevel();
  if (f.length > 0) {
    writer.writeString(
      15,
      f
    );
  }
  f = message.getLocalizedlevel();
  if (f != null) {
    writer.writeMessage(
      16,
      f,
      io_common_localization_pb.LocalizedString.serializeBinaryToWriter
    );
  }
  f = message.getAisle();
  if (f.length > 0) {
    writer.writeString(
      17,
      f
    );
  }
  f = message.getLocalizedaisle();
  if (f != null) {
    writer.writeMessage(
      18,
      f,
      io_common_localization_pb.LocalizedString.serializeBinaryToWriter
    );
  }
  f = message.getDoor();
  if (f.length > 0) {
    writer.writeString(
      19,
      f
    );
  }
  f = message.getLocalizeddoor();
  if (f != null) {
    writer.writeMessage(
      20,
      f,
      io_common_localization_pb.LocalizedString.serializeBinaryToWriter
    );
  }
  f = message.getSectioncolor();
  if (f.length > 0) {
    writer.writeString(
      21,
      f
    );
  }
  f = message.getPortalurl();
  if (f.length > 0) {
    writer.writeString(
      22,
      f
    );
  }
  f = message.getLocalizedportalurl();
  if (f != null) {
    writer.writeMessage(
      23,
      f,
      io_common_localization_pb.LocalizedString.serializeBinaryToWriter
    );
  }
  f = message.getVenueentrance();
  if (f.length > 0) {
    writer.writeString(
      24,
      f
    );
  }
  f = message.getLocalizedvenueentrance();
  if (f != null) {
    writer.writeMessage(
      25,
      f,
      io_common_localization_pb.LocalizedString.serializeBinaryToWriter
    );
  }
  f = message.getAdmissionlevel();
  if (f.length > 0) {
    writer.writeString(
      26,
      f
    );
  }
  f = message.getLocalizedadmissionlevel();
  if (f != null) {
    writer.writeMessage(
      27,
      f,
      io_common_localization_pb.LocalizedString.serializeBinaryToWriter
    );
  }
  f = message.getAdmissionlevelabbreviation();
  if (f.length > 0) {
    writer.writeString(
      28,
      f
    );
  }
  f = message.getLocalizedadmissionlevelabbreviation();
  if (f != null) {
    writer.writeMessage(
      29,
      f,
      io_common_localization_pb.LocalizedString.serializeBinaryToWriter
    );
  }
  f = message.getEntrancedescription();
  if (f.length > 0) {
    writer.writeString(
      30,
      f
    );
  }
  f = message.getLocalizedentrancedescription();
  if (f != null) {
    writer.writeMessage(
      31,
      f,
      io_common_localization_pb.LocalizedString.serializeBinaryToWriter
    );
  }
  f = message.getRoom();
  if (f.length > 0) {
    writer.writeString(
      32,
      f
    );
  }
  f = message.getLocalizedroom();
  if (f != null) {
    writer.writeMessage(
      33,
      f,
      io_common_localization_pb.LocalizedString.serializeBinaryToWriter
    );
  }
  f = message.getAdditionalticketattributes();
  if (f.length > 0) {
    writer.writeString(
      34,
      f
    );
  }
  f = message.getLocalizedadditionalticketattributes();
  if (f != null) {
    writer.writeMessage(
      35,
      f,
      io_common_localization_pb.LocalizedString.serializeBinaryToWriter
    );
  }
};


/**
 * optional string seat = 1;
 * @return {string}
 */
proto.event_tickets.Seat.prototype.getSeat = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.event_tickets.Seat} returns this
 */
proto.event_tickets.Seat.prototype.setSeat = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional io.LocalizedString localizedSeat = 2;
 * @return {?proto.io.LocalizedString}
 */
proto.event_tickets.Seat.prototype.getLocalizedseat = function() {
  return /** @type{?proto.io.LocalizedString} */ (
    jspb.Message.getWrapperField(this, io_common_localization_pb.LocalizedString, 2));
};


/**
 * @param {?proto.io.LocalizedString|undefined} value
 * @return {!proto.event_tickets.Seat} returns this
*/
proto.event_tickets.Seat.prototype.setLocalizedseat = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.event_tickets.Seat} returns this
 */
proto.event_tickets.Seat.prototype.clearLocalizedseat = function() {
  return this.setLocalizedseat(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.event_tickets.Seat.prototype.hasLocalizedseat = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional string row = 3;
 * @return {string}
 */
proto.event_tickets.Seat.prototype.getRow = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.event_tickets.Seat} returns this
 */
proto.event_tickets.Seat.prototype.setRow = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional io.LocalizedString localizedRow = 4;
 * @return {?proto.io.LocalizedString}
 */
proto.event_tickets.Seat.prototype.getLocalizedrow = function() {
  return /** @type{?proto.io.LocalizedString} */ (
    jspb.Message.getWrapperField(this, io_common_localization_pb.LocalizedString, 4));
};


/**
 * @param {?proto.io.LocalizedString|undefined} value
 * @return {!proto.event_tickets.Seat} returns this
*/
proto.event_tickets.Seat.prototype.setLocalizedrow = function(value) {
  return jspb.Message.setWrapperField(this, 4, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.event_tickets.Seat} returns this
 */
proto.event_tickets.Seat.prototype.clearLocalizedrow = function() {
  return this.setLocalizedrow(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.event_tickets.Seat.prototype.hasLocalizedrow = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional string section = 5;
 * @return {string}
 */
proto.event_tickets.Seat.prototype.getSection = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.event_tickets.Seat} returns this
 */
proto.event_tickets.Seat.prototype.setSection = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional io.LocalizedString localizedSection = 6;
 * @return {?proto.io.LocalizedString}
 */
proto.event_tickets.Seat.prototype.getLocalizedsection = function() {
  return /** @type{?proto.io.LocalizedString} */ (
    jspb.Message.getWrapperField(this, io_common_localization_pb.LocalizedString, 6));
};


/**
 * @param {?proto.io.LocalizedString|undefined} value
 * @return {!proto.event_tickets.Seat} returns this
*/
proto.event_tickets.Seat.prototype.setLocalizedsection = function(value) {
  return jspb.Message.setWrapperField(this, 6, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.event_tickets.Seat} returns this
 */
proto.event_tickets.Seat.prototype.clearLocalizedsection = function() {
  return this.setLocalizedsection(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.event_tickets.Seat.prototype.hasLocalizedsection = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional string gate = 7;
 * @return {string}
 */
proto.event_tickets.Seat.prototype.getGate = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.event_tickets.Seat} returns this
 */
proto.event_tickets.Seat.prototype.setGate = function(value) {
  return jspb.Message.setProto3StringField(this, 7, value);
};


/**
 * optional io.LocalizedString localizedGate = 8;
 * @return {?proto.io.LocalizedString}
 */
proto.event_tickets.Seat.prototype.getLocalizedgate = function() {
  return /** @type{?proto.io.LocalizedString} */ (
    jspb.Message.getWrapperField(this, io_common_localization_pb.LocalizedString, 8));
};


/**
 * @param {?proto.io.LocalizedString|undefined} value
 * @return {!proto.event_tickets.Seat} returns this
*/
proto.event_tickets.Seat.prototype.setLocalizedgate = function(value) {
  return jspb.Message.setWrapperField(this, 8, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.event_tickets.Seat} returns this
 */
proto.event_tickets.Seat.prototype.clearLocalizedgate = function() {
  return this.setLocalizedgate(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.event_tickets.Seat.prototype.hasLocalizedgate = function() {
  return jspb.Message.getField(this, 8) != null;
};


/**
 * optional string identifier = 9;
 * @return {string}
 */
proto.event_tickets.Seat.prototype.getIdentifier = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 9, ""));
};


/**
 * @param {string} value
 * @return {!proto.event_tickets.Seat} returns this
 */
proto.event_tickets.Seat.prototype.setIdentifier = function(value) {
  return jspb.Message.setProto3StringField(this, 9, value);
};


/**
 * optional io.LocalizedString localizedIdentifier = 10;
 * @return {?proto.io.LocalizedString}
 */
proto.event_tickets.Seat.prototype.getLocalizedidentifier = function() {
  return /** @type{?proto.io.LocalizedString} */ (
    jspb.Message.getWrapperField(this, io_common_localization_pb.LocalizedString, 10));
};


/**
 * @param {?proto.io.LocalizedString|undefined} value
 * @return {!proto.event_tickets.Seat} returns this
*/
proto.event_tickets.Seat.prototype.setLocalizedidentifier = function(value) {
  return jspb.Message.setWrapperField(this, 10, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.event_tickets.Seat} returns this
 */
proto.event_tickets.Seat.prototype.clearLocalizedidentifier = function() {
  return this.setLocalizedidentifier(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.event_tickets.Seat.prototype.hasLocalizedidentifier = function() {
  return jspb.Message.getField(this, 10) != null;
};


/**
 * optional string description = 11;
 * @return {string}
 */
proto.event_tickets.Seat.prototype.getDescription = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 11, ""));
};


/**
 * @param {string} value
 * @return {!proto.event_tickets.Seat} returns this
 */
proto.event_tickets.Seat.prototype.setDescription = function(value) {
  return jspb.Message.setProto3StringField(this, 11, value);
};


/**
 * optional io.LocalizedString localizedDescription = 12;
 * @return {?proto.io.LocalizedString}
 */
proto.event_tickets.Seat.prototype.getLocalizeddescription = function() {
  return /** @type{?proto.io.LocalizedString} */ (
    jspb.Message.getWrapperField(this, io_common_localization_pb.LocalizedString, 12));
};


/**
 * @param {?proto.io.LocalizedString|undefined} value
 * @return {!proto.event_tickets.Seat} returns this
*/
proto.event_tickets.Seat.prototype.setLocalizeddescription = function(value) {
  return jspb.Message.setWrapperField(this, 12, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.event_tickets.Seat} returns this
 */
proto.event_tickets.Seat.prototype.clearLocalizeddescription = function() {
  return this.setLocalizeddescription(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.event_tickets.Seat.prototype.hasLocalizeddescription = function() {
  return jspb.Message.getField(this, 12) != null;
};


/**
 * optional string type = 13;
 * @return {string}
 */
proto.event_tickets.Seat.prototype.getType = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 13, ""));
};


/**
 * @param {string} value
 * @return {!proto.event_tickets.Seat} returns this
 */
proto.event_tickets.Seat.prototype.setType = function(value) {
  return jspb.Message.setProto3StringField(this, 13, value);
};


/**
 * optional io.LocalizedString localizedType = 14;
 * @return {?proto.io.LocalizedString}
 */
proto.event_tickets.Seat.prototype.getLocalizedtype = function() {
  return /** @type{?proto.io.LocalizedString} */ (
    jspb.Message.getWrapperField(this, io_common_localization_pb.LocalizedString, 14));
};


/**
 * @param {?proto.io.LocalizedString|undefined} value
 * @return {!proto.event_tickets.Seat} returns this
*/
proto.event_tickets.Seat.prototype.setLocalizedtype = function(value) {
  return jspb.Message.setWrapperField(this, 14, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.event_tickets.Seat} returns this
 */
proto.event_tickets.Seat.prototype.clearLocalizedtype = function() {
  return this.setLocalizedtype(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.event_tickets.Seat.prototype.hasLocalizedtype = function() {
  return jspb.Message.getField(this, 14) != null;
};


/**
 * optional string level = 15;
 * @return {string}
 */
proto.event_tickets.Seat.prototype.getLevel = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 15, ""));
};


/**
 * @param {string} value
 * @return {!proto.event_tickets.Seat} returns this
 */
proto.event_tickets.Seat.prototype.setLevel = function(value) {
  return jspb.Message.setProto3StringField(this, 15, value);
};


/**
 * optional io.LocalizedString localizedLevel = 16;
 * @return {?proto.io.LocalizedString}
 */
proto.event_tickets.Seat.prototype.getLocalizedlevel = function() {
  return /** @type{?proto.io.LocalizedString} */ (
    jspb.Message.getWrapperField(this, io_common_localization_pb.LocalizedString, 16));
};


/**
 * @param {?proto.io.LocalizedString|undefined} value
 * @return {!proto.event_tickets.Seat} returns this
*/
proto.event_tickets.Seat.prototype.setLocalizedlevel = function(value) {
  return jspb.Message.setWrapperField(this, 16, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.event_tickets.Seat} returns this
 */
proto.event_tickets.Seat.prototype.clearLocalizedlevel = function() {
  return this.setLocalizedlevel(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.event_tickets.Seat.prototype.hasLocalizedlevel = function() {
  return jspb.Message.getField(this, 16) != null;
};


/**
 * optional string aisle = 17;
 * @return {string}
 */
proto.event_tickets.Seat.prototype.getAisle = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 17, ""));
};


/**
 * @param {string} value
 * @return {!proto.event_tickets.Seat} returns this
 */
proto.event_tickets.Seat.prototype.setAisle = function(value) {
  return jspb.Message.setProto3StringField(this, 17, value);
};


/**
 * optional io.LocalizedString localizedAisle = 18;
 * @return {?proto.io.LocalizedString}
 */
proto.event_tickets.Seat.prototype.getLocalizedaisle = function() {
  return /** @type{?proto.io.LocalizedString} */ (
    jspb.Message.getWrapperField(this, io_common_localization_pb.LocalizedString, 18));
};


/**
 * @param {?proto.io.LocalizedString|undefined} value
 * @return {!proto.event_tickets.Seat} returns this
*/
proto.event_tickets.Seat.prototype.setLocalizedaisle = function(value) {
  return jspb.Message.setWrapperField(this, 18, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.event_tickets.Seat} returns this
 */
proto.event_tickets.Seat.prototype.clearLocalizedaisle = function() {
  return this.setLocalizedaisle(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.event_tickets.Seat.prototype.hasLocalizedaisle = function() {
  return jspb.Message.getField(this, 18) != null;
};


/**
 * optional string door = 19;
 * @return {string}
 */
proto.event_tickets.Seat.prototype.getDoor = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 19, ""));
};


/**
 * @param {string} value
 * @return {!proto.event_tickets.Seat} returns this
 */
proto.event_tickets.Seat.prototype.setDoor = function(value) {
  return jspb.Message.setProto3StringField(this, 19, value);
};


/**
 * optional io.LocalizedString localizedDoor = 20;
 * @return {?proto.io.LocalizedString}
 */
proto.event_tickets.Seat.prototype.getLocalizeddoor = function() {
  return /** @type{?proto.io.LocalizedString} */ (
    jspb.Message.getWrapperField(this, io_common_localization_pb.LocalizedString, 20));
};


/**
 * @param {?proto.io.LocalizedString|undefined} value
 * @return {!proto.event_tickets.Seat} returns this
*/
proto.event_tickets.Seat.prototype.setLocalizeddoor = function(value) {
  return jspb.Message.setWrapperField(this, 20, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.event_tickets.Seat} returns this
 */
proto.event_tickets.Seat.prototype.clearLocalizeddoor = function() {
  return this.setLocalizeddoor(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.event_tickets.Seat.prototype.hasLocalizeddoor = function() {
  return jspb.Message.getField(this, 20) != null;
};


/**
 * optional string sectionColor = 21;
 * @return {string}
 */
proto.event_tickets.Seat.prototype.getSectioncolor = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 21, ""));
};


/**
 * @param {string} value
 * @return {!proto.event_tickets.Seat} returns this
 */
proto.event_tickets.Seat.prototype.setSectioncolor = function(value) {
  return jspb.Message.setProto3StringField(this, 21, value);
};


/**
 * optional string portalURL = 22;
 * @return {string}
 */
proto.event_tickets.Seat.prototype.getPortalurl = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 22, ""));
};


/**
 * @param {string} value
 * @return {!proto.event_tickets.Seat} returns this
 */
proto.event_tickets.Seat.prototype.setPortalurl = function(value) {
  return jspb.Message.setProto3StringField(this, 22, value);
};


/**
 * optional io.LocalizedString localizedPortalURL = 23;
 * @return {?proto.io.LocalizedString}
 */
proto.event_tickets.Seat.prototype.getLocalizedportalurl = function() {
  return /** @type{?proto.io.LocalizedString} */ (
    jspb.Message.getWrapperField(this, io_common_localization_pb.LocalizedString, 23));
};


/**
 * @param {?proto.io.LocalizedString|undefined} value
 * @return {!proto.event_tickets.Seat} returns this
*/
proto.event_tickets.Seat.prototype.setLocalizedportalurl = function(value) {
  return jspb.Message.setWrapperField(this, 23, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.event_tickets.Seat} returns this
 */
proto.event_tickets.Seat.prototype.clearLocalizedportalurl = function() {
  return this.setLocalizedportalurl(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.event_tickets.Seat.prototype.hasLocalizedportalurl = function() {
  return jspb.Message.getField(this, 23) != null;
};


/**
 * optional string venueEntrance = 24;
 * @return {string}
 */
proto.event_tickets.Seat.prototype.getVenueentrance = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 24, ""));
};


/**
 * @param {string} value
 * @return {!proto.event_tickets.Seat} returns this
 */
proto.event_tickets.Seat.prototype.setVenueentrance = function(value) {
  return jspb.Message.setProto3StringField(this, 24, value);
};


/**
 * optional io.LocalizedString localizedVenueEntrance = 25;
 * @return {?proto.io.LocalizedString}
 */
proto.event_tickets.Seat.prototype.getLocalizedvenueentrance = function() {
  return /** @type{?proto.io.LocalizedString} */ (
    jspb.Message.getWrapperField(this, io_common_localization_pb.LocalizedString, 25));
};


/**
 * @param {?proto.io.LocalizedString|undefined} value
 * @return {!proto.event_tickets.Seat} returns this
*/
proto.event_tickets.Seat.prototype.setLocalizedvenueentrance = function(value) {
  return jspb.Message.setWrapperField(this, 25, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.event_tickets.Seat} returns this
 */
proto.event_tickets.Seat.prototype.clearLocalizedvenueentrance = function() {
  return this.setLocalizedvenueentrance(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.event_tickets.Seat.prototype.hasLocalizedvenueentrance = function() {
  return jspb.Message.getField(this, 25) != null;
};


/**
 * optional string admissionLevel = 26;
 * @return {string}
 */
proto.event_tickets.Seat.prototype.getAdmissionlevel = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 26, ""));
};


/**
 * @param {string} value
 * @return {!proto.event_tickets.Seat} returns this
 */
proto.event_tickets.Seat.prototype.setAdmissionlevel = function(value) {
  return jspb.Message.setProto3StringField(this, 26, value);
};


/**
 * optional io.LocalizedString localizedAdmissionLevel = 27;
 * @return {?proto.io.LocalizedString}
 */
proto.event_tickets.Seat.prototype.getLocalizedadmissionlevel = function() {
  return /** @type{?proto.io.LocalizedString} */ (
    jspb.Message.getWrapperField(this, io_common_localization_pb.LocalizedString, 27));
};


/**
 * @param {?proto.io.LocalizedString|undefined} value
 * @return {!proto.event_tickets.Seat} returns this
*/
proto.event_tickets.Seat.prototype.setLocalizedadmissionlevel = function(value) {
  return jspb.Message.setWrapperField(this, 27, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.event_tickets.Seat} returns this
 */
proto.event_tickets.Seat.prototype.clearLocalizedadmissionlevel = function() {
  return this.setLocalizedadmissionlevel(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.event_tickets.Seat.prototype.hasLocalizedadmissionlevel = function() {
  return jspb.Message.getField(this, 27) != null;
};


/**
 * optional string admissionLevelAbbreviation = 28;
 * @return {string}
 */
proto.event_tickets.Seat.prototype.getAdmissionlevelabbreviation = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 28, ""));
};


/**
 * @param {string} value
 * @return {!proto.event_tickets.Seat} returns this
 */
proto.event_tickets.Seat.prototype.setAdmissionlevelabbreviation = function(value) {
  return jspb.Message.setProto3StringField(this, 28, value);
};


/**
 * optional io.LocalizedString localizedAdmissionLevelAbbreviation = 29;
 * @return {?proto.io.LocalizedString}
 */
proto.event_tickets.Seat.prototype.getLocalizedadmissionlevelabbreviation = function() {
  return /** @type{?proto.io.LocalizedString} */ (
    jspb.Message.getWrapperField(this, io_common_localization_pb.LocalizedString, 29));
};


/**
 * @param {?proto.io.LocalizedString|undefined} value
 * @return {!proto.event_tickets.Seat} returns this
*/
proto.event_tickets.Seat.prototype.setLocalizedadmissionlevelabbreviation = function(value) {
  return jspb.Message.setWrapperField(this, 29, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.event_tickets.Seat} returns this
 */
proto.event_tickets.Seat.prototype.clearLocalizedadmissionlevelabbreviation = function() {
  return this.setLocalizedadmissionlevelabbreviation(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.event_tickets.Seat.prototype.hasLocalizedadmissionlevelabbreviation = function() {
  return jspb.Message.getField(this, 29) != null;
};


/**
 * optional string entranceDescription = 30;
 * @return {string}
 */
proto.event_tickets.Seat.prototype.getEntrancedescription = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 30, ""));
};


/**
 * @param {string} value
 * @return {!proto.event_tickets.Seat} returns this
 */
proto.event_tickets.Seat.prototype.setEntrancedescription = function(value) {
  return jspb.Message.setProto3StringField(this, 30, value);
};


/**
 * optional io.LocalizedString localizedEntranceDescription = 31;
 * @return {?proto.io.LocalizedString}
 */
proto.event_tickets.Seat.prototype.getLocalizedentrancedescription = function() {
  return /** @type{?proto.io.LocalizedString} */ (
    jspb.Message.getWrapperField(this, io_common_localization_pb.LocalizedString, 31));
};


/**
 * @param {?proto.io.LocalizedString|undefined} value
 * @return {!proto.event_tickets.Seat} returns this
*/
proto.event_tickets.Seat.prototype.setLocalizedentrancedescription = function(value) {
  return jspb.Message.setWrapperField(this, 31, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.event_tickets.Seat} returns this
 */
proto.event_tickets.Seat.prototype.clearLocalizedentrancedescription = function() {
  return this.setLocalizedentrancedescription(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.event_tickets.Seat.prototype.hasLocalizedentrancedescription = function() {
  return jspb.Message.getField(this, 31) != null;
};


/**
 * optional string room = 32;
 * @return {string}
 */
proto.event_tickets.Seat.prototype.getRoom = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 32, ""));
};


/**
 * @param {string} value
 * @return {!proto.event_tickets.Seat} returns this
 */
proto.event_tickets.Seat.prototype.setRoom = function(value) {
  return jspb.Message.setProto3StringField(this, 32, value);
};


/**
 * optional io.LocalizedString localizedRoom = 33;
 * @return {?proto.io.LocalizedString}
 */
proto.event_tickets.Seat.prototype.getLocalizedroom = function() {
  return /** @type{?proto.io.LocalizedString} */ (
    jspb.Message.getWrapperField(this, io_common_localization_pb.LocalizedString, 33));
};


/**
 * @param {?proto.io.LocalizedString|undefined} value
 * @return {!proto.event_tickets.Seat} returns this
*/
proto.event_tickets.Seat.prototype.setLocalizedroom = function(value) {
  return jspb.Message.setWrapperField(this, 33, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.event_tickets.Seat} returns this
 */
proto.event_tickets.Seat.prototype.clearLocalizedroom = function() {
  return this.setLocalizedroom(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.event_tickets.Seat.prototype.hasLocalizedroom = function() {
  return jspb.Message.getField(this, 33) != null;
};


/**
 * optional string additionalTicketAttributes = 34;
 * @return {string}
 */
proto.event_tickets.Seat.prototype.getAdditionalticketattributes = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 34, ""));
};


/**
 * @param {string} value
 * @return {!proto.event_tickets.Seat} returns this
 */
proto.event_tickets.Seat.prototype.setAdditionalticketattributes = function(value) {
  return jspb.Message.setProto3StringField(this, 34, value);
};


/**
 * optional io.LocalizedString localizedAdditionalTicketAttributes = 35;
 * @return {?proto.io.LocalizedString}
 */
proto.event_tickets.Seat.prototype.getLocalizedadditionalticketattributes = function() {
  return /** @type{?proto.io.LocalizedString} */ (
    jspb.Message.getWrapperField(this, io_common_localization_pb.LocalizedString, 35));
};


/**
 * @param {?proto.io.LocalizedString|undefined} value
 * @return {!proto.event_tickets.Seat} returns this
*/
proto.event_tickets.Seat.prototype.setLocalizedadditionalticketattributes = function(value) {
  return jspb.Message.setWrapperField(this, 35, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.event_tickets.Seat} returns this
 */
proto.event_tickets.Seat.prototype.clearLocalizedadditionalticketattributes = function() {
  return this.setLocalizedadditionalticketattributes(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.event_tickets.Seat.prototype.hasLocalizedadditionalticketattributes = function() {
  return jspb.Message.getField(this, 35) != null;
};



/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.event_tickets.TicketListRequest.oneofGroups_ = [[1,2],[3,4],[5,6]];

/**
 * @enum {number}
 */
proto.event_tickets.TicketListRequest.ProductionCase = {
  PRODUCTION_NOT_SET: 0,
  PRODUCTIONID: 1,
  PRODUCTIONUID: 2
};

/**
 * @return {proto.event_tickets.TicketListRequest.ProductionCase}
 */
proto.event_tickets.TicketListRequest.prototype.getProductionCase = function() {
  return /** @type {proto.event_tickets.TicketListRequest.ProductionCase} */(jspb.Message.computeOneofCase(this, proto.event_tickets.TicketListRequest.oneofGroups_[0]));
};

/**
 * @enum {number}
 */
proto.event_tickets.TicketListRequest.EventCase = {
  EVENT_NOT_SET: 0,
  EVENTID: 3,
  EVENTFILTERBYVENUEANDSTART: 4
};

/**
 * @return {proto.event_tickets.TicketListRequest.EventCase}
 */
proto.event_tickets.TicketListRequest.prototype.getEventCase = function() {
  return /** @type {proto.event_tickets.TicketListRequest.EventCase} */(jspb.Message.computeOneofCase(this, proto.event_tickets.TicketListRequest.oneofGroups_[1]));
};

/**
 * @enum {number}
 */
proto.event_tickets.TicketListRequest.TickettypeCase = {
  TICKETTYPE_NOT_SET: 0,
  TICKETTYPEID: 5,
  TICKETTYPEUID: 6
};

/**
 * @return {proto.event_tickets.TicketListRequest.TickettypeCase}
 */
proto.event_tickets.TicketListRequest.prototype.getTickettypeCase = function() {
  return /** @type {proto.event_tickets.TicketListRequest.TickettypeCase} */(jspb.Message.computeOneofCase(this, proto.event_tickets.TicketListRequest.oneofGroups_[2]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.event_tickets.TicketListRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.event_tickets.TicketListRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.event_tickets.TicketListRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.event_tickets.TicketListRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    productionid: jspb.Message.getFieldWithDefault(msg, 1, ""),
    productionuid: jspb.Message.getFieldWithDefault(msg, 2, ""),
    eventid: jspb.Message.getFieldWithDefault(msg, 3, ""),
    eventfilterbyvenueandstart: (f = msg.getEventfilterbyvenueandstart()) && proto.event_tickets.EventFilterByVenueAndStart.toObject(includeInstance, f),
    tickettypeid: jspb.Message.getFieldWithDefault(msg, 5, ""),
    tickettypeuid: jspb.Message.getFieldWithDefault(msg, 6, ""),
    filters: (f = msg.getFilters()) && io_common_filter_pb.Filters.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.event_tickets.TicketListRequest}
 */
proto.event_tickets.TicketListRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.event_tickets.TicketListRequest;
  return proto.event_tickets.TicketListRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.event_tickets.TicketListRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.event_tickets.TicketListRequest}
 */
proto.event_tickets.TicketListRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setProductionid(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setProductionuid(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setEventid(value);
      break;
    case 4:
      var value = new proto.event_tickets.EventFilterByVenueAndStart;
      reader.readMessage(value,proto.event_tickets.EventFilterByVenueAndStart.deserializeBinaryFromReader);
      msg.setEventfilterbyvenueandstart(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setTickettypeid(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setTickettypeuid(value);
      break;
    case 7:
      var value = new io_common_filter_pb.Filters;
      reader.readMessage(value,io_common_filter_pb.Filters.deserializeBinaryFromReader);
      msg.setFilters(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.event_tickets.TicketListRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.event_tickets.TicketListRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.event_tickets.TicketListRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.event_tickets.TicketListRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {string} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeString(
      1,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeString(
      2,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getEventfilterbyvenueandstart();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      proto.event_tickets.EventFilterByVenueAndStart.serializeBinaryToWriter
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 5));
  if (f != null) {
    writer.writeString(
      5,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 6));
  if (f != null) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getFilters();
  if (f != null) {
    writer.writeMessage(
      7,
      f,
      io_common_filter_pb.Filters.serializeBinaryToWriter
    );
  }
};


/**
 * optional string productionId = 1;
 * @return {string}
 */
proto.event_tickets.TicketListRequest.prototype.getProductionid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.event_tickets.TicketListRequest} returns this
 */
proto.event_tickets.TicketListRequest.prototype.setProductionid = function(value) {
  return jspb.Message.setOneofField(this, 1, proto.event_tickets.TicketListRequest.oneofGroups_[0], value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.event_tickets.TicketListRequest} returns this
 */
proto.event_tickets.TicketListRequest.prototype.clearProductionid = function() {
  return jspb.Message.setOneofField(this, 1, proto.event_tickets.TicketListRequest.oneofGroups_[0], undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.event_tickets.TicketListRequest.prototype.hasProductionid = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string productionUid = 2;
 * @return {string}
 */
proto.event_tickets.TicketListRequest.prototype.getProductionuid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.event_tickets.TicketListRequest} returns this
 */
proto.event_tickets.TicketListRequest.prototype.setProductionuid = function(value) {
  return jspb.Message.setOneofField(this, 2, proto.event_tickets.TicketListRequest.oneofGroups_[0], value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.event_tickets.TicketListRequest} returns this
 */
proto.event_tickets.TicketListRequest.prototype.clearProductionuid = function() {
  return jspb.Message.setOneofField(this, 2, proto.event_tickets.TicketListRequest.oneofGroups_[0], undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.event_tickets.TicketListRequest.prototype.hasProductionuid = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional string eventId = 3;
 * @return {string}
 */
proto.event_tickets.TicketListRequest.prototype.getEventid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.event_tickets.TicketListRequest} returns this
 */
proto.event_tickets.TicketListRequest.prototype.setEventid = function(value) {
  return jspb.Message.setOneofField(this, 3, proto.event_tickets.TicketListRequest.oneofGroups_[1], value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.event_tickets.TicketListRequest} returns this
 */
proto.event_tickets.TicketListRequest.prototype.clearEventid = function() {
  return jspb.Message.setOneofField(this, 3, proto.event_tickets.TicketListRequest.oneofGroups_[1], undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.event_tickets.TicketListRequest.prototype.hasEventid = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional EventFilterByVenueAndStart eventFilterByVenueAndStart = 4;
 * @return {?proto.event_tickets.EventFilterByVenueAndStart}
 */
proto.event_tickets.TicketListRequest.prototype.getEventfilterbyvenueandstart = function() {
  return /** @type{?proto.event_tickets.EventFilterByVenueAndStart} */ (
    jspb.Message.getWrapperField(this, proto.event_tickets.EventFilterByVenueAndStart, 4));
};


/**
 * @param {?proto.event_tickets.EventFilterByVenueAndStart|undefined} value
 * @return {!proto.event_tickets.TicketListRequest} returns this
*/
proto.event_tickets.TicketListRequest.prototype.setEventfilterbyvenueandstart = function(value) {
  return jspb.Message.setOneofWrapperField(this, 4, proto.event_tickets.TicketListRequest.oneofGroups_[1], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.event_tickets.TicketListRequest} returns this
 */
proto.event_tickets.TicketListRequest.prototype.clearEventfilterbyvenueandstart = function() {
  return this.setEventfilterbyvenueandstart(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.event_tickets.TicketListRequest.prototype.hasEventfilterbyvenueandstart = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional string ticketTypeId = 5;
 * @return {string}
 */
proto.event_tickets.TicketListRequest.prototype.getTickettypeid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.event_tickets.TicketListRequest} returns this
 */
proto.event_tickets.TicketListRequest.prototype.setTickettypeid = function(value) {
  return jspb.Message.setOneofField(this, 5, proto.event_tickets.TicketListRequest.oneofGroups_[2], value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.event_tickets.TicketListRequest} returns this
 */
proto.event_tickets.TicketListRequest.prototype.clearTickettypeid = function() {
  return jspb.Message.setOneofField(this, 5, proto.event_tickets.TicketListRequest.oneofGroups_[2], undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.event_tickets.TicketListRequest.prototype.hasTickettypeid = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional string ticketTypeUid = 6;
 * @return {string}
 */
proto.event_tickets.TicketListRequest.prototype.getTickettypeuid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.event_tickets.TicketListRequest} returns this
 */
proto.event_tickets.TicketListRequest.prototype.setTickettypeuid = function(value) {
  return jspb.Message.setOneofField(this, 6, proto.event_tickets.TicketListRequest.oneofGroups_[2], value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.event_tickets.TicketListRequest} returns this
 */
proto.event_tickets.TicketListRequest.prototype.clearTickettypeuid = function() {
  return jspb.Message.setOneofField(this, 6, proto.event_tickets.TicketListRequest.oneofGroups_[2], undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.event_tickets.TicketListRequest.prototype.hasTickettypeuid = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional io.Filters filters = 7;
 * @return {?proto.io.Filters}
 */
proto.event_tickets.TicketListRequest.prototype.getFilters = function() {
  return /** @type{?proto.io.Filters} */ (
    jspb.Message.getWrapperField(this, io_common_filter_pb.Filters, 7));
};


/**
 * @param {?proto.io.Filters|undefined} value
 * @return {!proto.event_tickets.TicketListRequest} returns this
*/
proto.event_tickets.TicketListRequest.prototype.setFilters = function(value) {
  return jspb.Message.setWrapperField(this, 7, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.event_tickets.TicketListRequest} returns this
 */
proto.event_tickets.TicketListRequest.prototype.clearFilters = function() {
  return this.setFilters(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.event_tickets.TicketListRequest.prototype.hasFilters = function() {
  return jspb.Message.getField(this, 7) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.event_tickets.EventFilterByVenueAndStart.prototype.toObject = function(opt_includeInstance) {
  return proto.event_tickets.EventFilterByVenueAndStart.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.event_tickets.EventFilterByVenueAndStart} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.event_tickets.EventFilterByVenueAndStart.toObject = function(includeInstance, msg) {
  var f, obj = {
    venueid: jspb.Message.getFieldWithDefault(msg, 1, ""),
    venueuid: jspb.Message.getFieldWithDefault(msg, 2, ""),
    scheduledstartdate: (f = msg.getScheduledstartdate()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.event_tickets.EventFilterByVenueAndStart}
 */
proto.event_tickets.EventFilterByVenueAndStart.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.event_tickets.EventFilterByVenueAndStart;
  return proto.event_tickets.EventFilterByVenueAndStart.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.event_tickets.EventFilterByVenueAndStart} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.event_tickets.EventFilterByVenueAndStart}
 */
proto.event_tickets.EventFilterByVenueAndStart.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setVenueid(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setVenueuid(value);
      break;
    case 3:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setScheduledstartdate(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.event_tickets.EventFilterByVenueAndStart.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.event_tickets.EventFilterByVenueAndStart.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.event_tickets.EventFilterByVenueAndStart} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.event_tickets.EventFilterByVenueAndStart.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getVenueid();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getVenueuid();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getScheduledstartdate();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
};


/**
 * optional string venueId = 1;
 * @return {string}
 */
proto.event_tickets.EventFilterByVenueAndStart.prototype.getVenueid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.event_tickets.EventFilterByVenueAndStart} returns this
 */
proto.event_tickets.EventFilterByVenueAndStart.prototype.setVenueid = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string venueUid = 2;
 * @return {string}
 */
proto.event_tickets.EventFilterByVenueAndStart.prototype.getVenueuid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.event_tickets.EventFilterByVenueAndStart} returns this
 */
proto.event_tickets.EventFilterByVenueAndStart.prototype.setVenueuid = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional google.protobuf.Timestamp scheduledStartDate = 3;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.event_tickets.EventFilterByVenueAndStart.prototype.getScheduledstartdate = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 3));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.event_tickets.EventFilterByVenueAndStart} returns this
*/
proto.event_tickets.EventFilterByVenueAndStart.prototype.setScheduledstartdate = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.event_tickets.EventFilterByVenueAndStart} returns this
 */
proto.event_tickets.EventFilterByVenueAndStart.prototype.clearScheduledstartdate = function() {
  return this.setScheduledstartdate(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.event_tickets.EventFilterByVenueAndStart.prototype.hasScheduledstartdate = function() {
  return jspb.Message.getField(this, 3) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.event_tickets.TicketNumberRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.event_tickets.TicketNumberRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.event_tickets.TicketNumberRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.event_tickets.TicketNumberRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    productionid: jspb.Message.getFieldWithDefault(msg, 1, ""),
    productionuid: jspb.Message.getFieldWithDefault(msg, 2, ""),
    ticketnumber: jspb.Message.getFieldWithDefault(msg, 3, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.event_tickets.TicketNumberRequest}
 */
proto.event_tickets.TicketNumberRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.event_tickets.TicketNumberRequest;
  return proto.event_tickets.TicketNumberRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.event_tickets.TicketNumberRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.event_tickets.TicketNumberRequest}
 */
proto.event_tickets.TicketNumberRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setProductionid(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setProductionuid(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setTicketnumber(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.event_tickets.TicketNumberRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.event_tickets.TicketNumberRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.event_tickets.TicketNumberRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.event_tickets.TicketNumberRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getProductionid();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getProductionuid();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getTicketnumber();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
};


/**
 * optional string productionId = 1;
 * @return {string}
 */
proto.event_tickets.TicketNumberRequest.prototype.getProductionid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.event_tickets.TicketNumberRequest} returns this
 */
proto.event_tickets.TicketNumberRequest.prototype.setProductionid = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string productionUid = 2;
 * @return {string}
 */
proto.event_tickets.TicketNumberRequest.prototype.getProductionuid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.event_tickets.TicketNumberRequest} returns this
 */
proto.event_tickets.TicketNumberRequest.prototype.setProductionuid = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string ticketNumber = 3;
 * @return {string}
 */
proto.event_tickets.TicketNumberRequest.prototype.getTicketnumber = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.event_tickets.TicketNumberRequest} returns this
 */
proto.event_tickets.TicketNumberRequest.prototype.setTicketnumber = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.event_tickets.OrderNumberRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.event_tickets.OrderNumberRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.event_tickets.OrderNumberRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.event_tickets.OrderNumberRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    productionid: jspb.Message.getFieldWithDefault(msg, 1, ""),
    productionuid: jspb.Message.getFieldWithDefault(msg, 2, ""),
    ordernumber: jspb.Message.getFieldWithDefault(msg, 3, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.event_tickets.OrderNumberRequest}
 */
proto.event_tickets.OrderNumberRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.event_tickets.OrderNumberRequest;
  return proto.event_tickets.OrderNumberRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.event_tickets.OrderNumberRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.event_tickets.OrderNumberRequest}
 */
proto.event_tickets.OrderNumberRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setProductionid(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setProductionuid(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setOrdernumber(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.event_tickets.OrderNumberRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.event_tickets.OrderNumberRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.event_tickets.OrderNumberRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.event_tickets.OrderNumberRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getProductionid();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getProductionuid();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getOrdernumber();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
};


/**
 * optional string productionId = 1;
 * @return {string}
 */
proto.event_tickets.OrderNumberRequest.prototype.getProductionid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.event_tickets.OrderNumberRequest} returns this
 */
proto.event_tickets.OrderNumberRequest.prototype.setProductionid = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string productionUid = 2;
 * @return {string}
 */
proto.event_tickets.OrderNumberRequest.prototype.getProductionuid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.event_tickets.OrderNumberRequest} returns this
 */
proto.event_tickets.OrderNumberRequest.prototype.setProductionuid = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string orderNumber = 3;
 * @return {string}
 */
proto.event_tickets.OrderNumberRequest.prototype.getOrdernumber = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.event_tickets.OrderNumberRequest} returns this
 */
proto.event_tickets.OrderNumberRequest.prototype.setOrdernumber = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.event_tickets.RedeemByOrderNumber.prototype.toObject = function(opt_includeInstance) {
  return proto.event_tickets.RedeemByOrderNumber.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.event_tickets.RedeemByOrderNumber} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.event_tickets.RedeemByOrderNumber.toObject = function(includeInstance, msg) {
  var f, obj = {
    productionid: jspb.Message.getFieldWithDefault(msg, 1, ""),
    productionuid: jspb.Message.getFieldWithDefault(msg, 2, ""),
    ordernumber: jspb.Message.getFieldWithDefault(msg, 3, ""),
    redemptiondetails: (f = msg.getRedemptiondetails()) && proto.event_tickets.RedemptionDetails.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.event_tickets.RedeemByOrderNumber}
 */
proto.event_tickets.RedeemByOrderNumber.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.event_tickets.RedeemByOrderNumber;
  return proto.event_tickets.RedeemByOrderNumber.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.event_tickets.RedeemByOrderNumber} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.event_tickets.RedeemByOrderNumber}
 */
proto.event_tickets.RedeemByOrderNumber.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setProductionid(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setProductionuid(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setOrdernumber(value);
      break;
    case 4:
      var value = new proto.event_tickets.RedemptionDetails;
      reader.readMessage(value,proto.event_tickets.RedemptionDetails.deserializeBinaryFromReader);
      msg.setRedemptiondetails(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.event_tickets.RedeemByOrderNumber.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.event_tickets.RedeemByOrderNumber.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.event_tickets.RedeemByOrderNumber} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.event_tickets.RedeemByOrderNumber.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getProductionid();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getProductionuid();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getOrdernumber();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getRedemptiondetails();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      proto.event_tickets.RedemptionDetails.serializeBinaryToWriter
    );
  }
};


/**
 * optional string productionId = 1;
 * @return {string}
 */
proto.event_tickets.RedeemByOrderNumber.prototype.getProductionid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.event_tickets.RedeemByOrderNumber} returns this
 */
proto.event_tickets.RedeemByOrderNumber.prototype.setProductionid = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string productionUid = 2;
 * @return {string}
 */
proto.event_tickets.RedeemByOrderNumber.prototype.getProductionuid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.event_tickets.RedeemByOrderNumber} returns this
 */
proto.event_tickets.RedeemByOrderNumber.prototype.setProductionuid = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string orderNumber = 3;
 * @return {string}
 */
proto.event_tickets.RedeemByOrderNumber.prototype.getOrdernumber = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.event_tickets.RedeemByOrderNumber} returns this
 */
proto.event_tickets.RedeemByOrderNumber.prototype.setOrdernumber = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional RedemptionDetails redemptionDetails = 4;
 * @return {?proto.event_tickets.RedemptionDetails}
 */
proto.event_tickets.RedeemByOrderNumber.prototype.getRedemptiondetails = function() {
  return /** @type{?proto.event_tickets.RedemptionDetails} */ (
    jspb.Message.getWrapperField(this, proto.event_tickets.RedemptionDetails, 4));
};


/**
 * @param {?proto.event_tickets.RedemptionDetails|undefined} value
 * @return {!proto.event_tickets.RedeemByOrderNumber} returns this
*/
proto.event_tickets.RedeemByOrderNumber.prototype.setRedemptiondetails = function(value) {
  return jspb.Message.setWrapperField(this, 4, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.event_tickets.RedeemByOrderNumber} returns this
 */
proto.event_tickets.RedeemByOrderNumber.prototype.clearRedemptiondetails = function() {
  return this.setRedemptiondetails(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.event_tickets.RedeemByOrderNumber.prototype.hasRedemptiondetails = function() {
  return jspb.Message.getField(this, 4) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.event_tickets.Tickets.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.event_tickets.Tickets.prototype.toObject = function(opt_includeInstance) {
  return proto.event_tickets.Tickets.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.event_tickets.Tickets} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.event_tickets.Tickets.toObject = function(includeInstance, msg) {
  var f, obj = {
    ticketsList: jspb.Message.toObjectList(msg.getTicketsList(),
    proto.event_tickets.TicketLimitedFields.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.event_tickets.Tickets}
 */
proto.event_tickets.Tickets.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.event_tickets.Tickets;
  return proto.event_tickets.Tickets.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.event_tickets.Tickets} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.event_tickets.Tickets}
 */
proto.event_tickets.Tickets.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.event_tickets.TicketLimitedFields;
      reader.readMessage(value,proto.event_tickets.TicketLimitedFields.deserializeBinaryFromReader);
      msg.addTickets(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.event_tickets.Tickets.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.event_tickets.Tickets.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.event_tickets.Tickets} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.event_tickets.Tickets.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTicketsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.event_tickets.TicketLimitedFields.serializeBinaryToWriter
    );
  }
};


/**
 * repeated TicketLimitedFields tickets = 1;
 * @return {!Array<!proto.event_tickets.TicketLimitedFields>}
 */
proto.event_tickets.Tickets.prototype.getTicketsList = function() {
  return /** @type{!Array<!proto.event_tickets.TicketLimitedFields>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.event_tickets.TicketLimitedFields, 1));
};


/**
 * @param {!Array<!proto.event_tickets.TicketLimitedFields>} value
 * @return {!proto.event_tickets.Tickets} returns this
*/
proto.event_tickets.Tickets.prototype.setTicketsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.event_tickets.TicketLimitedFields=} opt_value
 * @param {number=} opt_index
 * @return {!proto.event_tickets.TicketLimitedFields}
 */
proto.event_tickets.Tickets.prototype.addTickets = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.event_tickets.TicketLimitedFields, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.event_tickets.Tickets} returns this
 */
proto.event_tickets.Tickets.prototype.clearTicketsList = function() {
  return this.setTicketsList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.event_tickets.TicketPassBundles.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.event_tickets.TicketPassBundles.prototype.toObject = function(opt_includeInstance) {
  return proto.event_tickets.TicketPassBundles.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.event_tickets.TicketPassBundles} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.event_tickets.TicketPassBundles.toObject = function(includeInstance, msg) {
  var f, obj = {
    ticketsList: jspb.Message.toObjectList(msg.getTicketsList(),
    io_common_common_objects_pb.PassBundle.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.event_tickets.TicketPassBundles}
 */
proto.event_tickets.TicketPassBundles.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.event_tickets.TicketPassBundles;
  return proto.event_tickets.TicketPassBundles.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.event_tickets.TicketPassBundles} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.event_tickets.TicketPassBundles}
 */
proto.event_tickets.TicketPassBundles.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new io_common_common_objects_pb.PassBundle;
      reader.readMessage(value,io_common_common_objects_pb.PassBundle.deserializeBinaryFromReader);
      msg.addTickets(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.event_tickets.TicketPassBundles.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.event_tickets.TicketPassBundles.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.event_tickets.TicketPassBundles} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.event_tickets.TicketPassBundles.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTicketsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      io_common_common_objects_pb.PassBundle.serializeBinaryToWriter
    );
  }
};


/**
 * repeated io.PassBundle tickets = 1;
 * @return {!Array<!proto.io.PassBundle>}
 */
proto.event_tickets.TicketPassBundles.prototype.getTicketsList = function() {
  return /** @type{!Array<!proto.io.PassBundle>} */ (
    jspb.Message.getRepeatedWrapperField(this, io_common_common_objects_pb.PassBundle, 1));
};


/**
 * @param {!Array<!proto.io.PassBundle>} value
 * @return {!proto.event_tickets.TicketPassBundles} returns this
*/
proto.event_tickets.TicketPassBundles.prototype.setTicketsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.io.PassBundle=} opt_value
 * @param {number=} opt_index
 * @return {!proto.io.PassBundle}
 */
proto.event_tickets.TicketPassBundles.prototype.addTickets = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.io.PassBundle, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.event_tickets.TicketPassBundles} returns this
 */
proto.event_tickets.TicketPassBundles.prototype.clearTicketsList = function() {
  return this.setTicketsList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.event_tickets.ValidateTicketRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.event_tickets.ValidateTicketRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.event_tickets.ValidateTicketRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.event_tickets.ValidateTicketRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    maxnumberofvalidations: jspb.Message.getFieldWithDefault(msg, 1, 0),
    ticket: (f = msg.getTicket()) && proto.event_tickets.TicketId.toObject(includeInstance, f),
    validatedetails: (f = msg.getValidatedetails()) && proto.event_tickets.ValidateDetails.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.event_tickets.ValidateTicketRequest}
 */
proto.event_tickets.ValidateTicketRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.event_tickets.ValidateTicketRequest;
  return proto.event_tickets.ValidateTicketRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.event_tickets.ValidateTicketRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.event_tickets.ValidateTicketRequest}
 */
proto.event_tickets.ValidateTicketRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setMaxnumberofvalidations(value);
      break;
    case 2:
      var value = new proto.event_tickets.TicketId;
      reader.readMessage(value,proto.event_tickets.TicketId.deserializeBinaryFromReader);
      msg.setTicket(value);
      break;
    case 3:
      var value = new proto.event_tickets.ValidateDetails;
      reader.readMessage(value,proto.event_tickets.ValidateDetails.deserializeBinaryFromReader);
      msg.setValidatedetails(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.event_tickets.ValidateTicketRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.event_tickets.ValidateTicketRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.event_tickets.ValidateTicketRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.event_tickets.ValidateTicketRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getMaxnumberofvalidations();
  if (f !== 0) {
    writer.writeUint32(
      1,
      f
    );
  }
  f = message.getTicket();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.event_tickets.TicketId.serializeBinaryToWriter
    );
  }
  f = message.getValidatedetails();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.event_tickets.ValidateDetails.serializeBinaryToWriter
    );
  }
};


/**
 * optional uint32 maxNumberOfValidations = 1;
 * @return {number}
 */
proto.event_tickets.ValidateTicketRequest.prototype.getMaxnumberofvalidations = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.event_tickets.ValidateTicketRequest} returns this
 */
proto.event_tickets.ValidateTicketRequest.prototype.setMaxnumberofvalidations = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional TicketId ticket = 2;
 * @return {?proto.event_tickets.TicketId}
 */
proto.event_tickets.ValidateTicketRequest.prototype.getTicket = function() {
  return /** @type{?proto.event_tickets.TicketId} */ (
    jspb.Message.getWrapperField(this, proto.event_tickets.TicketId, 2));
};


/**
 * @param {?proto.event_tickets.TicketId|undefined} value
 * @return {!proto.event_tickets.ValidateTicketRequest} returns this
*/
proto.event_tickets.ValidateTicketRequest.prototype.setTicket = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.event_tickets.ValidateTicketRequest} returns this
 */
proto.event_tickets.ValidateTicketRequest.prototype.clearTicket = function() {
  return this.setTicket(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.event_tickets.ValidateTicketRequest.prototype.hasTicket = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional ValidateDetails validateDetails = 3;
 * @return {?proto.event_tickets.ValidateDetails}
 */
proto.event_tickets.ValidateTicketRequest.prototype.getValidatedetails = function() {
  return /** @type{?proto.event_tickets.ValidateDetails} */ (
    jspb.Message.getWrapperField(this, proto.event_tickets.ValidateDetails, 3));
};


/**
 * @param {?proto.event_tickets.ValidateDetails|undefined} value
 * @return {!proto.event_tickets.ValidateTicketRequest} returns this
*/
proto.event_tickets.ValidateTicketRequest.prototype.setValidatedetails = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.event_tickets.ValidateTicketRequest} returns this
 */
proto.event_tickets.ValidateTicketRequest.prototype.clearValidatedetails = function() {
  return this.setValidatedetails(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.event_tickets.ValidateTicketRequest.prototype.hasValidatedetails = function() {
  return jspb.Message.getField(this, 3) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.event_tickets.ValidateTicketResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.event_tickets.ValidateTicketResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.event_tickets.ValidateTicketResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.event_tickets.ValidateTicketResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    valid: jspb.Message.getBooleanFieldWithDefault(msg, 1, false),
    ticket: (f = msg.getTicket()) && proto.event_tickets.Ticket.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.event_tickets.ValidateTicketResponse}
 */
proto.event_tickets.ValidateTicketResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.event_tickets.ValidateTicketResponse;
  return proto.event_tickets.ValidateTicketResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.event_tickets.ValidateTicketResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.event_tickets.ValidateTicketResponse}
 */
proto.event_tickets.ValidateTicketResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setValid(value);
      break;
    case 2:
      var value = new proto.event_tickets.Ticket;
      reader.readMessage(value,proto.event_tickets.Ticket.deserializeBinaryFromReader);
      msg.setTicket(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.event_tickets.ValidateTicketResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.event_tickets.ValidateTicketResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.event_tickets.ValidateTicketResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.event_tickets.ValidateTicketResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getValid();
  if (f) {
    writer.writeBool(
      1,
      f
    );
  }
  f = message.getTicket();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.event_tickets.Ticket.serializeBinaryToWriter
    );
  }
};


/**
 * optional bool valid = 1;
 * @return {boolean}
 */
proto.event_tickets.ValidateTicketResponse.prototype.getValid = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 1, false));
};


/**
 * @param {boolean} value
 * @return {!proto.event_tickets.ValidateTicketResponse} returns this
 */
proto.event_tickets.ValidateTicketResponse.prototype.setValid = function(value) {
  return jspb.Message.setProto3BooleanField(this, 1, value);
};


/**
 * optional Ticket ticket = 2;
 * @return {?proto.event_tickets.Ticket}
 */
proto.event_tickets.ValidateTicketResponse.prototype.getTicket = function() {
  return /** @type{?proto.event_tickets.Ticket} */ (
    jspb.Message.getWrapperField(this, proto.event_tickets.Ticket, 2));
};


/**
 * @param {?proto.event_tickets.Ticket|undefined} value
 * @return {!proto.event_tickets.ValidateTicketResponse} returns this
*/
proto.event_tickets.ValidateTicketResponse.prototype.setTicket = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.event_tickets.ValidateTicketResponse} returns this
 */
proto.event_tickets.ValidateTicketResponse.prototype.clearTicket = function() {
  return this.setTicket(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.event_tickets.ValidateTicketResponse.prototype.hasTicket = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.event_tickets.RedeemTicketRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.event_tickets.RedeemTicketRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.event_tickets.RedeemTicketRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.event_tickets.RedeemTicketRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    ticket: (f = msg.getTicket()) && proto.event_tickets.TicketId.toObject(includeInstance, f),
    redemptiondetails: (f = msg.getRedemptiondetails()) && proto.event_tickets.RedemptionDetails.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.event_tickets.RedeemTicketRequest}
 */
proto.event_tickets.RedeemTicketRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.event_tickets.RedeemTicketRequest;
  return proto.event_tickets.RedeemTicketRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.event_tickets.RedeemTicketRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.event_tickets.RedeemTicketRequest}
 */
proto.event_tickets.RedeemTicketRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.event_tickets.TicketId;
      reader.readMessage(value,proto.event_tickets.TicketId.deserializeBinaryFromReader);
      msg.setTicket(value);
      break;
    case 3:
      var value = new proto.event_tickets.RedemptionDetails;
      reader.readMessage(value,proto.event_tickets.RedemptionDetails.deserializeBinaryFromReader);
      msg.setRedemptiondetails(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.event_tickets.RedeemTicketRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.event_tickets.RedeemTicketRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.event_tickets.RedeemTicketRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.event_tickets.RedeemTicketRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTicket();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.event_tickets.TicketId.serializeBinaryToWriter
    );
  }
  f = message.getRedemptiondetails();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.event_tickets.RedemptionDetails.serializeBinaryToWriter
    );
  }
};


/**
 * optional TicketId ticket = 1;
 * @return {?proto.event_tickets.TicketId}
 */
proto.event_tickets.RedeemTicketRequest.prototype.getTicket = function() {
  return /** @type{?proto.event_tickets.TicketId} */ (
    jspb.Message.getWrapperField(this, proto.event_tickets.TicketId, 1));
};


/**
 * @param {?proto.event_tickets.TicketId|undefined} value
 * @return {!proto.event_tickets.RedeemTicketRequest} returns this
*/
proto.event_tickets.RedeemTicketRequest.prototype.setTicket = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.event_tickets.RedeemTicketRequest} returns this
 */
proto.event_tickets.RedeemTicketRequest.prototype.clearTicket = function() {
  return this.setTicket(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.event_tickets.RedeemTicketRequest.prototype.hasTicket = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional RedemptionDetails redemptionDetails = 3;
 * @return {?proto.event_tickets.RedemptionDetails}
 */
proto.event_tickets.RedeemTicketRequest.prototype.getRedemptiondetails = function() {
  return /** @type{?proto.event_tickets.RedemptionDetails} */ (
    jspb.Message.getWrapperField(this, proto.event_tickets.RedemptionDetails, 3));
};


/**
 * @param {?proto.event_tickets.RedemptionDetails|undefined} value
 * @return {!proto.event_tickets.RedeemTicketRequest} returns this
*/
proto.event_tickets.RedeemTicketRequest.prototype.setRedemptiondetails = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.event_tickets.RedeemTicketRequest} returns this
 */
proto.event_tickets.RedeemTicketRequest.prototype.clearRedemptiondetails = function() {
  return this.setRedemptiondetails(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.event_tickets.RedeemTicketRequest.prototype.hasRedemptiondetails = function() {
  return jspb.Message.getField(this, 3) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.event_tickets.TicketLimitedFields.repeatedFields_ = [18];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.event_tickets.TicketLimitedFields.prototype.toObject = function(opt_includeInstance) {
  return proto.event_tickets.TicketLimitedFields.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.event_tickets.TicketLimitedFields} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.event_tickets.TicketLimitedFields.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, ""),
    ticketnumber: jspb.Message.getFieldWithDefault(msg, 2, ""),
    production: (f = msg.getProduction()) && io_event_tickets_production_pb.ProductionLimitedFieldsResponse.toObject(includeInstance, f),
    event: (f = msg.getEvent()) && io_event_tickets_event_pb.EventLimitedFieldsResponse.toObject(includeInstance, f),
    venue: (f = msg.getVenue()) && io_event_tickets_venue_pb.VenueLimitedFieldsResponse.toObject(includeInstance, f),
    tickettype: (f = msg.getTickettype()) && io_event_tickets_ticket_type_pb.TicketTypeLimitedFields.toObject(includeInstance, f),
    ordernumber: jspb.Message.getFieldWithDefault(msg, 7, ""),
    groupingid: jspb.Message.getFieldWithDefault(msg, 8, ""),
    barcodecontents: jspb.Message.getFieldWithDefault(msg, 9, ""),
    seatinfo: (f = msg.getSeatinfo()) && proto.event_tickets.Seat.toObject(includeInstance, f),
    facevalue: (f = msg.getFacevalue()) && proto.event_tickets.FaceValue.toObject(includeInstance, f),
    person: (f = msg.getPerson()) && io_common_personal_pb.Person.toObject(includeInstance, f),
    metadataMap: (f = msg.getMetadataMap()) ? f.toObject(includeInstance, undefined) : [],
    optout: jspb.Message.getBooleanFieldWithDefault(msg, 14, false),
    status: jspb.Message.getFieldWithDefault(msg, 15, 0),
    expirydate: (f = msg.getExpirydate()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
    redemptiondetails: (f = msg.getRedemptiondetails()) && proto.event_tickets.RedemptionDetails.toObject(includeInstance, f),
    validatedetailsList: jspb.Message.toObjectList(msg.getValidatedetailsList(),
    proto.event_tickets.ValidateDetails.toObject, includeInstance),
    passoverrides: (f = msg.getPassoverrides()) && io_common_pass_pb.PassOverrides.toObject(includeInstance, f),
    passmetadata: (f = msg.getPassmetadata()) && io_common_metrics_pb.Metadata.toObject(includeInstance, f),
    created: (f = msg.getCreated()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
    updated: (f = msg.getUpdated()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.event_tickets.TicketLimitedFields}
 */
proto.event_tickets.TicketLimitedFields.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.event_tickets.TicketLimitedFields;
  return proto.event_tickets.TicketLimitedFields.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.event_tickets.TicketLimitedFields} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.event_tickets.TicketLimitedFields}
 */
proto.event_tickets.TicketLimitedFields.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setTicketnumber(value);
      break;
    case 3:
      var value = new io_event_tickets_production_pb.ProductionLimitedFieldsResponse;
      reader.readMessage(value,io_event_tickets_production_pb.ProductionLimitedFieldsResponse.deserializeBinaryFromReader);
      msg.setProduction(value);
      break;
    case 4:
      var value = new io_event_tickets_event_pb.EventLimitedFieldsResponse;
      reader.readMessage(value,io_event_tickets_event_pb.EventLimitedFieldsResponse.deserializeBinaryFromReader);
      msg.setEvent(value);
      break;
    case 5:
      var value = new io_event_tickets_venue_pb.VenueLimitedFieldsResponse;
      reader.readMessage(value,io_event_tickets_venue_pb.VenueLimitedFieldsResponse.deserializeBinaryFromReader);
      msg.setVenue(value);
      break;
    case 6:
      var value = new io_event_tickets_ticket_type_pb.TicketTypeLimitedFields;
      reader.readMessage(value,io_event_tickets_ticket_type_pb.TicketTypeLimitedFields.deserializeBinaryFromReader);
      msg.setTickettype(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setOrdernumber(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.setGroupingid(value);
      break;
    case 9:
      var value = /** @type {string} */ (reader.readString());
      msg.setBarcodecontents(value);
      break;
    case 10:
      var value = new proto.event_tickets.Seat;
      reader.readMessage(value,proto.event_tickets.Seat.deserializeBinaryFromReader);
      msg.setSeatinfo(value);
      break;
    case 11:
      var value = new proto.event_tickets.FaceValue;
      reader.readMessage(value,proto.event_tickets.FaceValue.deserializeBinaryFromReader);
      msg.setFacevalue(value);
      break;
    case 12:
      var value = new io_common_personal_pb.Person;
      reader.readMessage(value,io_common_personal_pb.Person.deserializeBinaryFromReader);
      msg.setPerson(value);
      break;
    case 13:
      var value = msg.getMetadataMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readString, null, "", "");
         });
      break;
    case 14:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setOptout(value);
      break;
    case 15:
      var value = /** @type {!proto.event_tickets.TicketStatus} */ (reader.readEnum());
      msg.setStatus(value);
      break;
    case 16:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setExpirydate(value);
      break;
    case 17:
      var value = new proto.event_tickets.RedemptionDetails;
      reader.readMessage(value,proto.event_tickets.RedemptionDetails.deserializeBinaryFromReader);
      msg.setRedemptiondetails(value);
      break;
    case 18:
      var value = new proto.event_tickets.ValidateDetails;
      reader.readMessage(value,proto.event_tickets.ValidateDetails.deserializeBinaryFromReader);
      msg.addValidatedetails(value);
      break;
    case 19:
      var value = new io_common_pass_pb.PassOverrides;
      reader.readMessage(value,io_common_pass_pb.PassOverrides.deserializeBinaryFromReader);
      msg.setPassoverrides(value);
      break;
    case 20:
      var value = new io_common_metrics_pb.Metadata;
      reader.readMessage(value,io_common_metrics_pb.Metadata.deserializeBinaryFromReader);
      msg.setPassmetadata(value);
      break;
    case 21:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setCreated(value);
      break;
    case 22:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setUpdated(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.event_tickets.TicketLimitedFields.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.event_tickets.TicketLimitedFields.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.event_tickets.TicketLimitedFields} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.event_tickets.TicketLimitedFields.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getTicketnumber();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getProduction();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      io_event_tickets_production_pb.ProductionLimitedFieldsResponse.serializeBinaryToWriter
    );
  }
  f = message.getEvent();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      io_event_tickets_event_pb.EventLimitedFieldsResponse.serializeBinaryToWriter
    );
  }
  f = message.getVenue();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      io_event_tickets_venue_pb.VenueLimitedFieldsResponse.serializeBinaryToWriter
    );
  }
  f = message.getTickettype();
  if (f != null) {
    writer.writeMessage(
      6,
      f,
      io_event_tickets_ticket_type_pb.TicketTypeLimitedFields.serializeBinaryToWriter
    );
  }
  f = message.getOrdernumber();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
  f = message.getGroupingid();
  if (f.length > 0) {
    writer.writeString(
      8,
      f
    );
  }
  f = message.getBarcodecontents();
  if (f.length > 0) {
    writer.writeString(
      9,
      f
    );
  }
  f = message.getSeatinfo();
  if (f != null) {
    writer.writeMessage(
      10,
      f,
      proto.event_tickets.Seat.serializeBinaryToWriter
    );
  }
  f = message.getFacevalue();
  if (f != null) {
    writer.writeMessage(
      11,
      f,
      proto.event_tickets.FaceValue.serializeBinaryToWriter
    );
  }
  f = message.getPerson();
  if (f != null) {
    writer.writeMessage(
      12,
      f,
      io_common_personal_pb.Person.serializeBinaryToWriter
    );
  }
  f = message.getMetadataMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(13, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeString);
  }
  f = message.getOptout();
  if (f) {
    writer.writeBool(
      14,
      f
    );
  }
  f = message.getStatus();
  if (f !== 0.0) {
    writer.writeEnum(
      15,
      f
    );
  }
  f = message.getExpirydate();
  if (f != null) {
    writer.writeMessage(
      16,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getRedemptiondetails();
  if (f != null) {
    writer.writeMessage(
      17,
      f,
      proto.event_tickets.RedemptionDetails.serializeBinaryToWriter
    );
  }
  f = message.getValidatedetailsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      18,
      f,
      proto.event_tickets.ValidateDetails.serializeBinaryToWriter
    );
  }
  f = message.getPassoverrides();
  if (f != null) {
    writer.writeMessage(
      19,
      f,
      io_common_pass_pb.PassOverrides.serializeBinaryToWriter
    );
  }
  f = message.getPassmetadata();
  if (f != null) {
    writer.writeMessage(
      20,
      f,
      io_common_metrics_pb.Metadata.serializeBinaryToWriter
    );
  }
  f = message.getCreated();
  if (f != null) {
    writer.writeMessage(
      21,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getUpdated();
  if (f != null) {
    writer.writeMessage(
      22,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.event_tickets.TicketLimitedFields.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.event_tickets.TicketLimitedFields} returns this
 */
proto.event_tickets.TicketLimitedFields.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string ticketNumber = 2;
 * @return {string}
 */
proto.event_tickets.TicketLimitedFields.prototype.getTicketnumber = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.event_tickets.TicketLimitedFields} returns this
 */
proto.event_tickets.TicketLimitedFields.prototype.setTicketnumber = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional ProductionLimitedFieldsResponse production = 3;
 * @return {?proto.event_tickets.ProductionLimitedFieldsResponse}
 */
proto.event_tickets.TicketLimitedFields.prototype.getProduction = function() {
  return /** @type{?proto.event_tickets.ProductionLimitedFieldsResponse} */ (
    jspb.Message.getWrapperField(this, io_event_tickets_production_pb.ProductionLimitedFieldsResponse, 3));
};


/**
 * @param {?proto.event_tickets.ProductionLimitedFieldsResponse|undefined} value
 * @return {!proto.event_tickets.TicketLimitedFields} returns this
*/
proto.event_tickets.TicketLimitedFields.prototype.setProduction = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.event_tickets.TicketLimitedFields} returns this
 */
proto.event_tickets.TicketLimitedFields.prototype.clearProduction = function() {
  return this.setProduction(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.event_tickets.TicketLimitedFields.prototype.hasProduction = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional EventLimitedFieldsResponse event = 4;
 * @return {?proto.event_tickets.EventLimitedFieldsResponse}
 */
proto.event_tickets.TicketLimitedFields.prototype.getEvent = function() {
  return /** @type{?proto.event_tickets.EventLimitedFieldsResponse} */ (
    jspb.Message.getWrapperField(this, io_event_tickets_event_pb.EventLimitedFieldsResponse, 4));
};


/**
 * @param {?proto.event_tickets.EventLimitedFieldsResponse|undefined} value
 * @return {!proto.event_tickets.TicketLimitedFields} returns this
*/
proto.event_tickets.TicketLimitedFields.prototype.setEvent = function(value) {
  return jspb.Message.setWrapperField(this, 4, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.event_tickets.TicketLimitedFields} returns this
 */
proto.event_tickets.TicketLimitedFields.prototype.clearEvent = function() {
  return this.setEvent(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.event_tickets.TicketLimitedFields.prototype.hasEvent = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional VenueLimitedFieldsResponse venue = 5;
 * @return {?proto.event_tickets.VenueLimitedFieldsResponse}
 */
proto.event_tickets.TicketLimitedFields.prototype.getVenue = function() {
  return /** @type{?proto.event_tickets.VenueLimitedFieldsResponse} */ (
    jspb.Message.getWrapperField(this, io_event_tickets_venue_pb.VenueLimitedFieldsResponse, 5));
};


/**
 * @param {?proto.event_tickets.VenueLimitedFieldsResponse|undefined} value
 * @return {!proto.event_tickets.TicketLimitedFields} returns this
*/
proto.event_tickets.TicketLimitedFields.prototype.setVenue = function(value) {
  return jspb.Message.setWrapperField(this, 5, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.event_tickets.TicketLimitedFields} returns this
 */
proto.event_tickets.TicketLimitedFields.prototype.clearVenue = function() {
  return this.setVenue(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.event_tickets.TicketLimitedFields.prototype.hasVenue = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional TicketTypeLimitedFields ticketType = 6;
 * @return {?proto.event_tickets.TicketTypeLimitedFields}
 */
proto.event_tickets.TicketLimitedFields.prototype.getTickettype = function() {
  return /** @type{?proto.event_tickets.TicketTypeLimitedFields} */ (
    jspb.Message.getWrapperField(this, io_event_tickets_ticket_type_pb.TicketTypeLimitedFields, 6));
};


/**
 * @param {?proto.event_tickets.TicketTypeLimitedFields|undefined} value
 * @return {!proto.event_tickets.TicketLimitedFields} returns this
*/
proto.event_tickets.TicketLimitedFields.prototype.setTickettype = function(value) {
  return jspb.Message.setWrapperField(this, 6, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.event_tickets.TicketLimitedFields} returns this
 */
proto.event_tickets.TicketLimitedFields.prototype.clearTickettype = function() {
  return this.setTickettype(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.event_tickets.TicketLimitedFields.prototype.hasTickettype = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional string orderNumber = 7;
 * @return {string}
 */
proto.event_tickets.TicketLimitedFields.prototype.getOrdernumber = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.event_tickets.TicketLimitedFields} returns this
 */
proto.event_tickets.TicketLimitedFields.prototype.setOrdernumber = function(value) {
  return jspb.Message.setProto3StringField(this, 7, value);
};


/**
 * optional string groupingId = 8;
 * @return {string}
 */
proto.event_tickets.TicketLimitedFields.prototype.getGroupingid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, ""));
};


/**
 * @param {string} value
 * @return {!proto.event_tickets.TicketLimitedFields} returns this
 */
proto.event_tickets.TicketLimitedFields.prototype.setGroupingid = function(value) {
  return jspb.Message.setProto3StringField(this, 8, value);
};


/**
 * optional string barcodeContents = 9;
 * @return {string}
 */
proto.event_tickets.TicketLimitedFields.prototype.getBarcodecontents = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 9, ""));
};


/**
 * @param {string} value
 * @return {!proto.event_tickets.TicketLimitedFields} returns this
 */
proto.event_tickets.TicketLimitedFields.prototype.setBarcodecontents = function(value) {
  return jspb.Message.setProto3StringField(this, 9, value);
};


/**
 * optional Seat seatInfo = 10;
 * @return {?proto.event_tickets.Seat}
 */
proto.event_tickets.TicketLimitedFields.prototype.getSeatinfo = function() {
  return /** @type{?proto.event_tickets.Seat} */ (
    jspb.Message.getWrapperField(this, proto.event_tickets.Seat, 10));
};


/**
 * @param {?proto.event_tickets.Seat|undefined} value
 * @return {!proto.event_tickets.TicketLimitedFields} returns this
*/
proto.event_tickets.TicketLimitedFields.prototype.setSeatinfo = function(value) {
  return jspb.Message.setWrapperField(this, 10, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.event_tickets.TicketLimitedFields} returns this
 */
proto.event_tickets.TicketLimitedFields.prototype.clearSeatinfo = function() {
  return this.setSeatinfo(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.event_tickets.TicketLimitedFields.prototype.hasSeatinfo = function() {
  return jspb.Message.getField(this, 10) != null;
};


/**
 * optional FaceValue faceValue = 11;
 * @return {?proto.event_tickets.FaceValue}
 */
proto.event_tickets.TicketLimitedFields.prototype.getFacevalue = function() {
  return /** @type{?proto.event_tickets.FaceValue} */ (
    jspb.Message.getWrapperField(this, proto.event_tickets.FaceValue, 11));
};


/**
 * @param {?proto.event_tickets.FaceValue|undefined} value
 * @return {!proto.event_tickets.TicketLimitedFields} returns this
*/
proto.event_tickets.TicketLimitedFields.prototype.setFacevalue = function(value) {
  return jspb.Message.setWrapperField(this, 11, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.event_tickets.TicketLimitedFields} returns this
 */
proto.event_tickets.TicketLimitedFields.prototype.clearFacevalue = function() {
  return this.setFacevalue(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.event_tickets.TicketLimitedFields.prototype.hasFacevalue = function() {
  return jspb.Message.getField(this, 11) != null;
};


/**
 * optional io.Person person = 12;
 * @return {?proto.io.Person}
 */
proto.event_tickets.TicketLimitedFields.prototype.getPerson = function() {
  return /** @type{?proto.io.Person} */ (
    jspb.Message.getWrapperField(this, io_common_personal_pb.Person, 12));
};


/**
 * @param {?proto.io.Person|undefined} value
 * @return {!proto.event_tickets.TicketLimitedFields} returns this
*/
proto.event_tickets.TicketLimitedFields.prototype.setPerson = function(value) {
  return jspb.Message.setWrapperField(this, 12, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.event_tickets.TicketLimitedFields} returns this
 */
proto.event_tickets.TicketLimitedFields.prototype.clearPerson = function() {
  return this.setPerson(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.event_tickets.TicketLimitedFields.prototype.hasPerson = function() {
  return jspb.Message.getField(this, 12) != null;
};


/**
 * map<string, string> metaData = 13;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<string,string>}
 */
proto.event_tickets.TicketLimitedFields.prototype.getMetadataMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<string,string>} */ (
      jspb.Message.getMapField(this, 13, opt_noLazyCreate,
      null));
};


/**
 * Clears values from the map. The map will be non-null.
 * @return {!proto.event_tickets.TicketLimitedFields} returns this
 */
proto.event_tickets.TicketLimitedFields.prototype.clearMetadataMap = function() {
  this.getMetadataMap().clear();
  return this;};


/**
 * optional bool optOut = 14;
 * @return {boolean}
 */
proto.event_tickets.TicketLimitedFields.prototype.getOptout = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 14, false));
};


/**
 * @param {boolean} value
 * @return {!proto.event_tickets.TicketLimitedFields} returns this
 */
proto.event_tickets.TicketLimitedFields.prototype.setOptout = function(value) {
  return jspb.Message.setProto3BooleanField(this, 14, value);
};


/**
 * optional TicketStatus status = 15;
 * @return {!proto.event_tickets.TicketStatus}
 */
proto.event_tickets.TicketLimitedFields.prototype.getStatus = function() {
  return /** @type {!proto.event_tickets.TicketStatus} */ (jspb.Message.getFieldWithDefault(this, 15, 0));
};


/**
 * @param {!proto.event_tickets.TicketStatus} value
 * @return {!proto.event_tickets.TicketLimitedFields} returns this
 */
proto.event_tickets.TicketLimitedFields.prototype.setStatus = function(value) {
  return jspb.Message.setProto3EnumField(this, 15, value);
};


/**
 * optional google.protobuf.Timestamp expiryDate = 16;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.event_tickets.TicketLimitedFields.prototype.getExpirydate = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 16));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.event_tickets.TicketLimitedFields} returns this
*/
proto.event_tickets.TicketLimitedFields.prototype.setExpirydate = function(value) {
  return jspb.Message.setWrapperField(this, 16, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.event_tickets.TicketLimitedFields} returns this
 */
proto.event_tickets.TicketLimitedFields.prototype.clearExpirydate = function() {
  return this.setExpirydate(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.event_tickets.TicketLimitedFields.prototype.hasExpirydate = function() {
  return jspb.Message.getField(this, 16) != null;
};


/**
 * optional RedemptionDetails redemptionDetails = 17;
 * @return {?proto.event_tickets.RedemptionDetails}
 */
proto.event_tickets.TicketLimitedFields.prototype.getRedemptiondetails = function() {
  return /** @type{?proto.event_tickets.RedemptionDetails} */ (
    jspb.Message.getWrapperField(this, proto.event_tickets.RedemptionDetails, 17));
};


/**
 * @param {?proto.event_tickets.RedemptionDetails|undefined} value
 * @return {!proto.event_tickets.TicketLimitedFields} returns this
*/
proto.event_tickets.TicketLimitedFields.prototype.setRedemptiondetails = function(value) {
  return jspb.Message.setWrapperField(this, 17, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.event_tickets.TicketLimitedFields} returns this
 */
proto.event_tickets.TicketLimitedFields.prototype.clearRedemptiondetails = function() {
  return this.setRedemptiondetails(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.event_tickets.TicketLimitedFields.prototype.hasRedemptiondetails = function() {
  return jspb.Message.getField(this, 17) != null;
};


/**
 * repeated ValidateDetails validateDetails = 18;
 * @return {!Array<!proto.event_tickets.ValidateDetails>}
 */
proto.event_tickets.TicketLimitedFields.prototype.getValidatedetailsList = function() {
  return /** @type{!Array<!proto.event_tickets.ValidateDetails>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.event_tickets.ValidateDetails, 18));
};


/**
 * @param {!Array<!proto.event_tickets.ValidateDetails>} value
 * @return {!proto.event_tickets.TicketLimitedFields} returns this
*/
proto.event_tickets.TicketLimitedFields.prototype.setValidatedetailsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 18, value);
};


/**
 * @param {!proto.event_tickets.ValidateDetails=} opt_value
 * @param {number=} opt_index
 * @return {!proto.event_tickets.ValidateDetails}
 */
proto.event_tickets.TicketLimitedFields.prototype.addValidatedetails = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 18, opt_value, proto.event_tickets.ValidateDetails, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.event_tickets.TicketLimitedFields} returns this
 */
proto.event_tickets.TicketLimitedFields.prototype.clearValidatedetailsList = function() {
  return this.setValidatedetailsList([]);
};


/**
 * optional io.PassOverrides passOverrides = 19;
 * @return {?proto.io.PassOverrides}
 */
proto.event_tickets.TicketLimitedFields.prototype.getPassoverrides = function() {
  return /** @type{?proto.io.PassOverrides} */ (
    jspb.Message.getWrapperField(this, io_common_pass_pb.PassOverrides, 19));
};


/**
 * @param {?proto.io.PassOverrides|undefined} value
 * @return {!proto.event_tickets.TicketLimitedFields} returns this
*/
proto.event_tickets.TicketLimitedFields.prototype.setPassoverrides = function(value) {
  return jspb.Message.setWrapperField(this, 19, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.event_tickets.TicketLimitedFields} returns this
 */
proto.event_tickets.TicketLimitedFields.prototype.clearPassoverrides = function() {
  return this.setPassoverrides(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.event_tickets.TicketLimitedFields.prototype.hasPassoverrides = function() {
  return jspb.Message.getField(this, 19) != null;
};


/**
 * optional io.Metadata passMetaData = 20;
 * @return {?proto.io.Metadata}
 */
proto.event_tickets.TicketLimitedFields.prototype.getPassmetadata = function() {
  return /** @type{?proto.io.Metadata} */ (
    jspb.Message.getWrapperField(this, io_common_metrics_pb.Metadata, 20));
};


/**
 * @param {?proto.io.Metadata|undefined} value
 * @return {!proto.event_tickets.TicketLimitedFields} returns this
*/
proto.event_tickets.TicketLimitedFields.prototype.setPassmetadata = function(value) {
  return jspb.Message.setWrapperField(this, 20, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.event_tickets.TicketLimitedFields} returns this
 */
proto.event_tickets.TicketLimitedFields.prototype.clearPassmetadata = function() {
  return this.setPassmetadata(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.event_tickets.TicketLimitedFields.prototype.hasPassmetadata = function() {
  return jspb.Message.getField(this, 20) != null;
};


/**
 * optional google.protobuf.Timestamp created = 21;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.event_tickets.TicketLimitedFields.prototype.getCreated = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 21));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.event_tickets.TicketLimitedFields} returns this
*/
proto.event_tickets.TicketLimitedFields.prototype.setCreated = function(value) {
  return jspb.Message.setWrapperField(this, 21, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.event_tickets.TicketLimitedFields} returns this
 */
proto.event_tickets.TicketLimitedFields.prototype.clearCreated = function() {
  return this.setCreated(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.event_tickets.TicketLimitedFields.prototype.hasCreated = function() {
  return jspb.Message.getField(this, 21) != null;
};


/**
 * optional google.protobuf.Timestamp updated = 22;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.event_tickets.TicketLimitedFields.prototype.getUpdated = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 22));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.event_tickets.TicketLimitedFields} returns this
*/
proto.event_tickets.TicketLimitedFields.prototype.setUpdated = function(value) {
  return jspb.Message.setWrapperField(this, 22, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.event_tickets.TicketLimitedFields} returns this
 */
proto.event_tickets.TicketLimitedFields.prototype.clearUpdated = function() {
  return this.setUpdated(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.event_tickets.TicketLimitedFields.prototype.hasUpdated = function() {
  return jspb.Message.getField(this, 22) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.event_tickets.IssueTicketRequest.repeatedFields_ = [16];

/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.event_tickets.IssueTicketRequest.oneofGroups_ = [[1,2]];

/**
 * @enum {number}
 */
proto.event_tickets.IssueTicketRequest.EventinfoCase = {
  EVENTINFO_NOT_SET: 0,
  EVENTID: 1,
  EVENT: 2
};

/**
 * @return {proto.event_tickets.IssueTicketRequest.EventinfoCase}
 */
proto.event_tickets.IssueTicketRequest.prototype.getEventinfoCase = function() {
  return /** @type {proto.event_tickets.IssueTicketRequest.EventinfoCase} */(jspb.Message.computeOneofCase(this, proto.event_tickets.IssueTicketRequest.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.event_tickets.IssueTicketRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.event_tickets.IssueTicketRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.event_tickets.IssueTicketRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.event_tickets.IssueTicketRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    eventid: jspb.Message.getFieldWithDefault(msg, 1, ""),
    event: (f = msg.getEvent()) && io_event_tickets_event_pb.EventLimitedFieldsRequest.toObject(includeInstance, f),
    tickettypeid: jspb.Message.getFieldWithDefault(msg, 3, ""),
    ticketnumber: jspb.Message.getFieldWithDefault(msg, 4, ""),
    ordernumber: jspb.Message.getFieldWithDefault(msg, 5, ""),
    groupingid: jspb.Message.getFieldWithDefault(msg, 6, ""),
    barcodecontents: jspb.Message.getFieldWithDefault(msg, 7, ""),
    seatinfo: (f = msg.getSeatinfo()) && proto.event_tickets.Seat.toObject(includeInstance, f),
    facevalue: (f = msg.getFacevalue()) && proto.event_tickets.FaceValue.toObject(includeInstance, f),
    person: (f = msg.getPerson()) && io_common_personal_pb.Person.toObject(includeInstance, f),
    metadataMap: (f = msg.getMetadataMap()) ? f.toObject(includeInstance, undefined) : [],
    optout: jspb.Message.getBooleanFieldWithDefault(msg, 12, false),
    status: jspb.Message.getFieldWithDefault(msg, 13, 0),
    expirydate: (f = msg.getExpirydate()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
    redemptiondetails: (f = msg.getRedemptiondetails()) && proto.event_tickets.RedemptionDetails.toObject(includeInstance, f),
    validatedetailsList: jspb.Message.toObjectList(msg.getValidatedetailsList(),
    proto.event_tickets.ValidateDetails.toObject, includeInstance),
    passoverrides: (f = msg.getPassoverrides()) && io_common_pass_pb.PassOverrides.toObject(includeInstance, f),
    passmetadata: (f = msg.getPassmetadata()) && io_common_metrics_pb.Metadata.toObject(includeInstance, f),
    created: (f = msg.getCreated()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
    updated: (f = msg.getUpdated()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.event_tickets.IssueTicketRequest}
 */
proto.event_tickets.IssueTicketRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.event_tickets.IssueTicketRequest;
  return proto.event_tickets.IssueTicketRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.event_tickets.IssueTicketRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.event_tickets.IssueTicketRequest}
 */
proto.event_tickets.IssueTicketRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setEventid(value);
      break;
    case 2:
      var value = new io_event_tickets_event_pb.EventLimitedFieldsRequest;
      reader.readMessage(value,io_event_tickets_event_pb.EventLimitedFieldsRequest.deserializeBinaryFromReader);
      msg.setEvent(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setTickettypeid(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setTicketnumber(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setOrdernumber(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setGroupingid(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setBarcodecontents(value);
      break;
    case 8:
      var value = new proto.event_tickets.Seat;
      reader.readMessage(value,proto.event_tickets.Seat.deserializeBinaryFromReader);
      msg.setSeatinfo(value);
      break;
    case 9:
      var value = new proto.event_tickets.FaceValue;
      reader.readMessage(value,proto.event_tickets.FaceValue.deserializeBinaryFromReader);
      msg.setFacevalue(value);
      break;
    case 10:
      var value = new io_common_personal_pb.Person;
      reader.readMessage(value,io_common_personal_pb.Person.deserializeBinaryFromReader);
      msg.setPerson(value);
      break;
    case 11:
      var value = msg.getMetadataMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readString, null, "", "");
         });
      break;
    case 12:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setOptout(value);
      break;
    case 13:
      var value = /** @type {!proto.event_tickets.TicketStatus} */ (reader.readEnum());
      msg.setStatus(value);
      break;
    case 14:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setExpirydate(value);
      break;
    case 15:
      var value = new proto.event_tickets.RedemptionDetails;
      reader.readMessage(value,proto.event_tickets.RedemptionDetails.deserializeBinaryFromReader);
      msg.setRedemptiondetails(value);
      break;
    case 16:
      var value = new proto.event_tickets.ValidateDetails;
      reader.readMessage(value,proto.event_tickets.ValidateDetails.deserializeBinaryFromReader);
      msg.addValidatedetails(value);
      break;
    case 17:
      var value = new io_common_pass_pb.PassOverrides;
      reader.readMessage(value,io_common_pass_pb.PassOverrides.deserializeBinaryFromReader);
      msg.setPassoverrides(value);
      break;
    case 18:
      var value = new io_common_metrics_pb.Metadata;
      reader.readMessage(value,io_common_metrics_pb.Metadata.deserializeBinaryFromReader);
      msg.setPassmetadata(value);
      break;
    case 19:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setCreated(value);
      break;
    case 20:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setUpdated(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.event_tickets.IssueTicketRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.event_tickets.IssueTicketRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.event_tickets.IssueTicketRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.event_tickets.IssueTicketRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {string} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getEvent();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      io_event_tickets_event_pb.EventLimitedFieldsRequest.serializeBinaryToWriter
    );
  }
  f = message.getTickettypeid();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getTicketnumber();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getOrdernumber();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getGroupingid();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getBarcodecontents();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
  f = message.getSeatinfo();
  if (f != null) {
    writer.writeMessage(
      8,
      f,
      proto.event_tickets.Seat.serializeBinaryToWriter
    );
  }
  f = message.getFacevalue();
  if (f != null) {
    writer.writeMessage(
      9,
      f,
      proto.event_tickets.FaceValue.serializeBinaryToWriter
    );
  }
  f = message.getPerson();
  if (f != null) {
    writer.writeMessage(
      10,
      f,
      io_common_personal_pb.Person.serializeBinaryToWriter
    );
  }
  f = message.getMetadataMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(11, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeString);
  }
  f = message.getOptout();
  if (f) {
    writer.writeBool(
      12,
      f
    );
  }
  f = message.getStatus();
  if (f !== 0.0) {
    writer.writeEnum(
      13,
      f
    );
  }
  f = message.getExpirydate();
  if (f != null) {
    writer.writeMessage(
      14,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getRedemptiondetails();
  if (f != null) {
    writer.writeMessage(
      15,
      f,
      proto.event_tickets.RedemptionDetails.serializeBinaryToWriter
    );
  }
  f = message.getValidatedetailsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      16,
      f,
      proto.event_tickets.ValidateDetails.serializeBinaryToWriter
    );
  }
  f = message.getPassoverrides();
  if (f != null) {
    writer.writeMessage(
      17,
      f,
      io_common_pass_pb.PassOverrides.serializeBinaryToWriter
    );
  }
  f = message.getPassmetadata();
  if (f != null) {
    writer.writeMessage(
      18,
      f,
      io_common_metrics_pb.Metadata.serializeBinaryToWriter
    );
  }
  f = message.getCreated();
  if (f != null) {
    writer.writeMessage(
      19,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getUpdated();
  if (f != null) {
    writer.writeMessage(
      20,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
};


/**
 * optional string eventId = 1;
 * @return {string}
 */
proto.event_tickets.IssueTicketRequest.prototype.getEventid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.event_tickets.IssueTicketRequest} returns this
 */
proto.event_tickets.IssueTicketRequest.prototype.setEventid = function(value) {
  return jspb.Message.setOneofField(this, 1, proto.event_tickets.IssueTicketRequest.oneofGroups_[0], value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.event_tickets.IssueTicketRequest} returns this
 */
proto.event_tickets.IssueTicketRequest.prototype.clearEventid = function() {
  return jspb.Message.setOneofField(this, 1, proto.event_tickets.IssueTicketRequest.oneofGroups_[0], undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.event_tickets.IssueTicketRequest.prototype.hasEventid = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional EventLimitedFieldsRequest event = 2;
 * @return {?proto.event_tickets.EventLimitedFieldsRequest}
 */
proto.event_tickets.IssueTicketRequest.prototype.getEvent = function() {
  return /** @type{?proto.event_tickets.EventLimitedFieldsRequest} */ (
    jspb.Message.getWrapperField(this, io_event_tickets_event_pb.EventLimitedFieldsRequest, 2));
};


/**
 * @param {?proto.event_tickets.EventLimitedFieldsRequest|undefined} value
 * @return {!proto.event_tickets.IssueTicketRequest} returns this
*/
proto.event_tickets.IssueTicketRequest.prototype.setEvent = function(value) {
  return jspb.Message.setOneofWrapperField(this, 2, proto.event_tickets.IssueTicketRequest.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.event_tickets.IssueTicketRequest} returns this
 */
proto.event_tickets.IssueTicketRequest.prototype.clearEvent = function() {
  return this.setEvent(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.event_tickets.IssueTicketRequest.prototype.hasEvent = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional string ticketTypeId = 3;
 * @return {string}
 */
proto.event_tickets.IssueTicketRequest.prototype.getTickettypeid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.event_tickets.IssueTicketRequest} returns this
 */
proto.event_tickets.IssueTicketRequest.prototype.setTickettypeid = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string ticketNumber = 4;
 * @return {string}
 */
proto.event_tickets.IssueTicketRequest.prototype.getTicketnumber = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.event_tickets.IssueTicketRequest} returns this
 */
proto.event_tickets.IssueTicketRequest.prototype.setTicketnumber = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string orderNumber = 5;
 * @return {string}
 */
proto.event_tickets.IssueTicketRequest.prototype.getOrdernumber = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.event_tickets.IssueTicketRequest} returns this
 */
proto.event_tickets.IssueTicketRequest.prototype.setOrdernumber = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional string groupingId = 6;
 * @return {string}
 */
proto.event_tickets.IssueTicketRequest.prototype.getGroupingid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.event_tickets.IssueTicketRequest} returns this
 */
proto.event_tickets.IssueTicketRequest.prototype.setGroupingid = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional string barcodeContents = 7;
 * @return {string}
 */
proto.event_tickets.IssueTicketRequest.prototype.getBarcodecontents = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.event_tickets.IssueTicketRequest} returns this
 */
proto.event_tickets.IssueTicketRequest.prototype.setBarcodecontents = function(value) {
  return jspb.Message.setProto3StringField(this, 7, value);
};


/**
 * optional Seat seatInfo = 8;
 * @return {?proto.event_tickets.Seat}
 */
proto.event_tickets.IssueTicketRequest.prototype.getSeatinfo = function() {
  return /** @type{?proto.event_tickets.Seat} */ (
    jspb.Message.getWrapperField(this, proto.event_tickets.Seat, 8));
};


/**
 * @param {?proto.event_tickets.Seat|undefined} value
 * @return {!proto.event_tickets.IssueTicketRequest} returns this
*/
proto.event_tickets.IssueTicketRequest.prototype.setSeatinfo = function(value) {
  return jspb.Message.setWrapperField(this, 8, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.event_tickets.IssueTicketRequest} returns this
 */
proto.event_tickets.IssueTicketRequest.prototype.clearSeatinfo = function() {
  return this.setSeatinfo(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.event_tickets.IssueTicketRequest.prototype.hasSeatinfo = function() {
  return jspb.Message.getField(this, 8) != null;
};


/**
 * optional FaceValue faceValue = 9;
 * @return {?proto.event_tickets.FaceValue}
 */
proto.event_tickets.IssueTicketRequest.prototype.getFacevalue = function() {
  return /** @type{?proto.event_tickets.FaceValue} */ (
    jspb.Message.getWrapperField(this, proto.event_tickets.FaceValue, 9));
};


/**
 * @param {?proto.event_tickets.FaceValue|undefined} value
 * @return {!proto.event_tickets.IssueTicketRequest} returns this
*/
proto.event_tickets.IssueTicketRequest.prototype.setFacevalue = function(value) {
  return jspb.Message.setWrapperField(this, 9, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.event_tickets.IssueTicketRequest} returns this
 */
proto.event_tickets.IssueTicketRequest.prototype.clearFacevalue = function() {
  return this.setFacevalue(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.event_tickets.IssueTicketRequest.prototype.hasFacevalue = function() {
  return jspb.Message.getField(this, 9) != null;
};


/**
 * optional io.Person person = 10;
 * @return {?proto.io.Person}
 */
proto.event_tickets.IssueTicketRequest.prototype.getPerson = function() {
  return /** @type{?proto.io.Person} */ (
    jspb.Message.getWrapperField(this, io_common_personal_pb.Person, 10));
};


/**
 * @param {?proto.io.Person|undefined} value
 * @return {!proto.event_tickets.IssueTicketRequest} returns this
*/
proto.event_tickets.IssueTicketRequest.prototype.setPerson = function(value) {
  return jspb.Message.setWrapperField(this, 10, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.event_tickets.IssueTicketRequest} returns this
 */
proto.event_tickets.IssueTicketRequest.prototype.clearPerson = function() {
  return this.setPerson(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.event_tickets.IssueTicketRequest.prototype.hasPerson = function() {
  return jspb.Message.getField(this, 10) != null;
};


/**
 * map<string, string> metaData = 11;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<string,string>}
 */
proto.event_tickets.IssueTicketRequest.prototype.getMetadataMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<string,string>} */ (
      jspb.Message.getMapField(this, 11, opt_noLazyCreate,
      null));
};


/**
 * Clears values from the map. The map will be non-null.
 * @return {!proto.event_tickets.IssueTicketRequest} returns this
 */
proto.event_tickets.IssueTicketRequest.prototype.clearMetadataMap = function() {
  this.getMetadataMap().clear();
  return this;};


/**
 * optional bool optOut = 12;
 * @return {boolean}
 */
proto.event_tickets.IssueTicketRequest.prototype.getOptout = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 12, false));
};


/**
 * @param {boolean} value
 * @return {!proto.event_tickets.IssueTicketRequest} returns this
 */
proto.event_tickets.IssueTicketRequest.prototype.setOptout = function(value) {
  return jspb.Message.setProto3BooleanField(this, 12, value);
};


/**
 * optional TicketStatus status = 13;
 * @return {!proto.event_tickets.TicketStatus}
 */
proto.event_tickets.IssueTicketRequest.prototype.getStatus = function() {
  return /** @type {!proto.event_tickets.TicketStatus} */ (jspb.Message.getFieldWithDefault(this, 13, 0));
};


/**
 * @param {!proto.event_tickets.TicketStatus} value
 * @return {!proto.event_tickets.IssueTicketRequest} returns this
 */
proto.event_tickets.IssueTicketRequest.prototype.setStatus = function(value) {
  return jspb.Message.setProto3EnumField(this, 13, value);
};


/**
 * optional google.protobuf.Timestamp expiryDate = 14;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.event_tickets.IssueTicketRequest.prototype.getExpirydate = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 14));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.event_tickets.IssueTicketRequest} returns this
*/
proto.event_tickets.IssueTicketRequest.prototype.setExpirydate = function(value) {
  return jspb.Message.setWrapperField(this, 14, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.event_tickets.IssueTicketRequest} returns this
 */
proto.event_tickets.IssueTicketRequest.prototype.clearExpirydate = function() {
  return this.setExpirydate(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.event_tickets.IssueTicketRequest.prototype.hasExpirydate = function() {
  return jspb.Message.getField(this, 14) != null;
};


/**
 * optional RedemptionDetails redemptionDetails = 15;
 * @return {?proto.event_tickets.RedemptionDetails}
 */
proto.event_tickets.IssueTicketRequest.prototype.getRedemptiondetails = function() {
  return /** @type{?proto.event_tickets.RedemptionDetails} */ (
    jspb.Message.getWrapperField(this, proto.event_tickets.RedemptionDetails, 15));
};


/**
 * @param {?proto.event_tickets.RedemptionDetails|undefined} value
 * @return {!proto.event_tickets.IssueTicketRequest} returns this
*/
proto.event_tickets.IssueTicketRequest.prototype.setRedemptiondetails = function(value) {
  return jspb.Message.setWrapperField(this, 15, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.event_tickets.IssueTicketRequest} returns this
 */
proto.event_tickets.IssueTicketRequest.prototype.clearRedemptiondetails = function() {
  return this.setRedemptiondetails(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.event_tickets.IssueTicketRequest.prototype.hasRedemptiondetails = function() {
  return jspb.Message.getField(this, 15) != null;
};


/**
 * repeated ValidateDetails validateDetails = 16;
 * @return {!Array<!proto.event_tickets.ValidateDetails>}
 */
proto.event_tickets.IssueTicketRequest.prototype.getValidatedetailsList = function() {
  return /** @type{!Array<!proto.event_tickets.ValidateDetails>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.event_tickets.ValidateDetails, 16));
};


/**
 * @param {!Array<!proto.event_tickets.ValidateDetails>} value
 * @return {!proto.event_tickets.IssueTicketRequest} returns this
*/
proto.event_tickets.IssueTicketRequest.prototype.setValidatedetailsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 16, value);
};


/**
 * @param {!proto.event_tickets.ValidateDetails=} opt_value
 * @param {number=} opt_index
 * @return {!proto.event_tickets.ValidateDetails}
 */
proto.event_tickets.IssueTicketRequest.prototype.addValidatedetails = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 16, opt_value, proto.event_tickets.ValidateDetails, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.event_tickets.IssueTicketRequest} returns this
 */
proto.event_tickets.IssueTicketRequest.prototype.clearValidatedetailsList = function() {
  return this.setValidatedetailsList([]);
};


/**
 * optional io.PassOverrides passOverrides = 17;
 * @return {?proto.io.PassOverrides}
 */
proto.event_tickets.IssueTicketRequest.prototype.getPassoverrides = function() {
  return /** @type{?proto.io.PassOverrides} */ (
    jspb.Message.getWrapperField(this, io_common_pass_pb.PassOverrides, 17));
};


/**
 * @param {?proto.io.PassOverrides|undefined} value
 * @return {!proto.event_tickets.IssueTicketRequest} returns this
*/
proto.event_tickets.IssueTicketRequest.prototype.setPassoverrides = function(value) {
  return jspb.Message.setWrapperField(this, 17, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.event_tickets.IssueTicketRequest} returns this
 */
proto.event_tickets.IssueTicketRequest.prototype.clearPassoverrides = function() {
  return this.setPassoverrides(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.event_tickets.IssueTicketRequest.prototype.hasPassoverrides = function() {
  return jspb.Message.getField(this, 17) != null;
};


/**
 * optional io.Metadata passMetaData = 18;
 * @return {?proto.io.Metadata}
 */
proto.event_tickets.IssueTicketRequest.prototype.getPassmetadata = function() {
  return /** @type{?proto.io.Metadata} */ (
    jspb.Message.getWrapperField(this, io_common_metrics_pb.Metadata, 18));
};


/**
 * @param {?proto.io.Metadata|undefined} value
 * @return {!proto.event_tickets.IssueTicketRequest} returns this
*/
proto.event_tickets.IssueTicketRequest.prototype.setPassmetadata = function(value) {
  return jspb.Message.setWrapperField(this, 18, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.event_tickets.IssueTicketRequest} returns this
 */
proto.event_tickets.IssueTicketRequest.prototype.clearPassmetadata = function() {
  return this.setPassmetadata(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.event_tickets.IssueTicketRequest.prototype.hasPassmetadata = function() {
  return jspb.Message.getField(this, 18) != null;
};


/**
 * optional google.protobuf.Timestamp created = 19;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.event_tickets.IssueTicketRequest.prototype.getCreated = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 19));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.event_tickets.IssueTicketRequest} returns this
*/
proto.event_tickets.IssueTicketRequest.prototype.setCreated = function(value) {
  return jspb.Message.setWrapperField(this, 19, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.event_tickets.IssueTicketRequest} returns this
 */
proto.event_tickets.IssueTicketRequest.prototype.clearCreated = function() {
  return this.setCreated(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.event_tickets.IssueTicketRequest.prototype.hasCreated = function() {
  return jspb.Message.getField(this, 19) != null;
};


/**
 * optional google.protobuf.Timestamp updated = 20;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.event_tickets.IssueTicketRequest.prototype.getUpdated = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 20));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.event_tickets.IssueTicketRequest} returns this
*/
proto.event_tickets.IssueTicketRequest.prototype.setUpdated = function(value) {
  return jspb.Message.setWrapperField(this, 20, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.event_tickets.IssueTicketRequest} returns this
 */
proto.event_tickets.IssueTicketRequest.prototype.clearUpdated = function() {
  return this.setUpdated(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.event_tickets.IssueTicketRequest.prototype.hasUpdated = function() {
  return jspb.Message.getField(this, 20) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.event_tickets.IssueTicketResponseIds.prototype.toObject = function(opt_includeInstance) {
  return proto.event_tickets.IssueTicketResponseIds.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.event_tickets.IssueTicketResponseIds} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.event_tickets.IssueTicketResponseIds.toObject = function(includeInstance, msg) {
  var f, obj = {
    ticketid: jspb.Message.getFieldWithDefault(msg, 1, ""),
    productionid: jspb.Message.getFieldWithDefault(msg, 2, ""),
    venueid: jspb.Message.getFieldWithDefault(msg, 3, ""),
    tickettypeid: jspb.Message.getFieldWithDefault(msg, 4, ""),
    eventid: jspb.Message.getFieldWithDefault(msg, 5, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.event_tickets.IssueTicketResponseIds}
 */
proto.event_tickets.IssueTicketResponseIds.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.event_tickets.IssueTicketResponseIds;
  return proto.event_tickets.IssueTicketResponseIds.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.event_tickets.IssueTicketResponseIds} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.event_tickets.IssueTicketResponseIds}
 */
proto.event_tickets.IssueTicketResponseIds.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setTicketid(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setProductionid(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setVenueid(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setTickettypeid(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setEventid(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.event_tickets.IssueTicketResponseIds.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.event_tickets.IssueTicketResponseIds.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.event_tickets.IssueTicketResponseIds} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.event_tickets.IssueTicketResponseIds.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTicketid();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getProductionid();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getVenueid();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getTickettypeid();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getEventid();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
};


/**
 * optional string ticketId = 1;
 * @return {string}
 */
proto.event_tickets.IssueTicketResponseIds.prototype.getTicketid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.event_tickets.IssueTicketResponseIds} returns this
 */
proto.event_tickets.IssueTicketResponseIds.prototype.setTicketid = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string productionId = 2;
 * @return {string}
 */
proto.event_tickets.IssueTicketResponseIds.prototype.getProductionid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.event_tickets.IssueTicketResponseIds} returns this
 */
proto.event_tickets.IssueTicketResponseIds.prototype.setProductionid = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string venueId = 3;
 * @return {string}
 */
proto.event_tickets.IssueTicketResponseIds.prototype.getVenueid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.event_tickets.IssueTicketResponseIds} returns this
 */
proto.event_tickets.IssueTicketResponseIds.prototype.setVenueid = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string ticketTypeId = 4;
 * @return {string}
 */
proto.event_tickets.IssueTicketResponseIds.prototype.getTickettypeid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.event_tickets.IssueTicketResponseIds} returns this
 */
proto.event_tickets.IssueTicketResponseIds.prototype.setTickettypeid = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string eventId = 5;
 * @return {string}
 */
proto.event_tickets.IssueTicketResponseIds.prototype.getEventid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.event_tickets.IssueTicketResponseIds} returns this
 */
proto.event_tickets.IssueTicketResponseIds.prototype.setEventid = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.event_tickets.EventTicketPassRequest.repeatedFields_ = [4];

/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.event_tickets.EventTicketPassRequest.oneofGroups_ = [[1,2,3]];

/**
 * @enum {number}
 */
proto.event_tickets.EventTicketPassRequest.RequestCase = {
  REQUEST_NOT_SET: 0,
  TICKETID: 1,
  TICKETNUMBER: 2,
  ORDERNUMBER: 3
};

/**
 * @return {proto.event_tickets.EventTicketPassRequest.RequestCase}
 */
proto.event_tickets.EventTicketPassRequest.prototype.getRequestCase = function() {
  return /** @type {proto.event_tickets.EventTicketPassRequest.RequestCase} */(jspb.Message.computeOneofCase(this, proto.event_tickets.EventTicketPassRequest.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.event_tickets.EventTicketPassRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.event_tickets.EventTicketPassRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.event_tickets.EventTicketPassRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.event_tickets.EventTicketPassRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    ticketid: (f = msg.getTicketid()) && io_common_common_objects_pb.Id.toObject(includeInstance, f),
    ticketnumber: (f = msg.getTicketnumber()) && proto.event_tickets.TicketNumberRequest.toObject(includeInstance, f),
    ordernumber: (f = msg.getOrdernumber()) && proto.event_tickets.OrderNumberRequest.toObject(includeInstance, f),
    formatList: (f = jspb.Message.getRepeatedField(msg, 4)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.event_tickets.EventTicketPassRequest}
 */
proto.event_tickets.EventTicketPassRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.event_tickets.EventTicketPassRequest;
  return proto.event_tickets.EventTicketPassRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.event_tickets.EventTicketPassRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.event_tickets.EventTicketPassRequest}
 */
proto.event_tickets.EventTicketPassRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new io_common_common_objects_pb.Id;
      reader.readMessage(value,io_common_common_objects_pb.Id.deserializeBinaryFromReader);
      msg.setTicketid(value);
      break;
    case 2:
      var value = new proto.event_tickets.TicketNumberRequest;
      reader.readMessage(value,proto.event_tickets.TicketNumberRequest.deserializeBinaryFromReader);
      msg.setTicketnumber(value);
      break;
    case 3:
      var value = new proto.event_tickets.OrderNumberRequest;
      reader.readMessage(value,proto.event_tickets.OrderNumberRequest.deserializeBinaryFromReader);
      msg.setOrdernumber(value);
      break;
    case 4:
      var values = /** @type {!Array<!proto.io.PassBundleFormat>} */ (reader.isDelimited() ? reader.readPackedEnum() : [reader.readEnum()]);
      for (var i = 0; i < values.length; i++) {
        msg.addFormat(values[i]);
      }
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.event_tickets.EventTicketPassRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.event_tickets.EventTicketPassRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.event_tickets.EventTicketPassRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.event_tickets.EventTicketPassRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTicketid();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      io_common_common_objects_pb.Id.serializeBinaryToWriter
    );
  }
  f = message.getTicketnumber();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.event_tickets.TicketNumberRequest.serializeBinaryToWriter
    );
  }
  f = message.getOrdernumber();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.event_tickets.OrderNumberRequest.serializeBinaryToWriter
    );
  }
  f = message.getFormatList();
  if (f.length > 0) {
    writer.writePackedEnum(
      4,
      f
    );
  }
};


/**
 * optional io.Id ticketId = 1;
 * @return {?proto.io.Id}
 */
proto.event_tickets.EventTicketPassRequest.prototype.getTicketid = function() {
  return /** @type{?proto.io.Id} */ (
    jspb.Message.getWrapperField(this, io_common_common_objects_pb.Id, 1));
};


/**
 * @param {?proto.io.Id|undefined} value
 * @return {!proto.event_tickets.EventTicketPassRequest} returns this
*/
proto.event_tickets.EventTicketPassRequest.prototype.setTicketid = function(value) {
  return jspb.Message.setOneofWrapperField(this, 1, proto.event_tickets.EventTicketPassRequest.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.event_tickets.EventTicketPassRequest} returns this
 */
proto.event_tickets.EventTicketPassRequest.prototype.clearTicketid = function() {
  return this.setTicketid(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.event_tickets.EventTicketPassRequest.prototype.hasTicketid = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional TicketNumberRequest ticketNumber = 2;
 * @return {?proto.event_tickets.TicketNumberRequest}
 */
proto.event_tickets.EventTicketPassRequest.prototype.getTicketnumber = function() {
  return /** @type{?proto.event_tickets.TicketNumberRequest} */ (
    jspb.Message.getWrapperField(this, proto.event_tickets.TicketNumberRequest, 2));
};


/**
 * @param {?proto.event_tickets.TicketNumberRequest|undefined} value
 * @return {!proto.event_tickets.EventTicketPassRequest} returns this
*/
proto.event_tickets.EventTicketPassRequest.prototype.setTicketnumber = function(value) {
  return jspb.Message.setOneofWrapperField(this, 2, proto.event_tickets.EventTicketPassRequest.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.event_tickets.EventTicketPassRequest} returns this
 */
proto.event_tickets.EventTicketPassRequest.prototype.clearTicketnumber = function() {
  return this.setTicketnumber(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.event_tickets.EventTicketPassRequest.prototype.hasTicketnumber = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional OrderNumberRequest orderNumber = 3;
 * @return {?proto.event_tickets.OrderNumberRequest}
 */
proto.event_tickets.EventTicketPassRequest.prototype.getOrdernumber = function() {
  return /** @type{?proto.event_tickets.OrderNumberRequest} */ (
    jspb.Message.getWrapperField(this, proto.event_tickets.OrderNumberRequest, 3));
};


/**
 * @param {?proto.event_tickets.OrderNumberRequest|undefined} value
 * @return {!proto.event_tickets.EventTicketPassRequest} returns this
*/
proto.event_tickets.EventTicketPassRequest.prototype.setOrdernumber = function(value) {
  return jspb.Message.setOneofWrapperField(this, 3, proto.event_tickets.EventTicketPassRequest.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.event_tickets.EventTicketPassRequest} returns this
 */
proto.event_tickets.EventTicketPassRequest.prototype.clearOrdernumber = function() {
  return this.setOrdernumber(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.event_tickets.EventTicketPassRequest.prototype.hasOrdernumber = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * repeated io.PassBundleFormat format = 4;
 * @return {!Array<!proto.io.PassBundleFormat>}
 */
proto.event_tickets.EventTicketPassRequest.prototype.getFormatList = function() {
  return /** @type {!Array<!proto.io.PassBundleFormat>} */ (jspb.Message.getRepeatedField(this, 4));
};


/**
 * @param {!Array<!proto.io.PassBundleFormat>} value
 * @return {!proto.event_tickets.EventTicketPassRequest} returns this
 */
proto.event_tickets.EventTicketPassRequest.prototype.setFormatList = function(value) {
  return jspb.Message.setField(this, 4, value || []);
};


/**
 * @param {!proto.io.PassBundleFormat} value
 * @param {number=} opt_index
 * @return {!proto.event_tickets.EventTicketPassRequest} returns this
 */
proto.event_tickets.EventTicketPassRequest.prototype.addFormat = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 4, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.event_tickets.EventTicketPassRequest} returns this
 */
proto.event_tickets.EventTicketPassRequest.prototype.clearFormatList = function() {
  return this.setFormatList([]);
};



/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.event_tickets.EventTicketPerson.oneofGroups_ = [[1,2]];

/**
 * @enum {number}
 */
proto.event_tickets.EventTicketPerson.RequestCase = {
  REQUEST_NOT_SET: 0,
  TICKETID: 1,
  TICKETNUMBER: 2
};

/**
 * @return {proto.event_tickets.EventTicketPerson.RequestCase}
 */
proto.event_tickets.EventTicketPerson.prototype.getRequestCase = function() {
  return /** @type {proto.event_tickets.EventTicketPerson.RequestCase} */(jspb.Message.computeOneofCase(this, proto.event_tickets.EventTicketPerson.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.event_tickets.EventTicketPerson.prototype.toObject = function(opt_includeInstance) {
  return proto.event_tickets.EventTicketPerson.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.event_tickets.EventTicketPerson} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.event_tickets.EventTicketPerson.toObject = function(includeInstance, msg) {
  var f, obj = {
    ticketid: (f = msg.getTicketid()) && io_common_common_objects_pb.Id.toObject(includeInstance, f),
    ticketnumber: (f = msg.getTicketnumber()) && proto.event_tickets.TicketNumberRequest.toObject(includeInstance, f),
    person: (f = msg.getPerson()) && io_common_personal_pb.Person.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.event_tickets.EventTicketPerson}
 */
proto.event_tickets.EventTicketPerson.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.event_tickets.EventTicketPerson;
  return proto.event_tickets.EventTicketPerson.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.event_tickets.EventTicketPerson} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.event_tickets.EventTicketPerson}
 */
proto.event_tickets.EventTicketPerson.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new io_common_common_objects_pb.Id;
      reader.readMessage(value,io_common_common_objects_pb.Id.deserializeBinaryFromReader);
      msg.setTicketid(value);
      break;
    case 2:
      var value = new proto.event_tickets.TicketNumberRequest;
      reader.readMessage(value,proto.event_tickets.TicketNumberRequest.deserializeBinaryFromReader);
      msg.setTicketnumber(value);
      break;
    case 5:
      var value = new io_common_personal_pb.Person;
      reader.readMessage(value,io_common_personal_pb.Person.deserializeBinaryFromReader);
      msg.setPerson(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.event_tickets.EventTicketPerson.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.event_tickets.EventTicketPerson.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.event_tickets.EventTicketPerson} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.event_tickets.EventTicketPerson.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTicketid();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      io_common_common_objects_pb.Id.serializeBinaryToWriter
    );
  }
  f = message.getTicketnumber();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.event_tickets.TicketNumberRequest.serializeBinaryToWriter
    );
  }
  f = message.getPerson();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      io_common_personal_pb.Person.serializeBinaryToWriter
    );
  }
};


/**
 * optional io.Id ticketId = 1;
 * @return {?proto.io.Id}
 */
proto.event_tickets.EventTicketPerson.prototype.getTicketid = function() {
  return /** @type{?proto.io.Id} */ (
    jspb.Message.getWrapperField(this, io_common_common_objects_pb.Id, 1));
};


/**
 * @param {?proto.io.Id|undefined} value
 * @return {!proto.event_tickets.EventTicketPerson} returns this
*/
proto.event_tickets.EventTicketPerson.prototype.setTicketid = function(value) {
  return jspb.Message.setOneofWrapperField(this, 1, proto.event_tickets.EventTicketPerson.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.event_tickets.EventTicketPerson} returns this
 */
proto.event_tickets.EventTicketPerson.prototype.clearTicketid = function() {
  return this.setTicketid(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.event_tickets.EventTicketPerson.prototype.hasTicketid = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional TicketNumberRequest ticketNumber = 2;
 * @return {?proto.event_tickets.TicketNumberRequest}
 */
proto.event_tickets.EventTicketPerson.prototype.getTicketnumber = function() {
  return /** @type{?proto.event_tickets.TicketNumberRequest} */ (
    jspb.Message.getWrapperField(this, proto.event_tickets.TicketNumberRequest, 2));
};


/**
 * @param {?proto.event_tickets.TicketNumberRequest|undefined} value
 * @return {!proto.event_tickets.EventTicketPerson} returns this
*/
proto.event_tickets.EventTicketPerson.prototype.setTicketnumber = function(value) {
  return jspb.Message.setOneofWrapperField(this, 2, proto.event_tickets.EventTicketPerson.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.event_tickets.EventTicketPerson} returns this
 */
proto.event_tickets.EventTicketPerson.prototype.clearTicketnumber = function() {
  return this.setTicketnumber(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.event_tickets.EventTicketPerson.prototype.hasTicketnumber = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional io.Person person = 5;
 * @return {?proto.io.Person}
 */
proto.event_tickets.EventTicketPerson.prototype.getPerson = function() {
  return /** @type{?proto.io.Person} */ (
    jspb.Message.getWrapperField(this, io_common_personal_pb.Person, 5));
};


/**
 * @param {?proto.io.Person|undefined} value
 * @return {!proto.event_tickets.EventTicketPerson} returns this
*/
proto.event_tickets.EventTicketPerson.prototype.setPerson = function(value) {
  return jspb.Message.setWrapperField(this, 5, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.event_tickets.EventTicketPerson} returns this
 */
proto.event_tickets.EventTicketPerson.prototype.clearPerson = function() {
  return this.setPerson(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.event_tickets.EventTicketPerson.prototype.hasPerson = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * @enum {number}
 */
proto.event_tickets.TicketStatus = {
  STATUS_NONE: 0,
  ISSUED: 1,
  REDEEMED: 2
};

goog.object.extend(exports, proto.event_tickets);
