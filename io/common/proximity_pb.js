// source: io/common/proximity.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global = (function() {
  if (this) { return this; }
  if (typeof window !== 'undefined') { return window; }
  if (typeof global !== 'undefined') { return global; }
  if (typeof self !== 'undefined') { return self; }
  return Function('return this')();
}.call(null));

var io_common_localization_pb = require('../../io/common/localization_pb.js');
goog.object.extend(proto, io_common_localization_pb);
goog.exportSymbol('proto.io.Beacon', null, global);
goog.exportSymbol('proto.io.GPSLocation', null, global);
goog.exportSymbol('proto.io.RelevantDate', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.io.Beacon = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.io.Beacon, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.io.Beacon.displayName = 'proto.io.Beacon';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.io.GPSLocation = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.io.GPSLocation, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.io.GPSLocation.displayName = 'proto.io.GPSLocation';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.io.RelevantDate = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.io.RelevantDate, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.io.RelevantDate.displayName = 'proto.io.RelevantDate';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.io.Beacon.prototype.toObject = function(opt_includeInstance) {
  return proto.io.Beacon.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.io.Beacon} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.Beacon.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, ""),
    uuid: jspb.Message.getFieldWithDefault(msg, 2, ""),
    name: jspb.Message.getFieldWithDefault(msg, 3, ""),
    major: jspb.Message.getFieldWithDefault(msg, 4, 0),
    minor: jspb.Message.getFieldWithDefault(msg, 5, 0),
    lockscreenmessage: jspb.Message.getFieldWithDefault(msg, 6, ""),
    localizedlockscreenmessage: (f = msg.getLocalizedlockscreenmessage()) && io_common_localization_pb.LocalizedString.toObject(includeInstance, f),
    position: jspb.Message.getFieldWithDefault(msg, 8, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.io.Beacon}
 */
proto.io.Beacon.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.io.Beacon;
  return proto.io.Beacon.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.io.Beacon} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.io.Beacon}
 */
proto.io.Beacon.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setUuid(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setMajor(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setMinor(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setLockscreenmessage(value);
      break;
    case 7:
      var value = new io_common_localization_pb.LocalizedString;
      reader.readMessage(value,io_common_localization_pb.LocalizedString.deserializeBinaryFromReader);
      msg.setLocalizedlockscreenmessage(value);
      break;
    case 8:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setPosition(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.io.Beacon.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.io.Beacon.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.io.Beacon} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.Beacon.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getUuid();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getMajor();
  if (f !== 0) {
    writer.writeUint32(
      4,
      f
    );
  }
  f = message.getMinor();
  if (f !== 0) {
    writer.writeUint32(
      5,
      f
    );
  }
  f = message.getLockscreenmessage();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getLocalizedlockscreenmessage();
  if (f != null) {
    writer.writeMessage(
      7,
      f,
      io_common_localization_pb.LocalizedString.serializeBinaryToWriter
    );
  }
  f = message.getPosition();
  if (f !== 0) {
    writer.writeUint32(
      8,
      f
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.io.Beacon.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.Beacon} returns this
 */
proto.io.Beacon.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string uuid = 2;
 * @return {string}
 */
proto.io.Beacon.prototype.getUuid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.Beacon} returns this
 */
proto.io.Beacon.prototype.setUuid = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string name = 3;
 * @return {string}
 */
proto.io.Beacon.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.Beacon} returns this
 */
proto.io.Beacon.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional uint32 major = 4;
 * @return {number}
 */
proto.io.Beacon.prototype.getMajor = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.io.Beacon} returns this
 */
proto.io.Beacon.prototype.setMajor = function(value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};


/**
 * optional uint32 minor = 5;
 * @return {number}
 */
proto.io.Beacon.prototype.getMinor = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {number} value
 * @return {!proto.io.Beacon} returns this
 */
proto.io.Beacon.prototype.setMinor = function(value) {
  return jspb.Message.setProto3IntField(this, 5, value);
};


/**
 * optional string lockScreenMessage = 6;
 * @return {string}
 */
proto.io.Beacon.prototype.getLockscreenmessage = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.Beacon} returns this
 */
proto.io.Beacon.prototype.setLockscreenmessage = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional LocalizedString localizedLockScreenMessage = 7;
 * @return {?proto.io.LocalizedString}
 */
proto.io.Beacon.prototype.getLocalizedlockscreenmessage = function() {
  return /** @type{?proto.io.LocalizedString} */ (
    jspb.Message.getWrapperField(this, io_common_localization_pb.LocalizedString, 7));
};


/**
 * @param {?proto.io.LocalizedString|undefined} value
 * @return {!proto.io.Beacon} returns this
*/
proto.io.Beacon.prototype.setLocalizedlockscreenmessage = function(value) {
  return jspb.Message.setWrapperField(this, 7, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.io.Beacon} returns this
 */
proto.io.Beacon.prototype.clearLocalizedlockscreenmessage = function() {
  return this.setLocalizedlockscreenmessage(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.io.Beacon.prototype.hasLocalizedlockscreenmessage = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * optional uint32 position = 8;
 * @return {number}
 */
proto.io.Beacon.prototype.getPosition = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 8, 0));
};


/**
 * @param {number} value
 * @return {!proto.io.Beacon} returns this
 */
proto.io.Beacon.prototype.setPosition = function(value) {
  return jspb.Message.setProto3IntField(this, 8, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.io.GPSLocation.prototype.toObject = function(opt_includeInstance) {
  return proto.io.GPSLocation.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.io.GPSLocation} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.GPSLocation.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, ""),
    name: jspb.Message.getFieldWithDefault(msg, 2, ""),
    lat: jspb.Message.getFloatingPointFieldWithDefault(msg, 3, 0.0),
    lon: jspb.Message.getFloatingPointFieldWithDefault(msg, 4, 0.0),
    alt: jspb.Message.getFieldWithDefault(msg, 5, 0),
    lockscreenmessage: jspb.Message.getFieldWithDefault(msg, 6, ""),
    localizedlockscreenmessage: (f = msg.getLocalizedlockscreenmessage()) && io_common_localization_pb.LocalizedString.toObject(includeInstance, f),
    position: jspb.Message.getFieldWithDefault(msg, 8, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.io.GPSLocation}
 */
proto.io.GPSLocation.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.io.GPSLocation;
  return proto.io.GPSLocation.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.io.GPSLocation} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.io.GPSLocation}
 */
proto.io.GPSLocation.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setLat(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setLon(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setAlt(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setLockscreenmessage(value);
      break;
    case 7:
      var value = new io_common_localization_pb.LocalizedString;
      reader.readMessage(value,io_common_localization_pb.LocalizedString.deserializeBinaryFromReader);
      msg.setLocalizedlockscreenmessage(value);
      break;
    case 8:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setPosition(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.io.GPSLocation.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.io.GPSLocation.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.io.GPSLocation} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.GPSLocation.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getLat();
  if (f !== 0.0) {
    writer.writeDouble(
      3,
      f
    );
  }
  f = message.getLon();
  if (f !== 0.0) {
    writer.writeDouble(
      4,
      f
    );
  }
  f = message.getAlt();
  if (f !== 0) {
    writer.writeInt32(
      5,
      f
    );
  }
  f = message.getLockscreenmessage();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getLocalizedlockscreenmessage();
  if (f != null) {
    writer.writeMessage(
      7,
      f,
      io_common_localization_pb.LocalizedString.serializeBinaryToWriter
    );
  }
  f = message.getPosition();
  if (f !== 0) {
    writer.writeUint32(
      8,
      f
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.io.GPSLocation.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.GPSLocation} returns this
 */
proto.io.GPSLocation.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string name = 2;
 * @return {string}
 */
proto.io.GPSLocation.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.GPSLocation} returns this
 */
proto.io.GPSLocation.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional double lat = 3;
 * @return {number}
 */
proto.io.GPSLocation.prototype.getLat = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 3, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.io.GPSLocation} returns this
 */
proto.io.GPSLocation.prototype.setLat = function(value) {
  return jspb.Message.setProto3FloatField(this, 3, value);
};


/**
 * optional double lon = 4;
 * @return {number}
 */
proto.io.GPSLocation.prototype.getLon = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 4, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.io.GPSLocation} returns this
 */
proto.io.GPSLocation.prototype.setLon = function(value) {
  return jspb.Message.setProto3FloatField(this, 4, value);
};


/**
 * optional int32 alt = 5;
 * @return {number}
 */
proto.io.GPSLocation.prototype.getAlt = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {number} value
 * @return {!proto.io.GPSLocation} returns this
 */
proto.io.GPSLocation.prototype.setAlt = function(value) {
  return jspb.Message.setProto3IntField(this, 5, value);
};


/**
 * optional string lockScreenMessage = 6;
 * @return {string}
 */
proto.io.GPSLocation.prototype.getLockscreenmessage = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.GPSLocation} returns this
 */
proto.io.GPSLocation.prototype.setLockscreenmessage = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional LocalizedString localizedLockScreenMessage = 7;
 * @return {?proto.io.LocalizedString}
 */
proto.io.GPSLocation.prototype.getLocalizedlockscreenmessage = function() {
  return /** @type{?proto.io.LocalizedString} */ (
    jspb.Message.getWrapperField(this, io_common_localization_pb.LocalizedString, 7));
};


/**
 * @param {?proto.io.LocalizedString|undefined} value
 * @return {!proto.io.GPSLocation} returns this
*/
proto.io.GPSLocation.prototype.setLocalizedlockscreenmessage = function(value) {
  return jspb.Message.setWrapperField(this, 7, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.io.GPSLocation} returns this
 */
proto.io.GPSLocation.prototype.clearLocalizedlockscreenmessage = function() {
  return this.setLocalizedlockscreenmessage(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.io.GPSLocation.prototype.hasLocalizedlockscreenmessage = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * optional uint32 position = 8;
 * @return {number}
 */
proto.io.GPSLocation.prototype.getPosition = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 8, 0));
};


/**
 * @param {number} value
 * @return {!proto.io.GPSLocation} returns this
 */
proto.io.GPSLocation.prototype.setPosition = function(value) {
  return jspb.Message.setProto3IntField(this, 8, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.io.RelevantDate.prototype.toObject = function(opt_includeInstance) {
  return proto.io.RelevantDate.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.io.RelevantDate} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.RelevantDate.toObject = function(includeInstance, msg) {
  var f, obj = {
    timestamp: jspb.Message.getFieldWithDefault(msg, 1, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.io.RelevantDate}
 */
proto.io.RelevantDate.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.io.RelevantDate;
  return proto.io.RelevantDate.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.io.RelevantDate} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.io.RelevantDate}
 */
proto.io.RelevantDate.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setTimestamp(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.io.RelevantDate.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.io.RelevantDate.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.io.RelevantDate} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.RelevantDate.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTimestamp();
  if (f !== 0) {
    writer.writeUint32(
      1,
      f
    );
  }
};


/**
 * optional uint32 timestamp = 1;
 * @return {number}
 */
proto.io.RelevantDate.prototype.getTimestamp = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.io.RelevantDate} returns this
 */
proto.io.RelevantDate.prototype.setTimestamp = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


goog.object.extend(exports, proto.io);
