// source: io/common/pass.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global = (function() {
  if (this) { return this; }
  if (typeof window !== 'undefined') { return window; }
  if (typeof global !== 'undefined') { return global; }
  if (typeof self !== 'undefined') { return self; }
  return Function('return this')();
}.call(null));

var io_image_image_pb = require('../../io/image/image_pb.js');
goog.object.extend(proto, io_image_image_pb);
var io_common_links_pb = require('../../io/common/links_pb.js');
goog.object.extend(proto, io_common_links_pb);
var io_common_metrics_pb = require('../../io/common/metrics_pb.js');
goog.object.extend(proto, io_common_metrics_pb);
var io_common_personal_pb = require('../../io/common/personal_pb.js');
goog.object.extend(proto, io_common_personal_pb);
var io_common_protocols_pb = require('../../io/common/protocols_pb.js');
goog.object.extend(proto, io_common_protocols_pb);
var io_common_proximity_pb = require('../../io/common/proximity_pb.js');
goog.object.extend(proto, io_common_proximity_pb);
var io_common_template_pb = require('../../io/common/template_pb.js');
goog.object.extend(proto, io_common_template_pb);
goog.exportSymbol('proto.io.Pass', null, global);
goog.exportSymbol('proto.io.PassOptions', null, global);
goog.exportSymbol('proto.io.PassOverrides', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.io.PassOverrides = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.io.PassOverrides.repeatedFields_, null);
};
goog.inherits(proto.io.PassOverrides, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.io.PassOverrides.displayName = 'proto.io.PassOverrides';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.io.PassOptions = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.io.PassOptions, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.io.PassOptions.displayName = 'proto.io.PassOptions';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.io.Pass = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.io.Pass, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.io.Pass.displayName = 'proto.io.Pass';
}

/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.io.PassOverrides.repeatedFields_ = [3,4,5,7,8];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.io.PassOverrides.prototype.toObject = function(opt_includeInstance) {
  return proto.io.PassOverrides.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.io.PassOverrides} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.PassOverrides.toObject = function(includeInstance, msg) {
  var f, obj = {
    imageids: (f = msg.getImageids()) && io_image_image_pb.ImageIds.toObject(includeInstance, f),
    locationsList: jspb.Message.toObjectList(msg.getLocationsList(),
    io_common_proximity_pb.GPSLocation.toObject, includeInstance),
    beaconsList: jspb.Message.toObjectList(msg.getBeaconsList(),
    io_common_proximity_pb.Beacon.toObject, includeInstance),
    linksList: jspb.Message.toObjectList(msg.getLinksList(),
    io_common_links_pb.Link.toObject, includeInstance),
    colors: (f = msg.getColors()) && io_common_template_pb.Colors.toObject(includeInstance, f),
    associatedstoreidentifiersList: (f = jspb.Message.getRepeatedField(msg, 7)) == null ? undefined : f,
    appstoreidentifiersList: (f = jspb.Message.getRepeatedField(msg, 8)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.io.PassOverrides}
 */
proto.io.PassOverrides.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.io.PassOverrides;
  return proto.io.PassOverrides.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.io.PassOverrides} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.io.PassOverrides}
 */
proto.io.PassOverrides.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new io_image_image_pb.ImageIds;
      reader.readMessage(value,io_image_image_pb.ImageIds.deserializeBinaryFromReader);
      msg.setImageids(value);
      break;
    case 3:
      var value = new io_common_proximity_pb.GPSLocation;
      reader.readMessage(value,io_common_proximity_pb.GPSLocation.deserializeBinaryFromReader);
      msg.addLocations(value);
      break;
    case 4:
      var value = new io_common_proximity_pb.Beacon;
      reader.readMessage(value,io_common_proximity_pb.Beacon.deserializeBinaryFromReader);
      msg.addBeacons(value);
      break;
    case 5:
      var value = new io_common_links_pb.Link;
      reader.readMessage(value,io_common_links_pb.Link.deserializeBinaryFromReader);
      msg.addLinks(value);
      break;
    case 6:
      var value = new io_common_template_pb.Colors;
      reader.readMessage(value,io_common_template_pb.Colors.deserializeBinaryFromReader);
      msg.setColors(value);
      break;
    case 7:
      var values = /** @type {!Array<number>} */ (reader.isDelimited() ? reader.readPackedUint32() : [reader.readUint32()]);
      for (var i = 0; i < values.length; i++) {
        msg.addAssociatedstoreidentifiers(values[i]);
      }
      break;
    case 8:
      var values = /** @type {!Array<number>} */ (reader.isDelimited() ? reader.readPackedUint64() : [reader.readUint64()]);
      for (var i = 0; i < values.length; i++) {
        msg.addAppstoreidentifiers(values[i]);
      }
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.io.PassOverrides.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.io.PassOverrides.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.io.PassOverrides} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.PassOverrides.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getImageids();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      io_image_image_pb.ImageIds.serializeBinaryToWriter
    );
  }
  f = message.getLocationsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      3,
      f,
      io_common_proximity_pb.GPSLocation.serializeBinaryToWriter
    );
  }
  f = message.getBeaconsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      4,
      f,
      io_common_proximity_pb.Beacon.serializeBinaryToWriter
    );
  }
  f = message.getLinksList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      5,
      f,
      io_common_links_pb.Link.serializeBinaryToWriter
    );
  }
  f = message.getColors();
  if (f != null) {
    writer.writeMessage(
      6,
      f,
      io_common_template_pb.Colors.serializeBinaryToWriter
    );
  }
  f = message.getAssociatedstoreidentifiersList();
  if (f.length > 0) {
    writer.writePackedUint32(
      7,
      f
    );
  }
  f = message.getAppstoreidentifiersList();
  if (f.length > 0) {
    writer.writePackedUint64(
      8,
      f
    );
  }
};


/**
 * optional ImageIds imageIds = 1;
 * @return {?proto.io.ImageIds}
 */
proto.io.PassOverrides.prototype.getImageids = function() {
  return /** @type{?proto.io.ImageIds} */ (
    jspb.Message.getWrapperField(this, io_image_image_pb.ImageIds, 1));
};


/**
 * @param {?proto.io.ImageIds|undefined} value
 * @return {!proto.io.PassOverrides} returns this
*/
proto.io.PassOverrides.prototype.setImageids = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.io.PassOverrides} returns this
 */
proto.io.PassOverrides.prototype.clearImageids = function() {
  return this.setImageids(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.io.PassOverrides.prototype.hasImageids = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * repeated GPSLocation locations = 3;
 * @return {!Array<!proto.io.GPSLocation>}
 */
proto.io.PassOverrides.prototype.getLocationsList = function() {
  return /** @type{!Array<!proto.io.GPSLocation>} */ (
    jspb.Message.getRepeatedWrapperField(this, io_common_proximity_pb.GPSLocation, 3));
};


/**
 * @param {!Array<!proto.io.GPSLocation>} value
 * @return {!proto.io.PassOverrides} returns this
*/
proto.io.PassOverrides.prototype.setLocationsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 3, value);
};


/**
 * @param {!proto.io.GPSLocation=} opt_value
 * @param {number=} opt_index
 * @return {!proto.io.GPSLocation}
 */
proto.io.PassOverrides.prototype.addLocations = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 3, opt_value, proto.io.GPSLocation, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.io.PassOverrides} returns this
 */
proto.io.PassOverrides.prototype.clearLocationsList = function() {
  return this.setLocationsList([]);
};


/**
 * repeated Beacon beacons = 4;
 * @return {!Array<!proto.io.Beacon>}
 */
proto.io.PassOverrides.prototype.getBeaconsList = function() {
  return /** @type{!Array<!proto.io.Beacon>} */ (
    jspb.Message.getRepeatedWrapperField(this, io_common_proximity_pb.Beacon, 4));
};


/**
 * @param {!Array<!proto.io.Beacon>} value
 * @return {!proto.io.PassOverrides} returns this
*/
proto.io.PassOverrides.prototype.setBeaconsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 4, value);
};


/**
 * @param {!proto.io.Beacon=} opt_value
 * @param {number=} opt_index
 * @return {!proto.io.Beacon}
 */
proto.io.PassOverrides.prototype.addBeacons = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 4, opt_value, proto.io.Beacon, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.io.PassOverrides} returns this
 */
proto.io.PassOverrides.prototype.clearBeaconsList = function() {
  return this.setBeaconsList([]);
};


/**
 * repeated Link links = 5;
 * @return {!Array<!proto.io.Link>}
 */
proto.io.PassOverrides.prototype.getLinksList = function() {
  return /** @type{!Array<!proto.io.Link>} */ (
    jspb.Message.getRepeatedWrapperField(this, io_common_links_pb.Link, 5));
};


/**
 * @param {!Array<!proto.io.Link>} value
 * @return {!proto.io.PassOverrides} returns this
*/
proto.io.PassOverrides.prototype.setLinksList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 5, value);
};


/**
 * @param {!proto.io.Link=} opt_value
 * @param {number=} opt_index
 * @return {!proto.io.Link}
 */
proto.io.PassOverrides.prototype.addLinks = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 5, opt_value, proto.io.Link, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.io.PassOverrides} returns this
 */
proto.io.PassOverrides.prototype.clearLinksList = function() {
  return this.setLinksList([]);
};


/**
 * optional Colors colors = 6;
 * @return {?proto.io.Colors}
 */
proto.io.PassOverrides.prototype.getColors = function() {
  return /** @type{?proto.io.Colors} */ (
    jspb.Message.getWrapperField(this, io_common_template_pb.Colors, 6));
};


/**
 * @param {?proto.io.Colors|undefined} value
 * @return {!proto.io.PassOverrides} returns this
*/
proto.io.PassOverrides.prototype.setColors = function(value) {
  return jspb.Message.setWrapperField(this, 6, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.io.PassOverrides} returns this
 */
proto.io.PassOverrides.prototype.clearColors = function() {
  return this.setColors(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.io.PassOverrides.prototype.hasColors = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * repeated uint32 associatedStoreIdentifiers = 7;
 * @return {!Array<number>}
 */
proto.io.PassOverrides.prototype.getAssociatedstoreidentifiersList = function() {
  return /** @type {!Array<number>} */ (jspb.Message.getRepeatedField(this, 7));
};


/**
 * @param {!Array<number>} value
 * @return {!proto.io.PassOverrides} returns this
 */
proto.io.PassOverrides.prototype.setAssociatedstoreidentifiersList = function(value) {
  return jspb.Message.setField(this, 7, value || []);
};


/**
 * @param {number} value
 * @param {number=} opt_index
 * @return {!proto.io.PassOverrides} returns this
 */
proto.io.PassOverrides.prototype.addAssociatedstoreidentifiers = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 7, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.io.PassOverrides} returns this
 */
proto.io.PassOverrides.prototype.clearAssociatedstoreidentifiersList = function() {
  return this.setAssociatedstoreidentifiersList([]);
};


/**
 * repeated uint64 appStoreIdentifiers = 8;
 * @return {!Array<number>}
 */
proto.io.PassOverrides.prototype.getAppstoreidentifiersList = function() {
  return /** @type {!Array<number>} */ (jspb.Message.getRepeatedField(this, 8));
};


/**
 * @param {!Array<number>} value
 * @return {!proto.io.PassOverrides} returns this
 */
proto.io.PassOverrides.prototype.setAppstoreidentifiersList = function(value) {
  return jspb.Message.setField(this, 8, value || []);
};


/**
 * @param {number} value
 * @param {number=} opt_index
 * @return {!proto.io.PassOverrides} returns this
 */
proto.io.PassOverrides.prototype.addAppstoreidentifiers = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 8, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.io.PassOverrides} returns this
 */
proto.io.PassOverrides.prototype.clearAppstoreidentifiersList = function() {
  return this.setAppstoreidentifiersList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.io.PassOptions.prototype.toObject = function(opt_includeInstance) {
  return proto.io.PassOptions.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.io.PassOptions} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.PassOptions.toObject = function(includeInstance, msg) {
  var f, obj = {
    apple: (f = msg.getApple()) && io_common_template_pb.AppleWalletSettings.toObject(includeInstance, f),
    google: (f = msg.getGoogle()) && io_common_template_pb.GooglePaySettings.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.io.PassOptions}
 */
proto.io.PassOptions.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.io.PassOptions;
  return proto.io.PassOptions.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.io.PassOptions} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.io.PassOptions}
 */
proto.io.PassOptions.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new io_common_template_pb.AppleWalletSettings;
      reader.readMessage(value,io_common_template_pb.AppleWalletSettings.deserializeBinaryFromReader);
      msg.setApple(value);
      break;
    case 2:
      var value = new io_common_template_pb.GooglePaySettings;
      reader.readMessage(value,io_common_template_pb.GooglePaySettings.deserializeBinaryFromReader);
      msg.setGoogle(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.io.PassOptions.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.io.PassOptions.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.io.PassOptions} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.PassOptions.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getApple();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      io_common_template_pb.AppleWalletSettings.serializeBinaryToWriter
    );
  }
  f = message.getGoogle();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      io_common_template_pb.GooglePaySettings.serializeBinaryToWriter
    );
  }
};


/**
 * optional AppleWalletSettings apple = 1;
 * @return {?proto.io.AppleWalletSettings}
 */
proto.io.PassOptions.prototype.getApple = function() {
  return /** @type{?proto.io.AppleWalletSettings} */ (
    jspb.Message.getWrapperField(this, io_common_template_pb.AppleWalletSettings, 1));
};


/**
 * @param {?proto.io.AppleWalletSettings|undefined} value
 * @return {!proto.io.PassOptions} returns this
*/
proto.io.PassOptions.prototype.setApple = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.io.PassOptions} returns this
 */
proto.io.PassOptions.prototype.clearApple = function() {
  return this.setApple(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.io.PassOptions.prototype.hasApple = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional GooglePaySettings google = 2;
 * @return {?proto.io.GooglePaySettings}
 */
proto.io.PassOptions.prototype.getGoogle = function() {
  return /** @type{?proto.io.GooglePaySettings} */ (
    jspb.Message.getWrapperField(this, io_common_template_pb.GooglePaySettings, 2));
};


/**
 * @param {?proto.io.GooglePaySettings|undefined} value
 * @return {!proto.io.PassOptions} returns this
*/
proto.io.PassOptions.prototype.setGoogle = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.io.PassOptions} returns this
 */
proto.io.PassOptions.prototype.clearGoogle = function() {
  return this.setGoogle(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.io.PassOptions.prototype.hasGoogle = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.io.Pass.prototype.toObject = function(opt_includeInstance) {
  return proto.io.Pass.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.io.Pass} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.Pass.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, ""),
    classid: jspb.Message.getFieldWithDefault(msg, 2, ""),
    protocol: jspb.Message.getFieldWithDefault(msg, 3, 0),
    persondetails: (f = msg.getPersondetails()) && io_common_personal_pb.Person.toObject(includeInstance, f),
    metadata: (f = msg.getMetadata()) && io_common_metrics_pb.Metadata.toObject(includeInstance, f),
    recorddataMap: (f = msg.getRecorddataMap()) ? f.toObject(includeInstance, undefined) : [],
    externalid: jspb.Message.getFieldWithDefault(msg, 7, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.io.Pass}
 */
proto.io.Pass.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.io.Pass;
  return proto.io.Pass.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.io.Pass} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.io.Pass}
 */
proto.io.Pass.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setClassid(value);
      break;
    case 3:
      var value = /** @type {!proto.io.PassProtocol} */ (reader.readEnum());
      msg.setProtocol(value);
      break;
    case 4:
      var value = new io_common_personal_pb.Person;
      reader.readMessage(value,io_common_personal_pb.Person.deserializeBinaryFromReader);
      msg.setPersondetails(value);
      break;
    case 5:
      var value = new io_common_metrics_pb.Metadata;
      reader.readMessage(value,io_common_metrics_pb.Metadata.deserializeBinaryFromReader);
      msg.setMetadata(value);
      break;
    case 6:
      var value = msg.getRecorddataMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readString, null, "", "");
         });
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setExternalid(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.io.Pass.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.io.Pass.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.io.Pass} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.Pass.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getClassid();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getProtocol();
  if (f !== 0.0) {
    writer.writeEnum(
      3,
      f
    );
  }
  f = message.getPersondetails();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      io_common_personal_pb.Person.serializeBinaryToWriter
    );
  }
  f = message.getMetadata();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      io_common_metrics_pb.Metadata.serializeBinaryToWriter
    );
  }
  f = message.getRecorddataMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(6, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeString);
  }
  f = message.getExternalid();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.io.Pass.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.Pass} returns this
 */
proto.io.Pass.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string classId = 2;
 * @return {string}
 */
proto.io.Pass.prototype.getClassid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.Pass} returns this
 */
proto.io.Pass.prototype.setClassid = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional PassProtocol protocol = 3;
 * @return {!proto.io.PassProtocol}
 */
proto.io.Pass.prototype.getProtocol = function() {
  return /** @type {!proto.io.PassProtocol} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {!proto.io.PassProtocol} value
 * @return {!proto.io.Pass} returns this
 */
proto.io.Pass.prototype.setProtocol = function(value) {
  return jspb.Message.setProto3EnumField(this, 3, value);
};


/**
 * optional Person personDetails = 4;
 * @return {?proto.io.Person}
 */
proto.io.Pass.prototype.getPersondetails = function() {
  return /** @type{?proto.io.Person} */ (
    jspb.Message.getWrapperField(this, io_common_personal_pb.Person, 4));
};


/**
 * @param {?proto.io.Person|undefined} value
 * @return {!proto.io.Pass} returns this
*/
proto.io.Pass.prototype.setPersondetails = function(value) {
  return jspb.Message.setWrapperField(this, 4, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.io.Pass} returns this
 */
proto.io.Pass.prototype.clearPersondetails = function() {
  return this.setPersondetails(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.io.Pass.prototype.hasPersondetails = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional Metadata metadata = 5;
 * @return {?proto.io.Metadata}
 */
proto.io.Pass.prototype.getMetadata = function() {
  return /** @type{?proto.io.Metadata} */ (
    jspb.Message.getWrapperField(this, io_common_metrics_pb.Metadata, 5));
};


/**
 * @param {?proto.io.Metadata|undefined} value
 * @return {!proto.io.Pass} returns this
*/
proto.io.Pass.prototype.setMetadata = function(value) {
  return jspb.Message.setWrapperField(this, 5, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.io.Pass} returns this
 */
proto.io.Pass.prototype.clearMetadata = function() {
  return this.setMetadata(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.io.Pass.prototype.hasMetadata = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * map<string, string> recordData = 6;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<string,string>}
 */
proto.io.Pass.prototype.getRecorddataMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<string,string>} */ (
      jspb.Message.getMapField(this, 6, opt_noLazyCreate,
      null));
};


/**
 * Clears values from the map. The map will be non-null.
 * @return {!proto.io.Pass} returns this
 */
proto.io.Pass.prototype.clearRecorddataMap = function() {
  this.getRecorddataMap().clear();
  return this;};


/**
 * optional string externalId = 7;
 * @return {string}
 */
proto.io.Pass.prototype.getExternalid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.Pass} returns this
 */
proto.io.Pass.prototype.setExternalid = function(value) {
  return jspb.Message.setProto3StringField(this, 7, value);
};


goog.object.extend(exports, proto.io);
