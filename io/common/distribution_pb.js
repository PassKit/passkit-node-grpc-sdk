// source: io/common/distribution.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global = (function() {
  if (this) { return this; }
  if (typeof window !== 'undefined') { return window; }
  if (typeof global !== 'undefined') { return global; }
  if (typeof self !== 'undefined') { return self; }
  return Function('return this')();
}.call(null));

var io_common_common_objects_pb = require('../../io/common/common_objects_pb.js');
goog.object.extend(proto, io_common_common_objects_pb);
var io_common_localization_pb = require('../../io/common/localization_pb.js');
goog.object.extend(proto, io_common_localization_pb);
var io_common_protocols_pb = require('../../io/common/protocols_pb.js');
goog.object.extend(proto, io_common_protocols_pb);
var io_common_template_pb = require('../../io/common/template_pb.js');
goog.object.extend(proto, io_common_template_pb);
goog.exportSymbol('proto.io.DataCollectionField', null, global);
goog.exportSymbol('proto.io.DataCollectionFields', null, global);
goog.exportSymbol('proto.io.DistributionChannel', null, global);
goog.exportSymbol('proto.io.DistributionSettings', null, global);
goog.exportSymbol('proto.io.EmailConfiguration', null, global);
goog.exportSymbol('proto.io.EmailDistributionRequest', null, global);
goog.exportSymbol('proto.io.EmailTemplate', null, global);
goog.exportSymbol('proto.io.EmailTemplateOptions', null, global);
goog.exportSymbol('proto.io.EnrolmentUrls', null, global);
goog.exportSymbol('proto.io.ImportProtocolRequest', null, global);
goog.exportSymbol('proto.io.SmartPassCsvUploadRequest', null, global);
goog.exportSymbol('proto.io.SmartPassLinkRequest', null, global);
goog.exportSymbol('proto.io.SmsTemplate', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.io.EmailDistributionRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.io.EmailDistributionRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.io.EmailDistributionRequest.displayName = 'proto.io.EmailDistributionRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.io.SmartPassLinkRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.io.SmartPassLinkRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.io.SmartPassLinkRequest.displayName = 'proto.io.SmartPassLinkRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.io.DistributionSettings = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.io.DistributionSettings.repeatedFields_, null);
};
goog.inherits(proto.io.DistributionSettings, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.io.DistributionSettings.displayName = 'proto.io.DistributionSettings';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.io.EmailTemplate = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.io.EmailTemplate, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.io.EmailTemplate.displayName = 'proto.io.EmailTemplate';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.io.EmailConfiguration = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.io.EmailConfiguration, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.io.EmailConfiguration.displayName = 'proto.io.EmailConfiguration';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.io.SmsTemplate = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.io.SmsTemplate, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.io.SmsTemplate.displayName = 'proto.io.SmsTemplate';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.io.EnrolmentUrls = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.io.EnrolmentUrls, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.io.EnrolmentUrls.displayName = 'proto.io.EnrolmentUrls';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.io.DataCollectionFields = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.io.DataCollectionFields.repeatedFields_, null);
};
goog.inherits(proto.io.DataCollectionFields, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.io.DataCollectionFields.displayName = 'proto.io.DataCollectionFields';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.io.DataCollectionField = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.io.DataCollectionField, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.io.DataCollectionField.displayName = 'proto.io.DataCollectionField';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.io.SmartPassCsvUploadRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.io.SmartPassCsvUploadRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.io.SmartPassCsvUploadRequest.displayName = 'proto.io.SmartPassCsvUploadRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.io.ImportProtocolRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.io.ImportProtocolRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.io.ImportProtocolRequest.displayName = 'proto.io.ImportProtocolRequest';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.io.EmailDistributionRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.io.EmailDistributionRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.io.EmailDistributionRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.EmailDistributionRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, ""),
    externalid: jspb.Message.getFieldWithDefault(msg, 2, ""),
    classid: jspb.Message.getFieldWithDefault(msg, 3, ""),
    protocol: jspb.Message.getFieldWithDefault(msg, 4, 0),
    alternativeemail: jspb.Message.getFieldWithDefault(msg, 5, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.io.EmailDistributionRequest}
 */
proto.io.EmailDistributionRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.io.EmailDistributionRequest;
  return proto.io.EmailDistributionRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.io.EmailDistributionRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.io.EmailDistributionRequest}
 */
proto.io.EmailDistributionRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setExternalid(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setClassid(value);
      break;
    case 4:
      var value = /** @type {!proto.io.PassProtocol} */ (reader.readEnum());
      msg.setProtocol(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setAlternativeemail(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.io.EmailDistributionRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.io.EmailDistributionRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.io.EmailDistributionRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.EmailDistributionRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getExternalid();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getClassid();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getProtocol();
  if (f !== 0.0) {
    writer.writeEnum(
      4,
      f
    );
  }
  f = message.getAlternativeemail();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.io.EmailDistributionRequest.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.EmailDistributionRequest} returns this
 */
proto.io.EmailDistributionRequest.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string externalId = 2;
 * @return {string}
 */
proto.io.EmailDistributionRequest.prototype.getExternalid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.EmailDistributionRequest} returns this
 */
proto.io.EmailDistributionRequest.prototype.setExternalid = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string classId = 3;
 * @return {string}
 */
proto.io.EmailDistributionRequest.prototype.getClassid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.EmailDistributionRequest} returns this
 */
proto.io.EmailDistributionRequest.prototype.setClassid = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional PassProtocol protocol = 4;
 * @return {!proto.io.PassProtocol}
 */
proto.io.EmailDistributionRequest.prototype.getProtocol = function() {
  return /** @type {!proto.io.PassProtocol} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {!proto.io.PassProtocol} value
 * @return {!proto.io.EmailDistributionRequest} returns this
 */
proto.io.EmailDistributionRequest.prototype.setProtocol = function(value) {
  return jspb.Message.setProto3EnumField(this, 4, value);
};


/**
 * optional string alternativeEmail = 5;
 * @return {string}
 */
proto.io.EmailDistributionRequest.prototype.getAlternativeemail = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.EmailDistributionRequest} returns this
 */
proto.io.EmailDistributionRequest.prototype.setAlternativeemail = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.io.SmartPassLinkRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.io.SmartPassLinkRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.io.SmartPassLinkRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.SmartPassLinkRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    projectdistributionurl: (f = msg.getProjectdistributionurl()) && io_common_common_objects_pb.Url.toObject(includeInstance, f),
    fieldsMap: (f = msg.getFieldsMap()) ? f.toObject(includeInstance, undefined) : []
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.io.SmartPassLinkRequest}
 */
proto.io.SmartPassLinkRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.io.SmartPassLinkRequest;
  return proto.io.SmartPassLinkRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.io.SmartPassLinkRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.io.SmartPassLinkRequest}
 */
proto.io.SmartPassLinkRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new io_common_common_objects_pb.Url;
      reader.readMessage(value,io_common_common_objects_pb.Url.deserializeBinaryFromReader);
      msg.setProjectdistributionurl(value);
      break;
    case 2:
      var value = msg.getFieldsMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readString, null, "", "");
         });
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.io.SmartPassLinkRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.io.SmartPassLinkRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.io.SmartPassLinkRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.SmartPassLinkRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getProjectdistributionurl();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      io_common_common_objects_pb.Url.serializeBinaryToWriter
    );
  }
  f = message.getFieldsMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(2, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeString);
  }
};


/**
 * optional Url projectDistributionUrl = 1;
 * @return {?proto.io.Url}
 */
proto.io.SmartPassLinkRequest.prototype.getProjectdistributionurl = function() {
  return /** @type{?proto.io.Url} */ (
    jspb.Message.getWrapperField(this, io_common_common_objects_pb.Url, 1));
};


/**
 * @param {?proto.io.Url|undefined} value
 * @return {!proto.io.SmartPassLinkRequest} returns this
*/
proto.io.SmartPassLinkRequest.prototype.setProjectdistributionurl = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.io.SmartPassLinkRequest} returns this
 */
proto.io.SmartPassLinkRequest.prototype.clearProjectdistributionurl = function() {
  return this.setProjectdistributionurl(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.io.SmartPassLinkRequest.prototype.hasProjectdistributionurl = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * map<string, string> fields = 2;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<string,string>}
 */
proto.io.SmartPassLinkRequest.prototype.getFieldsMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<string,string>} */ (
      jspb.Message.getMapField(this, 2, opt_noLazyCreate,
      null));
};


/**
 * Clears values from the map. The map will be non-null.
 * @return {!proto.io.SmartPassLinkRequest} returns this
 */
proto.io.SmartPassLinkRequest.prototype.clearFieldsMap = function() {
  this.getFieldsMap().clear();
  return this;};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.io.DistributionSettings.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.io.DistributionSettings.prototype.toObject = function(opt_includeInstance) {
  return proto.io.DistributionSettings.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.io.DistributionSettings} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.DistributionSettings.toObject = function(includeInstance, msg) {
  var f, obj = {
    distributionchannelsList: (f = jspb.Message.getRepeatedField(msg, 1)) == null ? undefined : f,
    welcomeemail: (f = msg.getWelcomeemail()) && proto.io.EmailTemplate.toObject(includeInstance, f),
    welcomesms: (f = msg.getWelcomesms()) && proto.io.SmsTemplate.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.io.DistributionSettings}
 */
proto.io.DistributionSettings.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.io.DistributionSettings;
  return proto.io.DistributionSettings.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.io.DistributionSettings} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.io.DistributionSettings}
 */
proto.io.DistributionSettings.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var values = /** @type {!Array<!proto.io.DistributionChannel>} */ (reader.isDelimited() ? reader.readPackedEnum() : [reader.readEnum()]);
      for (var i = 0; i < values.length; i++) {
        msg.addDistributionchannels(values[i]);
      }
      break;
    case 2:
      var value = new proto.io.EmailTemplate;
      reader.readMessage(value,proto.io.EmailTemplate.deserializeBinaryFromReader);
      msg.setWelcomeemail(value);
      break;
    case 3:
      var value = new proto.io.SmsTemplate;
      reader.readMessage(value,proto.io.SmsTemplate.deserializeBinaryFromReader);
      msg.setWelcomesms(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.io.DistributionSettings.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.io.DistributionSettings.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.io.DistributionSettings} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.DistributionSettings.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getDistributionchannelsList();
  if (f.length > 0) {
    writer.writePackedEnum(
      1,
      f
    );
  }
  f = message.getWelcomeemail();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.io.EmailTemplate.serializeBinaryToWriter
    );
  }
  f = message.getWelcomesms();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.io.SmsTemplate.serializeBinaryToWriter
    );
  }
};


/**
 * repeated DistributionChannel distributionChannels = 1;
 * @return {!Array<!proto.io.DistributionChannel>}
 */
proto.io.DistributionSettings.prototype.getDistributionchannelsList = function() {
  return /** @type {!Array<!proto.io.DistributionChannel>} */ (jspb.Message.getRepeatedField(this, 1));
};


/**
 * @param {!Array<!proto.io.DistributionChannel>} value
 * @return {!proto.io.DistributionSettings} returns this
 */
proto.io.DistributionSettings.prototype.setDistributionchannelsList = function(value) {
  return jspb.Message.setField(this, 1, value || []);
};


/**
 * @param {!proto.io.DistributionChannel} value
 * @param {number=} opt_index
 * @return {!proto.io.DistributionSettings} returns this
 */
proto.io.DistributionSettings.prototype.addDistributionchannels = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 1, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.io.DistributionSettings} returns this
 */
proto.io.DistributionSettings.prototype.clearDistributionchannelsList = function() {
  return this.setDistributionchannelsList([]);
};


/**
 * optional EmailTemplate welcomeEmail = 2;
 * @return {?proto.io.EmailTemplate}
 */
proto.io.DistributionSettings.prototype.getWelcomeemail = function() {
  return /** @type{?proto.io.EmailTemplate} */ (
    jspb.Message.getWrapperField(this, proto.io.EmailTemplate, 2));
};


/**
 * @param {?proto.io.EmailTemplate|undefined} value
 * @return {!proto.io.DistributionSettings} returns this
*/
proto.io.DistributionSettings.prototype.setWelcomeemail = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.io.DistributionSettings} returns this
 */
proto.io.DistributionSettings.prototype.clearWelcomeemail = function() {
  return this.setWelcomeemail(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.io.DistributionSettings.prototype.hasWelcomeemail = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional SmsTemplate welcomeSms = 3;
 * @return {?proto.io.SmsTemplate}
 */
proto.io.DistributionSettings.prototype.getWelcomesms = function() {
  return /** @type{?proto.io.SmsTemplate} */ (
    jspb.Message.getWrapperField(this, proto.io.SmsTemplate, 3));
};


/**
 * @param {?proto.io.SmsTemplate|undefined} value
 * @return {!proto.io.DistributionSettings} returns this
*/
proto.io.DistributionSettings.prototype.setWelcomesms = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.io.DistributionSettings} returns this
 */
proto.io.DistributionSettings.prototype.clearWelcomesms = function() {
  return this.setWelcomesms(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.io.DistributionSettings.prototype.hasWelcomesms = function() {
  return jspb.Message.getField(this, 3) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.io.EmailTemplate.prototype.toObject = function(opt_includeInstance) {
  return proto.io.EmailTemplate.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.io.EmailTemplate} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.EmailTemplate.toObject = function(includeInstance, msg) {
  var f, obj = {
    subject: jspb.Message.getFieldWithDefault(msg, 1, ""),
    localizedsubject: (f = msg.getLocalizedsubject()) && io_common_localization_pb.LocalizedString.toObject(includeInstance, f),
    bodytextcontent: jspb.Message.getFieldWithDefault(msg, 3, ""),
    localizedbodytextcontent: (f = msg.getLocalizedbodytextcontent()) && io_common_localization_pb.LocalizedString.toObject(includeInstance, f),
    bodyhtmlcontent: jspb.Message.getFieldWithDefault(msg, 5, ""),
    localizedbodyhtmlcontent: (f = msg.getLocalizedbodyhtmlcontent()) && io_common_localization_pb.LocalizedString.toObject(includeInstance, f),
    configuration: (f = msg.getConfiguration()) && proto.io.EmailConfiguration.toObject(includeInstance, f),
    buttontext: jspb.Message.getFieldWithDefault(msg, 8, ""),
    buttontextcolor: jspb.Message.getFieldWithDefault(msg, 9, ""),
    buttonbackgroundcolor: jspb.Message.getFieldWithDefault(msg, 10, ""),
    buttonborderradius: jspb.Message.getFieldWithDefault(msg, 11, ""),
    footertextcontent: jspb.Message.getFieldWithDefault(msg, 12, ""),
    localizedfootertextcontent: (f = msg.getLocalizedfootertextcontent()) && io_common_localization_pb.LocalizedString.toObject(includeInstance, f),
    footerhtmlcontent: jspb.Message.getFieldWithDefault(msg, 14, ""),
    localizedfooterhtmlcontent: (f = msg.getLocalizedfooterhtmlcontent()) && io_common_localization_pb.LocalizedString.toObject(includeInstance, f),
    messagebackgroundcolor: jspb.Message.getFieldWithDefault(msg, 16, ""),
    pagebackgroundcolor: jspb.Message.getFieldWithDefault(msg, 17, ""),
    templateoptions: jspb.Message.getFieldWithDefault(msg, 18, 0),
    darkmodebuttontextcolor: jspb.Message.getFieldWithDefault(msg, 19, ""),
    darkmodebuttonbackgroundcolor: jspb.Message.getFieldWithDefault(msg, 20, ""),
    darkmodepagebackgroundcolor: jspb.Message.getFieldWithDefault(msg, 21, ""),
    darkmodecontentbackgroundcolor: jspb.Message.getFieldWithDefault(msg, 22, ""),
    headerlabel: jspb.Message.getFieldWithDefault(msg, 23, ""),
    localizedheaderlabel: (f = msg.getLocalizedheaderlabel()) && io_common_localization_pb.LocalizedString.toObject(includeInstance, f),
    headervalue: jspb.Message.getFieldWithDefault(msg, 25, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.io.EmailTemplate}
 */
proto.io.EmailTemplate.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.io.EmailTemplate;
  return proto.io.EmailTemplate.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.io.EmailTemplate} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.io.EmailTemplate}
 */
proto.io.EmailTemplate.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setSubject(value);
      break;
    case 2:
      var value = new io_common_localization_pb.LocalizedString;
      reader.readMessage(value,io_common_localization_pb.LocalizedString.deserializeBinaryFromReader);
      msg.setLocalizedsubject(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setBodytextcontent(value);
      break;
    case 4:
      var value = new io_common_localization_pb.LocalizedString;
      reader.readMessage(value,io_common_localization_pb.LocalizedString.deserializeBinaryFromReader);
      msg.setLocalizedbodytextcontent(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setBodyhtmlcontent(value);
      break;
    case 6:
      var value = new io_common_localization_pb.LocalizedString;
      reader.readMessage(value,io_common_localization_pb.LocalizedString.deserializeBinaryFromReader);
      msg.setLocalizedbodyhtmlcontent(value);
      break;
    case 7:
      var value = new proto.io.EmailConfiguration;
      reader.readMessage(value,proto.io.EmailConfiguration.deserializeBinaryFromReader);
      msg.setConfiguration(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.setButtontext(value);
      break;
    case 9:
      var value = /** @type {string} */ (reader.readString());
      msg.setButtontextcolor(value);
      break;
    case 10:
      var value = /** @type {string} */ (reader.readString());
      msg.setButtonbackgroundcolor(value);
      break;
    case 11:
      var value = /** @type {string} */ (reader.readString());
      msg.setButtonborderradius(value);
      break;
    case 12:
      var value = /** @type {string} */ (reader.readString());
      msg.setFootertextcontent(value);
      break;
    case 13:
      var value = new io_common_localization_pb.LocalizedString;
      reader.readMessage(value,io_common_localization_pb.LocalizedString.deserializeBinaryFromReader);
      msg.setLocalizedfootertextcontent(value);
      break;
    case 14:
      var value = /** @type {string} */ (reader.readString());
      msg.setFooterhtmlcontent(value);
      break;
    case 15:
      var value = new io_common_localization_pb.LocalizedString;
      reader.readMessage(value,io_common_localization_pb.LocalizedString.deserializeBinaryFromReader);
      msg.setLocalizedfooterhtmlcontent(value);
      break;
    case 16:
      var value = /** @type {string} */ (reader.readString());
      msg.setMessagebackgroundcolor(value);
      break;
    case 17:
      var value = /** @type {string} */ (reader.readString());
      msg.setPagebackgroundcolor(value);
      break;
    case 18:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setTemplateoptions(value);
      break;
    case 19:
      var value = /** @type {string} */ (reader.readString());
      msg.setDarkmodebuttontextcolor(value);
      break;
    case 20:
      var value = /** @type {string} */ (reader.readString());
      msg.setDarkmodebuttonbackgroundcolor(value);
      break;
    case 21:
      var value = /** @type {string} */ (reader.readString());
      msg.setDarkmodepagebackgroundcolor(value);
      break;
    case 22:
      var value = /** @type {string} */ (reader.readString());
      msg.setDarkmodecontentbackgroundcolor(value);
      break;
    case 23:
      var value = /** @type {string} */ (reader.readString());
      msg.setHeaderlabel(value);
      break;
    case 24:
      var value = new io_common_localization_pb.LocalizedString;
      reader.readMessage(value,io_common_localization_pb.LocalizedString.deserializeBinaryFromReader);
      msg.setLocalizedheaderlabel(value);
      break;
    case 25:
      var value = /** @type {string} */ (reader.readString());
      msg.setHeadervalue(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.io.EmailTemplate.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.io.EmailTemplate.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.io.EmailTemplate} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.EmailTemplate.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSubject();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getLocalizedsubject();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      io_common_localization_pb.LocalizedString.serializeBinaryToWriter
    );
  }
  f = message.getBodytextcontent();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getLocalizedbodytextcontent();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      io_common_localization_pb.LocalizedString.serializeBinaryToWriter
    );
  }
  f = message.getBodyhtmlcontent();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getLocalizedbodyhtmlcontent();
  if (f != null) {
    writer.writeMessage(
      6,
      f,
      io_common_localization_pb.LocalizedString.serializeBinaryToWriter
    );
  }
  f = message.getConfiguration();
  if (f != null) {
    writer.writeMessage(
      7,
      f,
      proto.io.EmailConfiguration.serializeBinaryToWriter
    );
  }
  f = message.getButtontext();
  if (f.length > 0) {
    writer.writeString(
      8,
      f
    );
  }
  f = message.getButtontextcolor();
  if (f.length > 0) {
    writer.writeString(
      9,
      f
    );
  }
  f = message.getButtonbackgroundcolor();
  if (f.length > 0) {
    writer.writeString(
      10,
      f
    );
  }
  f = message.getButtonborderradius();
  if (f.length > 0) {
    writer.writeString(
      11,
      f
    );
  }
  f = message.getFootertextcontent();
  if (f.length > 0) {
    writer.writeString(
      12,
      f
    );
  }
  f = message.getLocalizedfootertextcontent();
  if (f != null) {
    writer.writeMessage(
      13,
      f,
      io_common_localization_pb.LocalizedString.serializeBinaryToWriter
    );
  }
  f = message.getFooterhtmlcontent();
  if (f.length > 0) {
    writer.writeString(
      14,
      f
    );
  }
  f = message.getLocalizedfooterhtmlcontent();
  if (f != null) {
    writer.writeMessage(
      15,
      f,
      io_common_localization_pb.LocalizedString.serializeBinaryToWriter
    );
  }
  f = message.getMessagebackgroundcolor();
  if (f.length > 0) {
    writer.writeString(
      16,
      f
    );
  }
  f = message.getPagebackgroundcolor();
  if (f.length > 0) {
    writer.writeString(
      17,
      f
    );
  }
  f = message.getTemplateoptions();
  if (f !== 0) {
    writer.writeInt32(
      18,
      f
    );
  }
  f = message.getDarkmodebuttontextcolor();
  if (f.length > 0) {
    writer.writeString(
      19,
      f
    );
  }
  f = message.getDarkmodebuttonbackgroundcolor();
  if (f.length > 0) {
    writer.writeString(
      20,
      f
    );
  }
  f = message.getDarkmodepagebackgroundcolor();
  if (f.length > 0) {
    writer.writeString(
      21,
      f
    );
  }
  f = message.getDarkmodecontentbackgroundcolor();
  if (f.length > 0) {
    writer.writeString(
      22,
      f
    );
  }
  f = message.getHeaderlabel();
  if (f.length > 0) {
    writer.writeString(
      23,
      f
    );
  }
  f = message.getLocalizedheaderlabel();
  if (f != null) {
    writer.writeMessage(
      24,
      f,
      io_common_localization_pb.LocalizedString.serializeBinaryToWriter
    );
  }
  f = message.getHeadervalue();
  if (f.length > 0) {
    writer.writeString(
      25,
      f
    );
  }
};


/**
 * optional string subject = 1;
 * @return {string}
 */
proto.io.EmailTemplate.prototype.getSubject = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.EmailTemplate} returns this
 */
proto.io.EmailTemplate.prototype.setSubject = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional LocalizedString localizedSubject = 2;
 * @return {?proto.io.LocalizedString}
 */
proto.io.EmailTemplate.prototype.getLocalizedsubject = function() {
  return /** @type{?proto.io.LocalizedString} */ (
    jspb.Message.getWrapperField(this, io_common_localization_pb.LocalizedString, 2));
};


/**
 * @param {?proto.io.LocalizedString|undefined} value
 * @return {!proto.io.EmailTemplate} returns this
*/
proto.io.EmailTemplate.prototype.setLocalizedsubject = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.io.EmailTemplate} returns this
 */
proto.io.EmailTemplate.prototype.clearLocalizedsubject = function() {
  return this.setLocalizedsubject(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.io.EmailTemplate.prototype.hasLocalizedsubject = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional string bodyTextContent = 3;
 * @return {string}
 */
proto.io.EmailTemplate.prototype.getBodytextcontent = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.EmailTemplate} returns this
 */
proto.io.EmailTemplate.prototype.setBodytextcontent = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional LocalizedString localizedBodyTextContent = 4;
 * @return {?proto.io.LocalizedString}
 */
proto.io.EmailTemplate.prototype.getLocalizedbodytextcontent = function() {
  return /** @type{?proto.io.LocalizedString} */ (
    jspb.Message.getWrapperField(this, io_common_localization_pb.LocalizedString, 4));
};


/**
 * @param {?proto.io.LocalizedString|undefined} value
 * @return {!proto.io.EmailTemplate} returns this
*/
proto.io.EmailTemplate.prototype.setLocalizedbodytextcontent = function(value) {
  return jspb.Message.setWrapperField(this, 4, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.io.EmailTemplate} returns this
 */
proto.io.EmailTemplate.prototype.clearLocalizedbodytextcontent = function() {
  return this.setLocalizedbodytextcontent(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.io.EmailTemplate.prototype.hasLocalizedbodytextcontent = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional string bodyHtmlContent = 5;
 * @return {string}
 */
proto.io.EmailTemplate.prototype.getBodyhtmlcontent = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.EmailTemplate} returns this
 */
proto.io.EmailTemplate.prototype.setBodyhtmlcontent = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional LocalizedString localizedBodyHtmlContent = 6;
 * @return {?proto.io.LocalizedString}
 */
proto.io.EmailTemplate.prototype.getLocalizedbodyhtmlcontent = function() {
  return /** @type{?proto.io.LocalizedString} */ (
    jspb.Message.getWrapperField(this, io_common_localization_pb.LocalizedString, 6));
};


/**
 * @param {?proto.io.LocalizedString|undefined} value
 * @return {!proto.io.EmailTemplate} returns this
*/
proto.io.EmailTemplate.prototype.setLocalizedbodyhtmlcontent = function(value) {
  return jspb.Message.setWrapperField(this, 6, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.io.EmailTemplate} returns this
 */
proto.io.EmailTemplate.prototype.clearLocalizedbodyhtmlcontent = function() {
  return this.setLocalizedbodyhtmlcontent(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.io.EmailTemplate.prototype.hasLocalizedbodyhtmlcontent = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional EmailConfiguration configuration = 7;
 * @return {?proto.io.EmailConfiguration}
 */
proto.io.EmailTemplate.prototype.getConfiguration = function() {
  return /** @type{?proto.io.EmailConfiguration} */ (
    jspb.Message.getWrapperField(this, proto.io.EmailConfiguration, 7));
};


/**
 * @param {?proto.io.EmailConfiguration|undefined} value
 * @return {!proto.io.EmailTemplate} returns this
*/
proto.io.EmailTemplate.prototype.setConfiguration = function(value) {
  return jspb.Message.setWrapperField(this, 7, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.io.EmailTemplate} returns this
 */
proto.io.EmailTemplate.prototype.clearConfiguration = function() {
  return this.setConfiguration(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.io.EmailTemplate.prototype.hasConfiguration = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * optional string buttonText = 8;
 * @return {string}
 */
proto.io.EmailTemplate.prototype.getButtontext = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.EmailTemplate} returns this
 */
proto.io.EmailTemplate.prototype.setButtontext = function(value) {
  return jspb.Message.setProto3StringField(this, 8, value);
};


/**
 * optional string buttonTextColor = 9;
 * @return {string}
 */
proto.io.EmailTemplate.prototype.getButtontextcolor = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 9, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.EmailTemplate} returns this
 */
proto.io.EmailTemplate.prototype.setButtontextcolor = function(value) {
  return jspb.Message.setProto3StringField(this, 9, value);
};


/**
 * optional string buttonBackgroundColor = 10;
 * @return {string}
 */
proto.io.EmailTemplate.prototype.getButtonbackgroundcolor = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 10, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.EmailTemplate} returns this
 */
proto.io.EmailTemplate.prototype.setButtonbackgroundcolor = function(value) {
  return jspb.Message.setProto3StringField(this, 10, value);
};


/**
 * optional string buttonBorderRadius = 11;
 * @return {string}
 */
proto.io.EmailTemplate.prototype.getButtonborderradius = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 11, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.EmailTemplate} returns this
 */
proto.io.EmailTemplate.prototype.setButtonborderradius = function(value) {
  return jspb.Message.setProto3StringField(this, 11, value);
};


/**
 * optional string footerTextContent = 12;
 * @return {string}
 */
proto.io.EmailTemplate.prototype.getFootertextcontent = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 12, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.EmailTemplate} returns this
 */
proto.io.EmailTemplate.prototype.setFootertextcontent = function(value) {
  return jspb.Message.setProto3StringField(this, 12, value);
};


/**
 * optional LocalizedString localizedFooterTextContent = 13;
 * @return {?proto.io.LocalizedString}
 */
proto.io.EmailTemplate.prototype.getLocalizedfootertextcontent = function() {
  return /** @type{?proto.io.LocalizedString} */ (
    jspb.Message.getWrapperField(this, io_common_localization_pb.LocalizedString, 13));
};


/**
 * @param {?proto.io.LocalizedString|undefined} value
 * @return {!proto.io.EmailTemplate} returns this
*/
proto.io.EmailTemplate.prototype.setLocalizedfootertextcontent = function(value) {
  return jspb.Message.setWrapperField(this, 13, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.io.EmailTemplate} returns this
 */
proto.io.EmailTemplate.prototype.clearLocalizedfootertextcontent = function() {
  return this.setLocalizedfootertextcontent(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.io.EmailTemplate.prototype.hasLocalizedfootertextcontent = function() {
  return jspb.Message.getField(this, 13) != null;
};


/**
 * optional string footerHtmlContent = 14;
 * @return {string}
 */
proto.io.EmailTemplate.prototype.getFooterhtmlcontent = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 14, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.EmailTemplate} returns this
 */
proto.io.EmailTemplate.prototype.setFooterhtmlcontent = function(value) {
  return jspb.Message.setProto3StringField(this, 14, value);
};


/**
 * optional LocalizedString localizedFooterHtmlContent = 15;
 * @return {?proto.io.LocalizedString}
 */
proto.io.EmailTemplate.prototype.getLocalizedfooterhtmlcontent = function() {
  return /** @type{?proto.io.LocalizedString} */ (
    jspb.Message.getWrapperField(this, io_common_localization_pb.LocalizedString, 15));
};


/**
 * @param {?proto.io.LocalizedString|undefined} value
 * @return {!proto.io.EmailTemplate} returns this
*/
proto.io.EmailTemplate.prototype.setLocalizedfooterhtmlcontent = function(value) {
  return jspb.Message.setWrapperField(this, 15, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.io.EmailTemplate} returns this
 */
proto.io.EmailTemplate.prototype.clearLocalizedfooterhtmlcontent = function() {
  return this.setLocalizedfooterhtmlcontent(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.io.EmailTemplate.prototype.hasLocalizedfooterhtmlcontent = function() {
  return jspb.Message.getField(this, 15) != null;
};


/**
 * optional string messageBackgroundColor = 16;
 * @return {string}
 */
proto.io.EmailTemplate.prototype.getMessagebackgroundcolor = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 16, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.EmailTemplate} returns this
 */
proto.io.EmailTemplate.prototype.setMessagebackgroundcolor = function(value) {
  return jspb.Message.setProto3StringField(this, 16, value);
};


/**
 * optional string pageBackgroundColor = 17;
 * @return {string}
 */
proto.io.EmailTemplate.prototype.getPagebackgroundcolor = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 17, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.EmailTemplate} returns this
 */
proto.io.EmailTemplate.prototype.setPagebackgroundcolor = function(value) {
  return jspb.Message.setProto3StringField(this, 17, value);
};


/**
 * optional int32 templateOptions = 18;
 * @return {number}
 */
proto.io.EmailTemplate.prototype.getTemplateoptions = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 18, 0));
};


/**
 * @param {number} value
 * @return {!proto.io.EmailTemplate} returns this
 */
proto.io.EmailTemplate.prototype.setTemplateoptions = function(value) {
  return jspb.Message.setProto3IntField(this, 18, value);
};


/**
 * optional string darkModeButtonTextColor = 19;
 * @return {string}
 */
proto.io.EmailTemplate.prototype.getDarkmodebuttontextcolor = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 19, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.EmailTemplate} returns this
 */
proto.io.EmailTemplate.prototype.setDarkmodebuttontextcolor = function(value) {
  return jspb.Message.setProto3StringField(this, 19, value);
};


/**
 * optional string darkModeButtonBackgroundColor = 20;
 * @return {string}
 */
proto.io.EmailTemplate.prototype.getDarkmodebuttonbackgroundcolor = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 20, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.EmailTemplate} returns this
 */
proto.io.EmailTemplate.prototype.setDarkmodebuttonbackgroundcolor = function(value) {
  return jspb.Message.setProto3StringField(this, 20, value);
};


/**
 * optional string darkModePageBackgroundColor = 21;
 * @return {string}
 */
proto.io.EmailTemplate.prototype.getDarkmodepagebackgroundcolor = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 21, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.EmailTemplate} returns this
 */
proto.io.EmailTemplate.prototype.setDarkmodepagebackgroundcolor = function(value) {
  return jspb.Message.setProto3StringField(this, 21, value);
};


/**
 * optional string darkModeContentBackgroundColor = 22;
 * @return {string}
 */
proto.io.EmailTemplate.prototype.getDarkmodecontentbackgroundcolor = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 22, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.EmailTemplate} returns this
 */
proto.io.EmailTemplate.prototype.setDarkmodecontentbackgroundcolor = function(value) {
  return jspb.Message.setProto3StringField(this, 22, value);
};


/**
 * optional string headerLabel = 23;
 * @return {string}
 */
proto.io.EmailTemplate.prototype.getHeaderlabel = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 23, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.EmailTemplate} returns this
 */
proto.io.EmailTemplate.prototype.setHeaderlabel = function(value) {
  return jspb.Message.setProto3StringField(this, 23, value);
};


/**
 * optional LocalizedString localizedHeaderLabel = 24;
 * @return {?proto.io.LocalizedString}
 */
proto.io.EmailTemplate.prototype.getLocalizedheaderlabel = function() {
  return /** @type{?proto.io.LocalizedString} */ (
    jspb.Message.getWrapperField(this, io_common_localization_pb.LocalizedString, 24));
};


/**
 * @param {?proto.io.LocalizedString|undefined} value
 * @return {!proto.io.EmailTemplate} returns this
*/
proto.io.EmailTemplate.prototype.setLocalizedheaderlabel = function(value) {
  return jspb.Message.setWrapperField(this, 24, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.io.EmailTemplate} returns this
 */
proto.io.EmailTemplate.prototype.clearLocalizedheaderlabel = function() {
  return this.setLocalizedheaderlabel(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.io.EmailTemplate.prototype.hasLocalizedheaderlabel = function() {
  return jspb.Message.getField(this, 24) != null;
};


/**
 * optional string headerValue = 25;
 * @return {string}
 */
proto.io.EmailTemplate.prototype.getHeadervalue = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 25, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.EmailTemplate} returns this
 */
proto.io.EmailTemplate.prototype.setHeadervalue = function(value) {
  return jspb.Message.setProto3StringField(this, 25, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.io.EmailConfiguration.prototype.toObject = function(opt_includeInstance) {
  return proto.io.EmailConfiguration.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.io.EmailConfiguration} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.EmailConfiguration.toObject = function(includeInstance, msg) {
  var f, obj = {
    emailfrom: jspb.Message.getFieldWithDefault(msg, 1, ""),
    emailfromname: jspb.Message.getFieldWithDefault(msg, 2, ""),
    emailfromverifiedforsending: jspb.Message.getBooleanFieldWithDefault(msg, 3, false),
    usecustomhtml: jspb.Message.getBooleanFieldWithDefault(msg, 4, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.io.EmailConfiguration}
 */
proto.io.EmailConfiguration.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.io.EmailConfiguration;
  return proto.io.EmailConfiguration.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.io.EmailConfiguration} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.io.EmailConfiguration}
 */
proto.io.EmailConfiguration.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setEmailfrom(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setEmailfromname(value);
      break;
    case 3:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setEmailfromverifiedforsending(value);
      break;
    case 4:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setUsecustomhtml(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.io.EmailConfiguration.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.io.EmailConfiguration.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.io.EmailConfiguration} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.EmailConfiguration.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getEmailfrom();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getEmailfromname();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getEmailfromverifiedforsending();
  if (f) {
    writer.writeBool(
      3,
      f
    );
  }
  f = message.getUsecustomhtml();
  if (f) {
    writer.writeBool(
      4,
      f
    );
  }
};


/**
 * optional string emailFrom = 1;
 * @return {string}
 */
proto.io.EmailConfiguration.prototype.getEmailfrom = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.EmailConfiguration} returns this
 */
proto.io.EmailConfiguration.prototype.setEmailfrom = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string emailFromName = 2;
 * @return {string}
 */
proto.io.EmailConfiguration.prototype.getEmailfromname = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.EmailConfiguration} returns this
 */
proto.io.EmailConfiguration.prototype.setEmailfromname = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional bool EmailFromVerifiedForSending = 3;
 * @return {boolean}
 */
proto.io.EmailConfiguration.prototype.getEmailfromverifiedforsending = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 3, false));
};


/**
 * @param {boolean} value
 * @return {!proto.io.EmailConfiguration} returns this
 */
proto.io.EmailConfiguration.prototype.setEmailfromverifiedforsending = function(value) {
  return jspb.Message.setProto3BooleanField(this, 3, value);
};


/**
 * optional bool useCustomHtml = 4;
 * @return {boolean}
 */
proto.io.EmailConfiguration.prototype.getUsecustomhtml = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 4, false));
};


/**
 * @param {boolean} value
 * @return {!proto.io.EmailConfiguration} returns this
 */
proto.io.EmailConfiguration.prototype.setUsecustomhtml = function(value) {
  return jspb.Message.setProto3BooleanField(this, 4, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.io.SmsTemplate.prototype.toObject = function(opt_includeInstance) {
  return proto.io.SmsTemplate.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.io.SmsTemplate} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.SmsTemplate.toObject = function(includeInstance, msg) {
  var f, obj = {
    content: jspb.Message.getFieldWithDefault(msg, 1, ""),
    localizedcontent: (f = msg.getLocalizedcontent()) && io_common_localization_pb.LocalizedString.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.io.SmsTemplate}
 */
proto.io.SmsTemplate.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.io.SmsTemplate;
  return proto.io.SmsTemplate.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.io.SmsTemplate} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.io.SmsTemplate}
 */
proto.io.SmsTemplate.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setContent(value);
      break;
    case 2:
      var value = new io_common_localization_pb.LocalizedString;
      reader.readMessage(value,io_common_localization_pb.LocalizedString.deserializeBinaryFromReader);
      msg.setLocalizedcontent(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.io.SmsTemplate.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.io.SmsTemplate.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.io.SmsTemplate} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.SmsTemplate.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getContent();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getLocalizedcontent();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      io_common_localization_pb.LocalizedString.serializeBinaryToWriter
    );
  }
};


/**
 * optional string content = 1;
 * @return {string}
 */
proto.io.SmsTemplate.prototype.getContent = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.SmsTemplate} returns this
 */
proto.io.SmsTemplate.prototype.setContent = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional LocalizedString localizedContent = 2;
 * @return {?proto.io.LocalizedString}
 */
proto.io.SmsTemplate.prototype.getLocalizedcontent = function() {
  return /** @type{?proto.io.LocalizedString} */ (
    jspb.Message.getWrapperField(this, io_common_localization_pb.LocalizedString, 2));
};


/**
 * @param {?proto.io.LocalizedString|undefined} value
 * @return {!proto.io.SmsTemplate} returns this
*/
proto.io.SmsTemplate.prototype.setLocalizedcontent = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.io.SmsTemplate} returns this
 */
proto.io.SmsTemplate.prototype.clearLocalizedcontent = function() {
  return this.setLocalizedcontent(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.io.SmsTemplate.prototype.hasLocalizedcontent = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.io.EnrolmentUrls.prototype.toObject = function(opt_includeInstance) {
  return proto.io.EnrolmentUrls.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.io.EnrolmentUrls} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.EnrolmentUrls.toObject = function(includeInstance, msg) {
  var f, obj = {
    pageurl: jspb.Message.getFieldWithDefault(msg, 1, ""),
    qrcodeurl: jspb.Message.getFieldWithDefault(msg, 2, ""),
    tierenrolmenturlsMap: (f = msg.getTierenrolmenturlsMap()) ? f.toObject(includeInstance, undefined) : [],
    tierenrolmentqrsMap: (f = msg.getTierenrolmentqrsMap()) ? f.toObject(includeInstance, undefined) : []
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.io.EnrolmentUrls}
 */
proto.io.EnrolmentUrls.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.io.EnrolmentUrls;
  return proto.io.EnrolmentUrls.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.io.EnrolmentUrls} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.io.EnrolmentUrls}
 */
proto.io.EnrolmentUrls.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setPageurl(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setQrcodeurl(value);
      break;
    case 3:
      var value = msg.getTierenrolmenturlsMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readString, null, "", "");
         });
      break;
    case 4:
      var value = msg.getTierenrolmentqrsMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readString, null, "", "");
         });
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.io.EnrolmentUrls.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.io.EnrolmentUrls.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.io.EnrolmentUrls} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.EnrolmentUrls.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPageurl();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getQrcodeurl();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getTierenrolmenturlsMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(3, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeString);
  }
  f = message.getTierenrolmentqrsMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(4, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeString);
  }
};


/**
 * optional string pageUrl = 1;
 * @return {string}
 */
proto.io.EnrolmentUrls.prototype.getPageurl = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.EnrolmentUrls} returns this
 */
proto.io.EnrolmentUrls.prototype.setPageurl = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string qrCodeUrl = 2;
 * @return {string}
 */
proto.io.EnrolmentUrls.prototype.getQrcodeurl = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.EnrolmentUrls} returns this
 */
proto.io.EnrolmentUrls.prototype.setQrcodeurl = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * map<string, string> tierEnrolmentUrls = 3;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<string,string>}
 */
proto.io.EnrolmentUrls.prototype.getTierenrolmenturlsMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<string,string>} */ (
      jspb.Message.getMapField(this, 3, opt_noLazyCreate,
      null));
};


/**
 * Clears values from the map. The map will be non-null.
 * @return {!proto.io.EnrolmentUrls} returns this
 */
proto.io.EnrolmentUrls.prototype.clearTierenrolmenturlsMap = function() {
  this.getTierenrolmenturlsMap().clear();
  return this;};


/**
 * map<string, string> tierEnrolmentQRs = 4;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<string,string>}
 */
proto.io.EnrolmentUrls.prototype.getTierenrolmentqrsMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<string,string>} */ (
      jspb.Message.getMapField(this, 4, opt_noLazyCreate,
      null));
};


/**
 * Clears values from the map. The map will be non-null.
 * @return {!proto.io.EnrolmentUrls} returns this
 */
proto.io.EnrolmentUrls.prototype.clearTierenrolmentqrsMap = function() {
  this.getTierenrolmentqrsMap().clear();
  return this;};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.io.DataCollectionFields.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.io.DataCollectionFields.prototype.toObject = function(opt_includeInstance) {
  return proto.io.DataCollectionFields.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.io.DataCollectionFields} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.DataCollectionFields.toObject = function(includeInstance, msg) {
  var f, obj = {
    fieldsList: jspb.Message.toObjectList(msg.getFieldsList(),
    proto.io.DataCollectionField.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.io.DataCollectionFields}
 */
proto.io.DataCollectionFields.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.io.DataCollectionFields;
  return proto.io.DataCollectionFields.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.io.DataCollectionFields} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.io.DataCollectionFields}
 */
proto.io.DataCollectionFields.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.io.DataCollectionField;
      reader.readMessage(value,proto.io.DataCollectionField.deserializeBinaryFromReader);
      msg.addFields(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.io.DataCollectionFields.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.io.DataCollectionFields.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.io.DataCollectionFields} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.DataCollectionFields.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getFieldsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.io.DataCollectionField.serializeBinaryToWriter
    );
  }
};


/**
 * repeated DataCollectionField fields = 1;
 * @return {!Array<!proto.io.DataCollectionField>}
 */
proto.io.DataCollectionFields.prototype.getFieldsList = function() {
  return /** @type{!Array<!proto.io.DataCollectionField>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.io.DataCollectionField, 1));
};


/**
 * @param {!Array<!proto.io.DataCollectionField>} value
 * @return {!proto.io.DataCollectionFields} returns this
*/
proto.io.DataCollectionFields.prototype.setFieldsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.io.DataCollectionField=} opt_value
 * @param {number=} opt_index
 * @return {!proto.io.DataCollectionField}
 */
proto.io.DataCollectionFields.prototype.addFields = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.io.DataCollectionField, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.io.DataCollectionFields} returns this
 */
proto.io.DataCollectionFields.prototype.clearFieldsList = function() {
  return this.setFieldsList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.io.DataCollectionField.prototype.toObject = function(opt_includeInstance) {
  return proto.io.DataCollectionField.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.io.DataCollectionField} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.DataCollectionField.toObject = function(includeInstance, msg) {
  var f, obj = {
    uniquename: jspb.Message.getFieldWithDefault(msg, 1, ""),
    fieldtype: jspb.Message.getFieldWithDefault(msg, 2, 0),
    isrequired: jspb.Message.getBooleanFieldWithDefault(msg, 3, false),
    label: jspb.Message.getFieldWithDefault(msg, 4, ""),
    localizedlabel: (f = msg.getLocalizedlabel()) && io_common_localization_pb.LocalizedString.toObject(includeInstance, f),
    datatype: jspb.Message.getFieldWithDefault(msg, 6, 0),
    defaultvalue: jspb.Message.getFieldWithDefault(msg, 7, ""),
    localizeddefaultvalue: (f = msg.getLocalizeddefaultvalue()) && io_common_localization_pb.LocalizedString.toObject(includeInstance, f),
    validation: jspb.Message.getFieldWithDefault(msg, 9, ""),
    usercansetvalue: jspb.Message.getBooleanFieldWithDefault(msg, 10, false),
    currencycode: jspb.Message.getFieldWithDefault(msg, 11, ""),
    defaulttelcountrycode: jspb.Message.getFieldWithDefault(msg, 12, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.io.DataCollectionField}
 */
proto.io.DataCollectionField.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.io.DataCollectionField;
  return proto.io.DataCollectionField.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.io.DataCollectionField} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.io.DataCollectionField}
 */
proto.io.DataCollectionField.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setUniquename(value);
      break;
    case 2:
      var value = /** @type {!proto.io.FieldType} */ (reader.readEnum());
      msg.setFieldtype(value);
      break;
    case 3:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsrequired(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setLabel(value);
      break;
    case 5:
      var value = new io_common_localization_pb.LocalizedString;
      reader.readMessage(value,io_common_localization_pb.LocalizedString.deserializeBinaryFromReader);
      msg.setLocalizedlabel(value);
      break;
    case 6:
      var value = /** @type {!proto.io.DataType} */ (reader.readEnum());
      msg.setDatatype(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setDefaultvalue(value);
      break;
    case 8:
      var value = new io_common_localization_pb.LocalizedString;
      reader.readMessage(value,io_common_localization_pb.LocalizedString.deserializeBinaryFromReader);
      msg.setLocalizeddefaultvalue(value);
      break;
    case 9:
      var value = /** @type {string} */ (reader.readString());
      msg.setValidation(value);
      break;
    case 10:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setUsercansetvalue(value);
      break;
    case 11:
      var value = /** @type {string} */ (reader.readString());
      msg.setCurrencycode(value);
      break;
    case 12:
      var value = /** @type {string} */ (reader.readString());
      msg.setDefaulttelcountrycode(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.io.DataCollectionField.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.io.DataCollectionField.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.io.DataCollectionField} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.DataCollectionField.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getUniquename();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getFieldtype();
  if (f !== 0.0) {
    writer.writeEnum(
      2,
      f
    );
  }
  f = message.getIsrequired();
  if (f) {
    writer.writeBool(
      3,
      f
    );
  }
  f = message.getLabel();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getLocalizedlabel();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      io_common_localization_pb.LocalizedString.serializeBinaryToWriter
    );
  }
  f = message.getDatatype();
  if (f !== 0.0) {
    writer.writeEnum(
      6,
      f
    );
  }
  f = message.getDefaultvalue();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
  f = message.getLocalizeddefaultvalue();
  if (f != null) {
    writer.writeMessage(
      8,
      f,
      io_common_localization_pb.LocalizedString.serializeBinaryToWriter
    );
  }
  f = message.getValidation();
  if (f.length > 0) {
    writer.writeString(
      9,
      f
    );
  }
  f = message.getUsercansetvalue();
  if (f) {
    writer.writeBool(
      10,
      f
    );
  }
  f = message.getCurrencycode();
  if (f.length > 0) {
    writer.writeString(
      11,
      f
    );
  }
  f = message.getDefaulttelcountrycode();
  if (f.length > 0) {
    writer.writeString(
      12,
      f
    );
  }
};


/**
 * optional string uniqueName = 1;
 * @return {string}
 */
proto.io.DataCollectionField.prototype.getUniquename = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.DataCollectionField} returns this
 */
proto.io.DataCollectionField.prototype.setUniquename = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional FieldType fieldType = 2;
 * @return {!proto.io.FieldType}
 */
proto.io.DataCollectionField.prototype.getFieldtype = function() {
  return /** @type {!proto.io.FieldType} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {!proto.io.FieldType} value
 * @return {!proto.io.DataCollectionField} returns this
 */
proto.io.DataCollectionField.prototype.setFieldtype = function(value) {
  return jspb.Message.setProto3EnumField(this, 2, value);
};


/**
 * optional bool isRequired = 3;
 * @return {boolean}
 */
proto.io.DataCollectionField.prototype.getIsrequired = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 3, false));
};


/**
 * @param {boolean} value
 * @return {!proto.io.DataCollectionField} returns this
 */
proto.io.DataCollectionField.prototype.setIsrequired = function(value) {
  return jspb.Message.setProto3BooleanField(this, 3, value);
};


/**
 * optional string label = 4;
 * @return {string}
 */
proto.io.DataCollectionField.prototype.getLabel = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.DataCollectionField} returns this
 */
proto.io.DataCollectionField.prototype.setLabel = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional LocalizedString localizedLabel = 5;
 * @return {?proto.io.LocalizedString}
 */
proto.io.DataCollectionField.prototype.getLocalizedlabel = function() {
  return /** @type{?proto.io.LocalizedString} */ (
    jspb.Message.getWrapperField(this, io_common_localization_pb.LocalizedString, 5));
};


/**
 * @param {?proto.io.LocalizedString|undefined} value
 * @return {!proto.io.DataCollectionField} returns this
*/
proto.io.DataCollectionField.prototype.setLocalizedlabel = function(value) {
  return jspb.Message.setWrapperField(this, 5, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.io.DataCollectionField} returns this
 */
proto.io.DataCollectionField.prototype.clearLocalizedlabel = function() {
  return this.setLocalizedlabel(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.io.DataCollectionField.prototype.hasLocalizedlabel = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional DataType dataType = 6;
 * @return {!proto.io.DataType}
 */
proto.io.DataCollectionField.prototype.getDatatype = function() {
  return /** @type {!proto.io.DataType} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/**
 * @param {!proto.io.DataType} value
 * @return {!proto.io.DataCollectionField} returns this
 */
proto.io.DataCollectionField.prototype.setDatatype = function(value) {
  return jspb.Message.setProto3EnumField(this, 6, value);
};


/**
 * optional string defaultValue = 7;
 * @return {string}
 */
proto.io.DataCollectionField.prototype.getDefaultvalue = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.DataCollectionField} returns this
 */
proto.io.DataCollectionField.prototype.setDefaultvalue = function(value) {
  return jspb.Message.setProto3StringField(this, 7, value);
};


/**
 * optional LocalizedString localizedDefaultValue = 8;
 * @return {?proto.io.LocalizedString}
 */
proto.io.DataCollectionField.prototype.getLocalizeddefaultvalue = function() {
  return /** @type{?proto.io.LocalizedString} */ (
    jspb.Message.getWrapperField(this, io_common_localization_pb.LocalizedString, 8));
};


/**
 * @param {?proto.io.LocalizedString|undefined} value
 * @return {!proto.io.DataCollectionField} returns this
*/
proto.io.DataCollectionField.prototype.setLocalizeddefaultvalue = function(value) {
  return jspb.Message.setWrapperField(this, 8, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.io.DataCollectionField} returns this
 */
proto.io.DataCollectionField.prototype.clearLocalizeddefaultvalue = function() {
  return this.setLocalizeddefaultvalue(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.io.DataCollectionField.prototype.hasLocalizeddefaultvalue = function() {
  return jspb.Message.getField(this, 8) != null;
};


/**
 * optional string validation = 9;
 * @return {string}
 */
proto.io.DataCollectionField.prototype.getValidation = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 9, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.DataCollectionField} returns this
 */
proto.io.DataCollectionField.prototype.setValidation = function(value) {
  return jspb.Message.setProto3StringField(this, 9, value);
};


/**
 * optional bool userCanSetValue = 10;
 * @return {boolean}
 */
proto.io.DataCollectionField.prototype.getUsercansetvalue = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 10, false));
};


/**
 * @param {boolean} value
 * @return {!proto.io.DataCollectionField} returns this
 */
proto.io.DataCollectionField.prototype.setUsercansetvalue = function(value) {
  return jspb.Message.setProto3BooleanField(this, 10, value);
};


/**
 * optional string currencyCode = 11;
 * @return {string}
 */
proto.io.DataCollectionField.prototype.getCurrencycode = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 11, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.DataCollectionField} returns this
 */
proto.io.DataCollectionField.prototype.setCurrencycode = function(value) {
  return jspb.Message.setProto3StringField(this, 11, value);
};


/**
 * optional string defaultTelCountryCode = 12;
 * @return {string}
 */
proto.io.DataCollectionField.prototype.getDefaulttelcountrycode = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 12, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.DataCollectionField} returns this
 */
proto.io.DataCollectionField.prototype.setDefaulttelcountrycode = function(value) {
  return jspb.Message.setProto3StringField(this, 12, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.io.SmartPassCsvUploadRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.io.SmartPassCsvUploadRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.io.SmartPassCsvUploadRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.SmartPassCsvUploadRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    distributionurl: jspb.Message.getFieldWithDefault(msg, 1, ""),
    csvcontent: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.io.SmartPassCsvUploadRequest}
 */
proto.io.SmartPassCsvUploadRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.io.SmartPassCsvUploadRequest;
  return proto.io.SmartPassCsvUploadRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.io.SmartPassCsvUploadRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.io.SmartPassCsvUploadRequest}
 */
proto.io.SmartPassCsvUploadRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setDistributionurl(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setCsvcontent(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.io.SmartPassCsvUploadRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.io.SmartPassCsvUploadRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.io.SmartPassCsvUploadRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.SmartPassCsvUploadRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getDistributionurl();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getCsvcontent();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional string distributionUrl = 1;
 * @return {string}
 */
proto.io.SmartPassCsvUploadRequest.prototype.getDistributionurl = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.SmartPassCsvUploadRequest} returns this
 */
proto.io.SmartPassCsvUploadRequest.prototype.setDistributionurl = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string csvContent = 2;
 * @return {string}
 */
proto.io.SmartPassCsvUploadRequest.prototype.getCsvcontent = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.SmartPassCsvUploadRequest} returns this
 */
proto.io.SmartPassCsvUploadRequest.prototype.setCsvcontent = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.io.ImportProtocolRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.io.ImportProtocolRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.io.ImportProtocolRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.ImportProtocolRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    csvcontent: jspb.Message.getFieldWithDefault(msg, 1, ""),
    classid: jspb.Message.getFieldWithDefault(msg, 2, ""),
    protocol: jspb.Message.getFieldWithDefault(msg, 3, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.io.ImportProtocolRequest}
 */
proto.io.ImportProtocolRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.io.ImportProtocolRequest;
  return proto.io.ImportProtocolRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.io.ImportProtocolRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.io.ImportProtocolRequest}
 */
proto.io.ImportProtocolRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setCsvcontent(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setClassid(value);
      break;
    case 3:
      var value = /** @type {!proto.io.PassProtocol} */ (reader.readEnum());
      msg.setProtocol(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.io.ImportProtocolRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.io.ImportProtocolRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.io.ImportProtocolRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.ImportProtocolRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCsvcontent();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getClassid();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getProtocol();
  if (f !== 0.0) {
    writer.writeEnum(
      3,
      f
    );
  }
};


/**
 * optional string csvContent = 1;
 * @return {string}
 */
proto.io.ImportProtocolRequest.prototype.getCsvcontent = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.ImportProtocolRequest} returns this
 */
proto.io.ImportProtocolRequest.prototype.setCsvcontent = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string classId = 2;
 * @return {string}
 */
proto.io.ImportProtocolRequest.prototype.getClassid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.ImportProtocolRequest} returns this
 */
proto.io.ImportProtocolRequest.prototype.setClassid = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional PassProtocol protocol = 3;
 * @return {!proto.io.PassProtocol}
 */
proto.io.ImportProtocolRequest.prototype.getProtocol = function() {
  return /** @type {!proto.io.PassProtocol} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {!proto.io.PassProtocol} value
 * @return {!proto.io.ImportProtocolRequest} returns this
 */
proto.io.ImportProtocolRequest.prototype.setProtocol = function(value) {
  return jspb.Message.setProto3EnumField(this, 3, value);
};


/**
 * @enum {number}
 */
proto.io.DistributionChannel = {
  NO_DISTRIBUTION: 0,
  CHANNEL_EMAIL: 1,
  CHANNEL_SMS: 2
};

/**
 * @enum {number}
 */
proto.io.EmailTemplateOptions = {
  EMAIL_TEMP_OPT_NONE: 0,
  EMAIL_TEMP_OPT_HIDE_EXT_ID: 1,
  EMAIL_TEMP_OPT_HIDE_FULL_NAME: 2
};

goog.object.extend(exports, proto.io);
