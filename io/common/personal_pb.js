// source: io/common/personal.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global = (function() {
  if (this) { return this; }
  if (typeof window !== 'undefined') { return window; }
  if (typeof global !== 'undefined') { return global; }
  if (typeof self !== 'undefined') { return self; }
  return Function('return this')();
}.call(null));

var io_common_common_objects_pb = require('../../io/common/common_objects_pb.js');
goog.object.extend(proto, io_common_common_objects_pb);
goog.exportSymbol('proto.io.Address', null, global);
goog.exportSymbol('proto.io.Gender', null, global);
goog.exportSymbol('proto.io.Person', null, global);
goog.exportSymbol('proto.io.PersonRequest', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.io.Person = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.io.Person.repeatedFields_, null);
};
goog.inherits(proto.io.Person, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.io.Person.displayName = 'proto.io.Person';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.io.Address = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.io.Address, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.io.Address.displayName = 'proto.io.Address';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.io.PersonRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.io.PersonRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.io.PersonRequest.displayName = 'proto.io.PersonRequest';
}

/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.io.Person.repeatedFields_ = [3];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.io.Person.prototype.toObject = function(opt_includeInstance) {
  return proto.io.Person.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.io.Person} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.Person.toObject = function(includeInstance, msg) {
  var f, obj = {
    surname: jspb.Message.getFieldWithDefault(msg, 1, ""),
    forename: jspb.Message.getFieldWithDefault(msg, 2, ""),
    othernamesList: (f = jspb.Message.getRepeatedField(msg, 3)) == null ? undefined : f,
    salutation: jspb.Message.getFieldWithDefault(msg, 4, ""),
    suffix: jspb.Message.getFieldWithDefault(msg, 5, ""),
    displayname: jspb.Message.getFieldWithDefault(msg, 6, ""),
    gender: jspb.Message.getFieldWithDefault(msg, 7, 0),
    dateofbirth: (f = msg.getDateofbirth()) && io_common_common_objects_pb.Date.toObject(includeInstance, f),
    emailaddress: jspb.Message.getFieldWithDefault(msg, 9, ""),
    mobilenumber: jspb.Message.getFieldWithDefault(msg, 10, ""),
    externalid: jspb.Message.getFieldWithDefault(msg, 11, ""),
    externalidsMap: (f = msg.getExternalidsMap()) ? f.toObject(includeInstance, undefined) : []
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.io.Person}
 */
proto.io.Person.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.io.Person;
  return proto.io.Person.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.io.Person} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.io.Person}
 */
proto.io.Person.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setSurname(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setForename(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.addOthernames(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setSalutation(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setSuffix(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setDisplayname(value);
      break;
    case 7:
      var value = /** @type {!proto.io.Gender} */ (reader.readEnum());
      msg.setGender(value);
      break;
    case 8:
      var value = new io_common_common_objects_pb.Date;
      reader.readMessage(value,io_common_common_objects_pb.Date.deserializeBinaryFromReader);
      msg.setDateofbirth(value);
      break;
    case 9:
      var value = /** @type {string} */ (reader.readString());
      msg.setEmailaddress(value);
      break;
    case 10:
      var value = /** @type {string} */ (reader.readString());
      msg.setMobilenumber(value);
      break;
    case 11:
      var value = /** @type {string} */ (reader.readString());
      msg.setExternalid(value);
      break;
    case 12:
      var value = msg.getExternalidsMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readInt32, jspb.BinaryReader.prototype.readString, null, 0, "");
         });
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.io.Person.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.io.Person.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.io.Person} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.Person.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSurname();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getForename();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getOthernamesList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      3,
      f
    );
  }
  f = message.getSalutation();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getSuffix();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getDisplayname();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getGender();
  if (f !== 0.0) {
    writer.writeEnum(
      7,
      f
    );
  }
  f = message.getDateofbirth();
  if (f != null) {
    writer.writeMessage(
      8,
      f,
      io_common_common_objects_pb.Date.serializeBinaryToWriter
    );
  }
  f = message.getEmailaddress();
  if (f.length > 0) {
    writer.writeString(
      9,
      f
    );
  }
  f = message.getMobilenumber();
  if (f.length > 0) {
    writer.writeString(
      10,
      f
    );
  }
  f = message.getExternalid();
  if (f.length > 0) {
    writer.writeString(
      11,
      f
    );
  }
  f = message.getExternalidsMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(12, writer, jspb.BinaryWriter.prototype.writeInt32, jspb.BinaryWriter.prototype.writeString);
  }
};


/**
 * optional string surname = 1;
 * @return {string}
 */
proto.io.Person.prototype.getSurname = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.Person} returns this
 */
proto.io.Person.prototype.setSurname = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string forename = 2;
 * @return {string}
 */
proto.io.Person.prototype.getForename = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.Person} returns this
 */
proto.io.Person.prototype.setForename = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * repeated string otherNames = 3;
 * @return {!Array<string>}
 */
proto.io.Person.prototype.getOthernamesList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 3));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.io.Person} returns this
 */
proto.io.Person.prototype.setOthernamesList = function(value) {
  return jspb.Message.setField(this, 3, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.io.Person} returns this
 */
proto.io.Person.prototype.addOthernames = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 3, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.io.Person} returns this
 */
proto.io.Person.prototype.clearOthernamesList = function() {
  return this.setOthernamesList([]);
};


/**
 * optional string salutation = 4;
 * @return {string}
 */
proto.io.Person.prototype.getSalutation = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.Person} returns this
 */
proto.io.Person.prototype.setSalutation = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string suffix = 5;
 * @return {string}
 */
proto.io.Person.prototype.getSuffix = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.Person} returns this
 */
proto.io.Person.prototype.setSuffix = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional string displayName = 6;
 * @return {string}
 */
proto.io.Person.prototype.getDisplayname = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.Person} returns this
 */
proto.io.Person.prototype.setDisplayname = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional Gender gender = 7;
 * @return {!proto.io.Gender}
 */
proto.io.Person.prototype.getGender = function() {
  return /** @type {!proto.io.Gender} */ (jspb.Message.getFieldWithDefault(this, 7, 0));
};


/**
 * @param {!proto.io.Gender} value
 * @return {!proto.io.Person} returns this
 */
proto.io.Person.prototype.setGender = function(value) {
  return jspb.Message.setProto3EnumField(this, 7, value);
};


/**
 * optional Date dateOfBirth = 8;
 * @return {?proto.io.Date}
 */
proto.io.Person.prototype.getDateofbirth = function() {
  return /** @type{?proto.io.Date} */ (
    jspb.Message.getWrapperField(this, io_common_common_objects_pb.Date, 8));
};


/**
 * @param {?proto.io.Date|undefined} value
 * @return {!proto.io.Person} returns this
*/
proto.io.Person.prototype.setDateofbirth = function(value) {
  return jspb.Message.setWrapperField(this, 8, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.io.Person} returns this
 */
proto.io.Person.prototype.clearDateofbirth = function() {
  return this.setDateofbirth(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.io.Person.prototype.hasDateofbirth = function() {
  return jspb.Message.getField(this, 8) != null;
};


/**
 * optional string emailAddress = 9;
 * @return {string}
 */
proto.io.Person.prototype.getEmailaddress = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 9, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.Person} returns this
 */
proto.io.Person.prototype.setEmailaddress = function(value) {
  return jspb.Message.setProto3StringField(this, 9, value);
};


/**
 * optional string mobileNumber = 10;
 * @return {string}
 */
proto.io.Person.prototype.getMobilenumber = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 10, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.Person} returns this
 */
proto.io.Person.prototype.setMobilenumber = function(value) {
  return jspb.Message.setProto3StringField(this, 10, value);
};


/**
 * optional string externalId = 11;
 * @return {string}
 */
proto.io.Person.prototype.getExternalid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 11, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.Person} returns this
 */
proto.io.Person.prototype.setExternalid = function(value) {
  return jspb.Message.setProto3StringField(this, 11, value);
};


/**
 * map<int32, string> externalIds = 12;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<number,string>}
 */
proto.io.Person.prototype.getExternalidsMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<number,string>} */ (
      jspb.Message.getMapField(this, 12, opt_noLazyCreate,
      null));
};


/**
 * Clears values from the map. The map will be non-null.
 * @return {!proto.io.Person} returns this
 */
proto.io.Person.prototype.clearExternalidsMap = function() {
  this.getExternalidsMap().clear();
  return this;};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.io.Address.prototype.toObject = function(opt_includeInstance) {
  return proto.io.Address.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.io.Address} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.Address.toObject = function(includeInstance, msg) {
  var f, obj = {
    addressline1: jspb.Message.getFieldWithDefault(msg, 1, ""),
    addressline2: jspb.Message.getFieldWithDefault(msg, 2, ""),
    addressline3: jspb.Message.getFieldWithDefault(msg, 3, ""),
    city: jspb.Message.getFieldWithDefault(msg, 4, ""),
    state: jspb.Message.getFieldWithDefault(msg, 5, ""),
    zipcode: jspb.Message.getFieldWithDefault(msg, 6, ""),
    countrycode: jspb.Message.getFieldWithDefault(msg, 7, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.io.Address}
 */
proto.io.Address.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.io.Address;
  return proto.io.Address.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.io.Address} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.io.Address}
 */
proto.io.Address.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setAddressline1(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setAddressline2(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setAddressline3(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setCity(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setState(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setZipcode(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setCountrycode(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.io.Address.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.io.Address.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.io.Address} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.Address.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getAddressline1();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getAddressline2();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getAddressline3();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getCity();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getState();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getZipcode();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getCountrycode();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
};


/**
 * optional string addressLine1 = 1;
 * @return {string}
 */
proto.io.Address.prototype.getAddressline1 = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.Address} returns this
 */
proto.io.Address.prototype.setAddressline1 = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string addressLine2 = 2;
 * @return {string}
 */
proto.io.Address.prototype.getAddressline2 = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.Address} returns this
 */
proto.io.Address.prototype.setAddressline2 = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string addressLine3 = 3;
 * @return {string}
 */
proto.io.Address.prototype.getAddressline3 = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.Address} returns this
 */
proto.io.Address.prototype.setAddressline3 = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string city = 4;
 * @return {string}
 */
proto.io.Address.prototype.getCity = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.Address} returns this
 */
proto.io.Address.prototype.setCity = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string state = 5;
 * @return {string}
 */
proto.io.Address.prototype.getState = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.Address} returns this
 */
proto.io.Address.prototype.setState = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional string zipCode = 6;
 * @return {string}
 */
proto.io.Address.prototype.getZipcode = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.Address} returns this
 */
proto.io.Address.prototype.setZipcode = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional string countryCode = 7;
 * @return {string}
 */
proto.io.Address.prototype.getCountrycode = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.Address} returns this
 */
proto.io.Address.prototype.setCountrycode = function(value) {
  return jspb.Message.setProto3StringField(this, 7, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.io.PersonRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.io.PersonRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.io.PersonRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.PersonRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, ""),
    externalid: jspb.Message.getFieldWithDefault(msg, 2, ""),
    classid: jspb.Message.getFieldWithDefault(msg, 3, ""),
    person: (f = msg.getPerson()) && proto.io.Person.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.io.PersonRequest}
 */
proto.io.PersonRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.io.PersonRequest;
  return proto.io.PersonRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.io.PersonRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.io.PersonRequest}
 */
proto.io.PersonRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setExternalid(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setClassid(value);
      break;
    case 4:
      var value = new proto.io.Person;
      reader.readMessage(value,proto.io.Person.deserializeBinaryFromReader);
      msg.setPerson(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.io.PersonRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.io.PersonRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.io.PersonRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.PersonRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getExternalid();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getClassid();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getPerson();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      proto.io.Person.serializeBinaryToWriter
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.io.PersonRequest.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.PersonRequest} returns this
 */
proto.io.PersonRequest.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string externalId = 2;
 * @return {string}
 */
proto.io.PersonRequest.prototype.getExternalid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.PersonRequest} returns this
 */
proto.io.PersonRequest.prototype.setExternalid = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string classId = 3;
 * @return {string}
 */
proto.io.PersonRequest.prototype.getClassid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.PersonRequest} returns this
 */
proto.io.PersonRequest.prototype.setClassid = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional Person person = 4;
 * @return {?proto.io.Person}
 */
proto.io.PersonRequest.prototype.getPerson = function() {
  return /** @type{?proto.io.Person} */ (
    jspb.Message.getWrapperField(this, proto.io.Person, 4));
};


/**
 * @param {?proto.io.Person|undefined} value
 * @return {!proto.io.PersonRequest} returns this
*/
proto.io.PersonRequest.prototype.setPerson = function(value) {
  return jspb.Message.setWrapperField(this, 4, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.io.PersonRequest} returns this
 */
proto.io.PersonRequest.prototype.clearPerson = function() {
  return this.setPerson(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.io.PersonRequest.prototype.hasPerson = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * @enum {number}
 */
proto.io.Gender = {
  NOT_KNOWN: 0,
  MALE: 1,
  FEMALE: 2
};

goog.object.extend(exports, proto.io);
